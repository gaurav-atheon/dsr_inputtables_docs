
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'DSR'
version: '1.0.0'
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: 'dsr'

# These configurations specify where dbt should look for different types of files.
# The `source-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
source-paths: ["models"]
analysis-paths: ["analysis"]
test-paths: ["tests"]
data-paths: ["data"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]
asset-paths: ["assets"]
query-comment: "executed by {{ target.user }} in dbt"
target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
    - "target"
    - "dbt_modules"


# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/ directory
# as tables. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.
vars:
  dbt_artifacts:
    dbt_artifacts_database: 'AA_DBT_ARTIFACTS' # optional, default is your target database
    dbt_artifacts_schema: 'DSR_PROD' # optional, default is 'dbt_artifacts'
    #dbt_artifacts_table: 'your_table' # option
on-run-end:
  - "{{ grant_usage_to_schemas(schemas, 'dbt_analyst') }}"
models:
    #+post-hook: "grant usage on schema {{ target.schema }} to role dbt_analyst"
    DSR:
      +snowflake_warehouse: "DATA_TRANSFORM_M"
      facts:
        +snowflake_warehouse: "DATA_TRANSFORM_XL"
      dimensions:
        +snowflake_warehouse: "DATA_TRANSFORM_XL"
      staging:
        +snowflake_warehouse: "DATA_TRANSFORM_XL"
      output:
        analyst:
          +post-hook: "grant select on {{ this }} to role dbt_analyst"
    dbt_artifacts:
      +database: AA_DBT_ARTIFACTS
      +schema: RESULTS
      +materialized: table
      incremental:
        +materialized: incremental
      staging:
        +materialized: view # The staging tables cannot be ephemeral
    +pre-hook: "{{ tag_query() }}"

seeds:
  DSR:
    dimensions:
      organisation:
        master_organisation:
          +column_types:
            origin_organisation_number: varchar()
            business_organisation_number: varchar()
        seed_organisation_type:
          +column_types:
            origin_organisation_number: varchar()
            business_organisation_number: varchar()
      location:
        stg_location_ci:
          +column_types:
            GEOGRAPHIC_LOCATION: variant
      product:
        stg_sku_ci:
          +column_types:
            ATTRIBUTES: variant