{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/manifest/v2.json", "dbt_version": "0.20.0", "generated_at": "2021-09-15T10:53:02.504769Z", "invocation_id": "f239be10-76ac-46aa-98d2-7f63fbb0321a", "env": {}, "project_id": "2f83cd74c1361769a936e39b22fdc603", "user_id": "ff04761a-6095-4501-a427-7148d599a0f1", "send_anonymous_usage_stats": true, "adapter_type": "snowflake"}, "nodes": {"test.DSR.source_unique_combination_of_columns_dsr_input_input_promotion_creator_business_organisation_number__creator_origin_organisation_number__subject_origin_organisation_number__subject_business_organisation_number__promotion_number__start_date__end_date__organisation_sku__loaded_timestamp__prod.ee33c18097": {"raw_sql": "{{ test_unique_combination_of_columns(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_unique_combination_of_c_5a54c775b4bd782fa2aff09777a3a520\") }}", "test_metadata": {"name": "unique_combination_of_columns", "kwargs": {"combination_of_columns": ["creator_business_organisation_number", "creator_origin_organisation_number", "subject_origin_organisation_number", "subject_business_organisation_number", "promotion_number", "start_date", "end_date", "organisation_sku", "loaded_timestamp"], "env": "prod", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_promotion') }} where {{config.get('where')}}) input_promotion{% else %}{{ source('dsr_input', 'input_promotion') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_unique_combination_of_columns"], "nodes": ["source.DSR.dsr_input.input_promotion"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_unique_combination_of_c_5a54c775b4bd782fa2aff09777a3a520", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_unique_combination_of_columns_dsr_input_input_promotion_creator_business_organisation_number__creator_origin_organisation_number__subject_origin_organisation_number__subject_business_organisation_number__promotion_number__start_date__end_date__organisation_sku__loaded_timestamp__prod"], "unique_id": "test.DSR.source_unique_combination_of_columns_dsr_input_input_promotion_creator_business_organisation_number__creator_origin_organisation_number__subject_origin_organisation_number__subject_business_organisation_number__promotion_number__start_date__end_date__organisation_sku__loaded_timestamp__prod.ee33c18097", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_unique_combination_of_c_5a54c775b4bd782fa2aff09777a3a520.sql", "original_file_path": "models/staging/dimensions/promotion/src_dim_promotion.yml", "name": "source_unique_combination_of_columns_dsr_input_input_promotion_creator_business_organisation_number__creator_origin_organisation_number__subject_origin_organisation_number__subject_business_organisation_number__promotion_number__start_date__end_date__organisation_sku__loaded_timestamp__prod", "alias": "source_unique_combination_of_c_5a54c775b4bd782fa2aff09777a3a520", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_promotion"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/promotion/src_dim_promotion.yml/schema_test/source_unique_combination_of_c_5a54c775b4bd782fa2aff09777a3a520.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_unique_combination_of_c_5a54c775b4bd782fa2aff09777a3a520"}, "created_at": 1631703183, "compiled_sql": "\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": null}, "test.DSR.source_not_null_dsr_input_input_promotion_creator_business_organisation_number__prod.17b744b048": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_0bee88c40288a2ae7e9424b2607301c4\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "creator_business_organisation_number", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_promotion') }} where {{config.get('where')}}) input_promotion{% else %}{{ source('dsr_input', 'input_promotion') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_promotion"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_0bee88c40288a2ae7e9424b2607301c4", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_promotion_creator_business_organisation_number__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_promotion_creator_business_organisation_number__prod.17b744b048", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_0bee88c40288a2ae7e9424b2607301c4.sql", "original_file_path": "models/staging/dimensions/promotion/src_dim_promotion.yml", "name": "source_not_null_dsr_input_input_promotion_creator_business_organisation_number__prod", "alias": "source_not_null_dsr_input_inpu_0bee88c40288a2ae7e9424b2607301c4", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_promotion"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/promotion/src_dim_promotion.yml/schema_test/source_not_null_dsr_input_inpu_0bee88c40288a2ae7e9424b2607301c4.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_0bee88c40288a2ae7e9424b2607301c4"}, "created_at": 1631703183, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "creator_business_organisation_number"}, "test.DSR.source_not_null_dsr_input_input_promotion_creator_origin_organisation_number__prod.b4c67e1d16": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_84719656f710ba99e8bfe51153dbffbf\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "creator_origin_organisation_number", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_promotion') }} where {{config.get('where')}}) input_promotion{% else %}{{ source('dsr_input', 'input_promotion') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_promotion"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_84719656f710ba99e8bfe51153dbffbf", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_promotion_creator_origin_organisation_number__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_promotion_creator_origin_organisation_number__prod.b4c67e1d16", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_84719656f710ba99e8bfe51153dbffbf.sql", "original_file_path": "models/staging/dimensions/promotion/src_dim_promotion.yml", "name": "source_not_null_dsr_input_input_promotion_creator_origin_organisation_number__prod", "alias": "source_not_null_dsr_input_inpu_84719656f710ba99e8bfe51153dbffbf", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_promotion"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/promotion/src_dim_promotion.yml/schema_test/source_not_null_dsr_input_inpu_84719656f710ba99e8bfe51153dbffbf.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_84719656f710ba99e8bfe51153dbffbf"}, "created_at": 1631703183, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "creator_origin_organisation_number"}, "test.DSR.source_not_null_dsr_input_input_promotion_end_date__prod.9a85a7968a": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "end_date", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_promotion') }} where {{config.get('where')}}) input_promotion{% else %}{{ source('dsr_input', 'input_promotion') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_promotion"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_promotion_end_date__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_promotion_end_date__prod.9a85a7968a", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_input_promotion_end_date__prod.sql", "original_file_path": "models/staging/dimensions/promotion/src_dim_promotion.yml", "name": "source_not_null_dsr_input_input_promotion_end_date__prod", "alias": "source_not_null_dsr_input_input_promotion_end_date__prod", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_promotion"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/promotion/src_dim_promotion.yml/schema_test/source_not_null_dsr_input_input_promotion_end_date__prod.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1631703183, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "end_date"}, "test.DSR.source_not_null_dsr_input_input_promotion_organisation_sku__prod.e437cc1767": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_f2c478ebd5587fa20fed33a6aeed6931\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "organisation_sku", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_promotion') }} where {{config.get('where')}}) input_promotion{% else %}{{ source('dsr_input', 'input_promotion') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_promotion"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_f2c478ebd5587fa20fed33a6aeed6931", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_promotion_organisation_sku__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_promotion_organisation_sku__prod.e437cc1767", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_f2c478ebd5587fa20fed33a6aeed6931.sql", "original_file_path": "models/staging/dimensions/promotion/src_dim_promotion.yml", "name": "source_not_null_dsr_input_input_promotion_organisation_sku__prod", "alias": "source_not_null_dsr_input_inpu_f2c478ebd5587fa20fed33a6aeed6931", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_promotion"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/promotion/src_dim_promotion.yml/schema_test/source_not_null_dsr_input_inpu_f2c478ebd5587fa20fed33a6aeed6931.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_f2c478ebd5587fa20fed33a6aeed6931"}, "created_at": 1631703183, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "organisation_sku"}, "test.DSR.source_not_null_dsr_input_input_promotion_promotion_number__prod.861ae017eb": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_e3d3fcec2a821722b3c1e4c365c45768\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "promotion_number", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_promotion') }} where {{config.get('where')}}) input_promotion{% else %}{{ source('dsr_input', 'input_promotion') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_promotion"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_e3d3fcec2a821722b3c1e4c365c45768", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_promotion_promotion_number__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_promotion_promotion_number__prod.861ae017eb", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_e3d3fcec2a821722b3c1e4c365c45768.sql", "original_file_path": "models/staging/dimensions/promotion/src_dim_promotion.yml", "name": "source_not_null_dsr_input_input_promotion_promotion_number__prod", "alias": "source_not_null_dsr_input_inpu_e3d3fcec2a821722b3c1e4c365c45768", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_promotion"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/promotion/src_dim_promotion.yml/schema_test/source_not_null_dsr_input_inpu_e3d3fcec2a821722b3c1e4c365c45768.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_e3d3fcec2a821722b3c1e4c365c45768"}, "created_at": 1631703183, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "promotion_number"}, "test.DSR.source_not_null_dsr_input_input_promotion_start_date__prod.649551479f": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "start_date", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_promotion') }} where {{config.get('where')}}) input_promotion{% else %}{{ source('dsr_input', 'input_promotion') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_promotion"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_promotion_start_date__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_promotion_start_date__prod.649551479f", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_input_promotion_start_date__prod.sql", "original_file_path": "models/staging/dimensions/promotion/src_dim_promotion.yml", "name": "source_not_null_dsr_input_input_promotion_start_date__prod", "alias": "source_not_null_dsr_input_input_promotion_start_date__prod", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_promotion"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/promotion/src_dim_promotion.yml/schema_test/source_not_null_dsr_input_input_promotion_start_date__prod.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1631703183, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "start_date"}, "test.DSR.source_not_null_dsr_input_input_promotion_subject_business_organisation_number__prod.d759003f39": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_312f4273873dcf95b5bb03d02d785e73\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "subject_business_organisation_number", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_promotion') }} where {{config.get('where')}}) input_promotion{% else %}{{ source('dsr_input', 'input_promotion') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_promotion"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_312f4273873dcf95b5bb03d02d785e73", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_promotion_subject_business_organisation_number__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_promotion_subject_business_organisation_number__prod.d759003f39", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_312f4273873dcf95b5bb03d02d785e73.sql", "original_file_path": "models/staging/dimensions/promotion/src_dim_promotion.yml", "name": "source_not_null_dsr_input_input_promotion_subject_business_organisation_number__prod", "alias": "source_not_null_dsr_input_inpu_312f4273873dcf95b5bb03d02d785e73", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_promotion"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/promotion/src_dim_promotion.yml/schema_test/source_not_null_dsr_input_inpu_312f4273873dcf95b5bb03d02d785e73.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_312f4273873dcf95b5bb03d02d785e73"}, "created_at": 1631703183, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "subject_business_organisation_number"}, "test.DSR.source_not_null_dsr_input_input_promotion_subject_origin_organisation_number__prod.37dc33bc40": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_7eefa9aea09642e7513a8526315ec80c\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "subject_origin_organisation_number", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_promotion') }} where {{config.get('where')}}) input_promotion{% else %}{{ source('dsr_input', 'input_promotion') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_promotion"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_7eefa9aea09642e7513a8526315ec80c", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_promotion_subject_origin_organisation_number__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_promotion_subject_origin_organisation_number__prod.37dc33bc40", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_7eefa9aea09642e7513a8526315ec80c.sql", "original_file_path": "models/staging/dimensions/promotion/src_dim_promotion.yml", "name": "source_not_null_dsr_input_input_promotion_subject_origin_organisation_number__prod", "alias": "source_not_null_dsr_input_inpu_7eefa9aea09642e7513a8526315ec80c", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_promotion"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/promotion/src_dim_promotion.yml/schema_test/source_not_null_dsr_input_inpu_7eefa9aea09642e7513a8526315ec80c.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_7eefa9aea09642e7513a8526315ec80c"}, "created_at": 1631703183, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "subject_origin_organisation_number"}, "test.DSR.source_unique_combination_of_columns_dsr_input_input_date_day_date__prod.daec8cb4ff": {"raw_sql": "{{ test_unique_combination_of_columns(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_unique_combination_of_c_5eadffcde9e19f66a5dff75295d53ab3\") }}", "test_metadata": {"name": "unique_combination_of_columns", "kwargs": {"combination_of_columns": ["day_date"], "env": "prod", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_date') }} where {{config.get('where')}}) input_date{% else %}{{ source('dsr_input', 'input_date') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_unique_combination_of_columns"], "nodes": ["source.DSR.dsr_input.input_date"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_unique_combination_of_c_5eadffcde9e19f66a5dff75295d53ab3", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_unique_combination_of_columns_dsr_input_input_date_day_date__prod"], "unique_id": "test.DSR.source_unique_combination_of_columns_dsr_input_input_date_day_date__prod.daec8cb4ff", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_unique_combination_of_c_5eadffcde9e19f66a5dff75295d53ab3.sql", "original_file_path": "models/staging/dimensions/calendar/src_dim_calendar.yml", "name": "source_unique_combination_of_columns_dsr_input_input_date_day_date__prod", "alias": "source_unique_combination_of_c_5eadffcde9e19f66a5dff75295d53ab3", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_date"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/calendar/src_dim_calendar.yml/schema_test/source_unique_combination_of_c_5eadffcde9e19f66a5dff75295d53ab3.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_unique_combination_of_c_5eadffcde9e19f66a5dff75295d53ab3"}, "created_at": 1631703183, "compiled_sql": "\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": null}, "test.DSR.source_not_null_dsr_input_input_date_day_date__prod.eebebe4184": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "day_date", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_date') }} where {{config.get('where')}}) input_date{% else %}{{ source('dsr_input', 'input_date') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_date"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_date_day_date__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_date_day_date__prod.eebebe4184", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_input_date_day_date__prod.sql", "original_file_path": "models/staging/dimensions/calendar/src_dim_calendar.yml", "name": "source_not_null_dsr_input_input_date_day_date__prod", "alias": "source_not_null_dsr_input_input_date_day_date__prod", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_date"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/calendar/src_dim_calendar.yml/schema_test/source_not_null_dsr_input_input_date_day_date__prod.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1631703183, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "day_date"}, "test.DSR.source_unique_combination_of_columns_dsr_input_input_calendar_business_organisation_number__origin_organisation_number__day_date__loaded_timestamp__prod.6d088d8c19": {"raw_sql": "{{ test_unique_combination_of_columns(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_unique_combination_of_c_abac9462572977ec7ca05b68dafd9ce0\") }}", "test_metadata": {"name": "unique_combination_of_columns", "kwargs": {"combination_of_columns": ["business_organisation_number", "origin_organisation_number", "day_date", "loaded_timestamp"], "env": "prod", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_calendar') }} where {{config.get('where')}}) input_calendar{% else %}{{ source('dsr_input', 'input_calendar') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_unique_combination_of_columns"], "nodes": ["source.DSR.dsr_input.input_calendar"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_unique_combination_of_c_abac9462572977ec7ca05b68dafd9ce0", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_unique_combination_of_columns_dsr_input_input_calendar_business_organisation_number__origin_organisation_number__day_date__loaded_timestamp__prod"], "unique_id": "test.DSR.source_unique_combination_of_columns_dsr_input_input_calendar_business_organisation_number__origin_organisation_number__day_date__loaded_timestamp__prod.6d088d8c19", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_unique_combination_of_c_abac9462572977ec7ca05b68dafd9ce0.sql", "original_file_path": "models/staging/dimensions/calendar/src_dim_calendar.yml", "name": "source_unique_combination_of_columns_dsr_input_input_calendar_business_organisation_number__origin_organisation_number__day_date__loaded_timestamp__prod", "alias": "source_unique_combination_of_c_abac9462572977ec7ca05b68dafd9ce0", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_calendar"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/calendar/src_dim_calendar.yml/schema_test/source_unique_combination_of_c_abac9462572977ec7ca05b68dafd9ce0.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_unique_combination_of_c_abac9462572977ec7ca05b68dafd9ce0"}, "created_at": 1631703183, "compiled_sql": "\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": null}, "test.DSR.source_not_null_dsr_input_input_calendar_business_organisation_number__prod.69a9cdf300": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_428cfbb412c6b96e3fc85fa881111f9a\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "business_organisation_number", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_calendar') }} where {{config.get('where')}}) input_calendar{% else %}{{ source('dsr_input', 'input_calendar') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_calendar"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_428cfbb412c6b96e3fc85fa881111f9a", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_calendar_business_organisation_number__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_calendar_business_organisation_number__prod.69a9cdf300", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_428cfbb412c6b96e3fc85fa881111f9a.sql", "original_file_path": "models/staging/dimensions/calendar/src_dim_calendar.yml", "name": "source_not_null_dsr_input_input_calendar_business_organisation_number__prod", "alias": "source_not_null_dsr_input_inpu_428cfbb412c6b96e3fc85fa881111f9a", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_calendar"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/calendar/src_dim_calendar.yml/schema_test/source_not_null_dsr_input_inpu_428cfbb412c6b96e3fc85fa881111f9a.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_428cfbb412c6b96e3fc85fa881111f9a"}, "created_at": 1631703183, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "business_organisation_number"}, "test.DSR.source_not_null_dsr_input_input_calendar_day_date__prod.76f8ece26d": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "day_date", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_calendar') }} where {{config.get('where')}}) input_calendar{% else %}{{ source('dsr_input', 'input_calendar') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_calendar"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_calendar_day_date__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_calendar_day_date__prod.76f8ece26d", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_input_calendar_day_date__prod.sql", "original_file_path": "models/staging/dimensions/calendar/src_dim_calendar.yml", "name": "source_not_null_dsr_input_input_calendar_day_date__prod", "alias": "source_not_null_dsr_input_input_calendar_day_date__prod", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_calendar"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/calendar/src_dim_calendar.yml/schema_test/source_not_null_dsr_input_input_calendar_day_date__prod.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1631703183, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "day_date"}, "test.DSR.source_not_null_dsr_input_input_calendar_origin_organisation_number__prod.c9137d503e": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_466e6f3569849c2ee4ebe2300a64a117\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "origin_organisation_number", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_calendar') }} where {{config.get('where')}}) input_calendar{% else %}{{ source('dsr_input', 'input_calendar') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_calendar"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_466e6f3569849c2ee4ebe2300a64a117", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_calendar_origin_organisation_number__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_calendar_origin_organisation_number__prod.c9137d503e", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_466e6f3569849c2ee4ebe2300a64a117.sql", "original_file_path": "models/staging/dimensions/calendar/src_dim_calendar.yml", "name": "source_not_null_dsr_input_input_calendar_origin_organisation_number__prod", "alias": "source_not_null_dsr_input_inpu_466e6f3569849c2ee4ebe2300a64a117", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_calendar"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/calendar/src_dim_calendar.yml/schema_test/source_not_null_dsr_input_inpu_466e6f3569849c2ee4ebe2300a64a117.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_466e6f3569849c2ee4ebe2300a64a117"}, "created_at": 1631703183, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "origin_organisation_number"}, "test.DSR.source_unique_combination_of_columns_dsr_input_input_location_business_organisation_number__origin_organisation_number__organisation_location_id__location_function__loaded_timestamp__prod.e4f9b94a2c": {"raw_sql": "{{ test_unique_combination_of_columns(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_unique_combination_of_c_b746b29bb1cf1f32347b69c4773ff973\") }}", "test_metadata": {"name": "unique_combination_of_columns", "kwargs": {"combination_of_columns": ["business_organisation_number", "origin_organisation_number", "organisation_location_id", "location_function", "loaded_timestamp"], "env": "prod", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_location') }} where {{config.get('where')}}) input_location{% else %}{{ source('dsr_input', 'input_location') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_unique_combination_of_columns"], "nodes": ["source.DSR.dsr_input.input_location"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_unique_combination_of_c_b746b29bb1cf1f32347b69c4773ff973", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_unique_combination_of_columns_dsr_input_input_location_business_organisation_number__origin_organisation_number__organisation_location_id__location_function__loaded_timestamp__prod"], "unique_id": "test.DSR.source_unique_combination_of_columns_dsr_input_input_location_business_organisation_number__origin_organisation_number__organisation_location_id__location_function__loaded_timestamp__prod.e4f9b94a2c", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_unique_combination_of_c_b746b29bb1cf1f32347b69c4773ff973.sql", "original_file_path": "models/staging/dimensions/location/src_dim_location.yml", "name": "source_unique_combination_of_columns_dsr_input_input_location_business_organisation_number__origin_organisation_number__organisation_location_id__location_function__loaded_timestamp__prod", "alias": "source_unique_combination_of_c_b746b29bb1cf1f32347b69c4773ff973", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_location"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/location/src_dim_location.yml/schema_test/source_unique_combination_of_c_b746b29bb1cf1f32347b69c4773ff973.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_unique_combination_of_c_b746b29bb1cf1f32347b69c4773ff973"}, "created_at": 1631703183, "compiled_sql": "\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": null}, "test.DSR.source_not_null_dsr_input_input_location_business_organisation_number__prod.184616bc7b": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_92de2f3920b49d4046ac95d1b5c8823d\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "business_organisation_number", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_location') }} where {{config.get('where')}}) input_location{% else %}{{ source('dsr_input', 'input_location') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_location"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_92de2f3920b49d4046ac95d1b5c8823d", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_location_business_organisation_number__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_location_business_organisation_number__prod.184616bc7b", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_92de2f3920b49d4046ac95d1b5c8823d.sql", "original_file_path": "models/staging/dimensions/location/src_dim_location.yml", "name": "source_not_null_dsr_input_input_location_business_organisation_number__prod", "alias": "source_not_null_dsr_input_inpu_92de2f3920b49d4046ac95d1b5c8823d", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_location"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/location/src_dim_location.yml/schema_test/source_not_null_dsr_input_inpu_92de2f3920b49d4046ac95d1b5c8823d.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_92de2f3920b49d4046ac95d1b5c8823d"}, "created_at": 1631703183, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "business_organisation_number"}, "test.DSR.source_not_null_dsr_input_input_location_location_function__prod.7461a14a62": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_dbda56be16d72a04271bf4a597878dcd\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "location_function", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_location') }} where {{config.get('where')}}) input_location{% else %}{{ source('dsr_input', 'input_location') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_location"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_dbda56be16d72a04271bf4a597878dcd", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_location_location_function__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_location_location_function__prod.7461a14a62", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_dbda56be16d72a04271bf4a597878dcd.sql", "original_file_path": "models/staging/dimensions/location/src_dim_location.yml", "name": "source_not_null_dsr_input_input_location_location_function__prod", "alias": "source_not_null_dsr_input_inpu_dbda56be16d72a04271bf4a597878dcd", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_location"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/location/src_dim_location.yml/schema_test/source_not_null_dsr_input_inpu_dbda56be16d72a04271bf4a597878dcd.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_dbda56be16d72a04271bf4a597878dcd"}, "created_at": 1631703183, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "location_function"}, "test.DSR.source_not_null_dsr_input_input_location_organisation_location_id__prod.3394793195": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_13c099737d098b60436c2f9e8f2c3da0\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "organisation_location_id", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_location') }} where {{config.get('where')}}) input_location{% else %}{{ source('dsr_input', 'input_location') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_location"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_13c099737d098b60436c2f9e8f2c3da0", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_location_organisation_location_id__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_location_organisation_location_id__prod.3394793195", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_13c099737d098b60436c2f9e8f2c3da0.sql", "original_file_path": "models/staging/dimensions/location/src_dim_location.yml", "name": "source_not_null_dsr_input_input_location_organisation_location_id__prod", "alias": "source_not_null_dsr_input_inpu_13c099737d098b60436c2f9e8f2c3da0", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_location"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/location/src_dim_location.yml/schema_test/source_not_null_dsr_input_inpu_13c099737d098b60436c2f9e8f2c3da0.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_13c099737d098b60436c2f9e8f2c3da0"}, "created_at": 1631703183, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "organisation_location_id"}, "test.DSR.source_not_null_dsr_input_input_location_origin_organisation_number__prod.a00dae3370": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_254901f161139f60c7058272ae28af39\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "origin_organisation_number", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_location') }} where {{config.get('where')}}) input_location{% else %}{{ source('dsr_input', 'input_location') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_location"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_254901f161139f60c7058272ae28af39", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_location_origin_organisation_number__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_location_origin_organisation_number__prod.a00dae3370", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_254901f161139f60c7058272ae28af39.sql", "original_file_path": "models/staging/dimensions/location/src_dim_location.yml", "name": "source_not_null_dsr_input_input_location_origin_organisation_number__prod", "alias": "source_not_null_dsr_input_inpu_254901f161139f60c7058272ae28af39", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_location"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/location/src_dim_location.yml/schema_test/source_not_null_dsr_input_inpu_254901f161139f60c7058272ae28af39.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_254901f161139f60c7058272ae28af39"}, "created_at": 1631703183, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "origin_organisation_number"}, "test.DSR.source_unique_combination_of_columns_dsr_input_input_location_group_creator_origin_organisation_number__creator_business_organisation_number__organisation_location_id__subject_origin_organisation_number__subject_business_organisation_number__location_function__group_name__loaded_timestamp__prod.d7acf79c1a": {"raw_sql": "{{ test_unique_combination_of_columns(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_unique_combination_of_c_089f2290fe3b4c1ef55ef83242bc599e\") }}", "test_metadata": {"name": "unique_combination_of_columns", "kwargs": {"combination_of_columns": ["creator_origin_organisation_number", "creator_business_organisation_number", "organisation_location_id", "subject_origin_organisation_number", "subject_business_organisation_number", "location_function", "group_name", "loaded_timestamp"], "env": "prod", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_location_group') }} where {{config.get('where')}}) input_location_group{% else %}{{ source('dsr_input', 'input_location_group') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_unique_combination_of_columns"], "nodes": ["source.DSR.dsr_input.input_location_group"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_unique_combination_of_c_089f2290fe3b4c1ef55ef83242bc599e", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_unique_combination_of_columns_dsr_input_input_location_group_creator_origin_organisation_number__creator_business_organisation_number__organisation_location_id__subject_origin_organisation_number__subject_business_organisation_number__location_function__group_name__loaded_timestamp__prod"], "unique_id": "test.DSR.source_unique_combination_of_columns_dsr_input_input_location_group_creator_origin_organisation_number__creator_business_organisation_number__organisation_location_id__subject_origin_organisation_number__subject_business_organisation_number__location_function__group_name__loaded_timestamp__prod.d7acf79c1a", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_unique_combination_of_c_089f2290fe3b4c1ef55ef83242bc599e.sql", "original_file_path": "models/staging/dimensions/location/src_dim_location.yml", "name": "source_unique_combination_of_columns_dsr_input_input_location_group_creator_origin_organisation_number__creator_business_organisation_number__organisation_location_id__subject_origin_organisation_number__subject_business_organisation_number__location_function__group_name__loaded_timestamp__prod", "alias": "source_unique_combination_of_c_089f2290fe3b4c1ef55ef83242bc599e", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_location_group"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/location/src_dim_location.yml/schema_test/source_unique_combination_of_c_089f2290fe3b4c1ef55ef83242bc599e.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_unique_combination_of_c_089f2290fe3b4c1ef55ef83242bc599e"}, "created_at": 1631703183, "compiled_sql": "\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": null}, "test.DSR.source_not_null_dsr_input_input_location_group_creator_business_organisation_number__prod.9c4f67566c": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_8af4f39e2d03135c8a8ef1f72d702741\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "creator_business_organisation_number", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_location_group') }} where {{config.get('where')}}) input_location_group{% else %}{{ source('dsr_input', 'input_location_group') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_location_group"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_8af4f39e2d03135c8a8ef1f72d702741", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_location_group_creator_business_organisation_number__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_location_group_creator_business_organisation_number__prod.9c4f67566c", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_8af4f39e2d03135c8a8ef1f72d702741.sql", "original_file_path": "models/staging/dimensions/location/src_dim_location.yml", "name": "source_not_null_dsr_input_input_location_group_creator_business_organisation_number__prod", "alias": "source_not_null_dsr_input_inpu_8af4f39e2d03135c8a8ef1f72d702741", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_location_group"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/location/src_dim_location.yml/schema_test/source_not_null_dsr_input_inpu_8af4f39e2d03135c8a8ef1f72d702741.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_8af4f39e2d03135c8a8ef1f72d702741"}, "created_at": 1631703183, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "creator_business_organisation_number"}, "test.DSR.source_not_null_dsr_input_input_location_group_creator_origin_organisation_number__prod.ae7bd904d7": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_9bdb3af6dc107eb18a3bbec99d7b863f\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "creator_origin_organisation_number", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_location_group') }} where {{config.get('where')}}) input_location_group{% else %}{{ source('dsr_input', 'input_location_group') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_location_group"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_9bdb3af6dc107eb18a3bbec99d7b863f", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_location_group_creator_origin_organisation_number__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_location_group_creator_origin_organisation_number__prod.ae7bd904d7", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_9bdb3af6dc107eb18a3bbec99d7b863f.sql", "original_file_path": "models/staging/dimensions/location/src_dim_location.yml", "name": "source_not_null_dsr_input_input_location_group_creator_origin_organisation_number__prod", "alias": "source_not_null_dsr_input_inpu_9bdb3af6dc107eb18a3bbec99d7b863f", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_location_group"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/location/src_dim_location.yml/schema_test/source_not_null_dsr_input_inpu_9bdb3af6dc107eb18a3bbec99d7b863f.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_9bdb3af6dc107eb18a3bbec99d7b863f"}, "created_at": 1631703183, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "creator_origin_organisation_number"}, "test.DSR.source_not_null_dsr_input_input_location_group_group_name__prod.52523df736": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "group_name", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_location_group') }} where {{config.get('where')}}) input_location_group{% else %}{{ source('dsr_input', 'input_location_group') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_location_group"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_location_group_group_name__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_location_group_group_name__prod.52523df736", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_input_location_group_group_name__prod.sql", "original_file_path": "models/staging/dimensions/location/src_dim_location.yml", "name": "source_not_null_dsr_input_input_location_group_group_name__prod", "alias": "source_not_null_dsr_input_input_location_group_group_name__prod", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_location_group"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/location/src_dim_location.yml/schema_test/source_not_null_dsr_input_input_location_group_group_name__prod.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1631703183, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "group_name"}, "test.DSR.source_not_null_dsr_input_input_location_group_location_function__prod.1fccbbd213": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_36e7c28c6052f29786628abe9cdbd514\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "location_function", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_location_group') }} where {{config.get('where')}}) input_location_group{% else %}{{ source('dsr_input', 'input_location_group') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_location_group"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_36e7c28c6052f29786628abe9cdbd514", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_location_group_location_function__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_location_group_location_function__prod.1fccbbd213", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_36e7c28c6052f29786628abe9cdbd514.sql", "original_file_path": "models/staging/dimensions/location/src_dim_location.yml", "name": "source_not_null_dsr_input_input_location_group_location_function__prod", "alias": "source_not_null_dsr_input_inpu_36e7c28c6052f29786628abe9cdbd514", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_location_group"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/location/src_dim_location.yml/schema_test/source_not_null_dsr_input_inpu_36e7c28c6052f29786628abe9cdbd514.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_36e7c28c6052f29786628abe9cdbd514"}, "created_at": 1631703183, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "location_function"}, "test.DSR.source_not_null_dsr_input_input_location_group_organisation_location_id__prod.f5a291a0a4": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_1de452a6cb8471f6050d13cfcebc294a\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "organisation_location_id", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_location_group') }} where {{config.get('where')}}) input_location_group{% else %}{{ source('dsr_input', 'input_location_group') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_location_group"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_1de452a6cb8471f6050d13cfcebc294a", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_location_group_organisation_location_id__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_location_group_organisation_location_id__prod.f5a291a0a4", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_1de452a6cb8471f6050d13cfcebc294a.sql", "original_file_path": "models/staging/dimensions/location/src_dim_location.yml", "name": "source_not_null_dsr_input_input_location_group_organisation_location_id__prod", "alias": "source_not_null_dsr_input_inpu_1de452a6cb8471f6050d13cfcebc294a", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_location_group"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/location/src_dim_location.yml/schema_test/source_not_null_dsr_input_inpu_1de452a6cb8471f6050d13cfcebc294a.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_1de452a6cb8471f6050d13cfcebc294a"}, "created_at": 1631703183, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "organisation_location_id"}, "test.DSR.source_not_null_dsr_input_input_location_group_subject_business_organisation_number__prod.4fe4a63d73": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_5b26be74b1dd237227cb9097e0d725f3\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "subject_business_organisation_number", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_location_group') }} where {{config.get('where')}}) input_location_group{% else %}{{ source('dsr_input', 'input_location_group') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_location_group"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_5b26be74b1dd237227cb9097e0d725f3", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_location_group_subject_business_organisation_number__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_location_group_subject_business_organisation_number__prod.4fe4a63d73", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_5b26be74b1dd237227cb9097e0d725f3.sql", "original_file_path": "models/staging/dimensions/location/src_dim_location.yml", "name": "source_not_null_dsr_input_input_location_group_subject_business_organisation_number__prod", "alias": "source_not_null_dsr_input_inpu_5b26be74b1dd237227cb9097e0d725f3", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_location_group"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/location/src_dim_location.yml/schema_test/source_not_null_dsr_input_inpu_5b26be74b1dd237227cb9097e0d725f3.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_5b26be74b1dd237227cb9097e0d725f3"}, "created_at": 1631703183, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "subject_business_organisation_number"}, "test.DSR.source_not_null_dsr_input_input_location_group_subject_origin_organisation_number__prod.df5f54f52b": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_25ae649b9887a4c9cb5a26c09fa151e5\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "subject_origin_organisation_number", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_location_group') }} where {{config.get('where')}}) input_location_group{% else %}{{ source('dsr_input', 'input_location_group') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_location_group"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_25ae649b9887a4c9cb5a26c09fa151e5", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_location_group_subject_origin_organisation_number__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_location_group_subject_origin_organisation_number__prod.df5f54f52b", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_25ae649b9887a4c9cb5a26c09fa151e5.sql", "original_file_path": "models/staging/dimensions/location/src_dim_location.yml", "name": "source_not_null_dsr_input_input_location_group_subject_origin_organisation_number__prod", "alias": "source_not_null_dsr_input_inpu_25ae649b9887a4c9cb5a26c09fa151e5", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_location_group"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/location/src_dim_location.yml/schema_test/source_not_null_dsr_input_inpu_25ae649b9887a4c9cb5a26c09fa151e5.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_25ae649b9887a4c9cb5a26c09fa151e5"}, "created_at": 1631703183, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "subject_origin_organisation_number"}, "test.DSR.source_unique_combination_of_columns_dsr_input_input_location_parentage_subject_origin_organisation_number__subject_business_organisation_number__subject_organisation_location_id__subject_location_function__parent_origin_organisation_number__parent_business_organisation_number__parent_organisation_location_id__parent_location_function__creator_origin_organisation_number__creator_business_organisation_number__loaded_timestamp__prod.c32c9d1b28": {"raw_sql": "{{ test_unique_combination_of_columns(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_unique_combination_of_c_5f8324106a08d6cae98c8324815a5577\") }}", "test_metadata": {"name": "unique_combination_of_columns", "kwargs": {"combination_of_columns": ["subject_origin_organisation_number", "subject_business_organisation_number", "subject_organisation_location_id", "subject_location_function", "parent_origin_organisation_number", "parent_business_organisation_number", "parent_organisation_location_id", "parent_location_function", "creator_origin_organisation_number", "creator_business_organisation_number", "loaded_timestamp"], "env": "prod", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_location_parentage') }} where {{config.get('where')}}) input_location_parentage{% else %}{{ source('dsr_input', 'input_location_parentage') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_unique_combination_of_columns"], "nodes": ["source.DSR.dsr_input.input_location_parentage"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_unique_combination_of_c_5f8324106a08d6cae98c8324815a5577", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_unique_combination_of_columns_dsr_input_input_location_parentage_subject_origin_organisation_number__subject_business_organisation_number__subject_organisation_location_id__subject_location_function__parent_origin_organisation_number__parent_business_organisation_number__parent_organisation_location_id__parent_location_function__creator_origin_organisation_number__creator_business_organisation_number__loaded_timestamp__prod"], "unique_id": "test.DSR.source_unique_combination_of_columns_dsr_input_input_location_parentage_subject_origin_organisation_number__subject_business_organisation_number__subject_organisation_location_id__subject_location_function__parent_origin_organisation_number__parent_business_organisation_number__parent_organisation_location_id__parent_location_function__creator_origin_organisation_number__creator_business_organisation_number__loaded_timestamp__prod.c32c9d1b28", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_unique_combination_of_c_5f8324106a08d6cae98c8324815a5577.sql", "original_file_path": "models/staging/dimensions/location/src_dim_location.yml", "name": "source_unique_combination_of_columns_dsr_input_input_location_parentage_subject_origin_organisation_number__subject_business_organisation_number__subject_organisation_location_id__subject_location_function__parent_origin_organisation_number__parent_business_organisation_number__parent_organisation_location_id__parent_location_function__creator_origin_organisation_number__creator_business_organisation_number__loaded_timestamp__prod", "alias": "source_unique_combination_of_c_5f8324106a08d6cae98c8324815a5577", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_location_parentage"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/location/src_dim_location.yml/schema_test/source_unique_combination_of_c_5f8324106a08d6cae98c8324815a5577.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_unique_combination_of_c_5f8324106a08d6cae98c8324815a5577"}, "created_at": 1631703183, "compiled_sql": "\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": null}, "test.DSR.source_not_null_dsr_input_input_location_parentage_creator_business_organisation_number__prod.feeed9bdea": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_2c68fc5053bb0fc9c13050fb639998cb\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "creator_business_organisation_number", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_location_parentage') }} where {{config.get('where')}}) input_location_parentage{% else %}{{ source('dsr_input', 'input_location_parentage') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_location_parentage"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_2c68fc5053bb0fc9c13050fb639998cb", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_location_parentage_creator_business_organisation_number__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_location_parentage_creator_business_organisation_number__prod.feeed9bdea", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_2c68fc5053bb0fc9c13050fb639998cb.sql", "original_file_path": "models/staging/dimensions/location/src_dim_location.yml", "name": "source_not_null_dsr_input_input_location_parentage_creator_business_organisation_number__prod", "alias": "source_not_null_dsr_input_inpu_2c68fc5053bb0fc9c13050fb639998cb", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_location_parentage"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/location/src_dim_location.yml/schema_test/source_not_null_dsr_input_inpu_2c68fc5053bb0fc9c13050fb639998cb.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_2c68fc5053bb0fc9c13050fb639998cb"}, "created_at": 1631703183, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "creator_business_organisation_number"}, "test.DSR.source_not_null_dsr_input_input_location_parentage_creator_origin_organisation_number__prod.402412278a": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_5663a8d62e6b3c39a08232815a5c2210\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "creator_origin_organisation_number", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_location_parentage') }} where {{config.get('where')}}) input_location_parentage{% else %}{{ source('dsr_input', 'input_location_parentage') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_location_parentage"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_5663a8d62e6b3c39a08232815a5c2210", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_location_parentage_creator_origin_organisation_number__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_location_parentage_creator_origin_organisation_number__prod.402412278a", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_5663a8d62e6b3c39a08232815a5c2210.sql", "original_file_path": "models/staging/dimensions/location/src_dim_location.yml", "name": "source_not_null_dsr_input_input_location_parentage_creator_origin_organisation_number__prod", "alias": "source_not_null_dsr_input_inpu_5663a8d62e6b3c39a08232815a5c2210", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_location_parentage"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/location/src_dim_location.yml/schema_test/source_not_null_dsr_input_inpu_5663a8d62e6b3c39a08232815a5c2210.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_5663a8d62e6b3c39a08232815a5c2210"}, "created_at": 1631703183, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "creator_origin_organisation_number"}, "test.DSR.source_not_null_dsr_input_input_location_parentage_parent_business_organisation_number__prod.f5f14448b6": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_37f444927a74fb7565529a307408c6e0\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "parent_business_organisation_number", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_location_parentage') }} where {{config.get('where')}}) input_location_parentage{% else %}{{ source('dsr_input', 'input_location_parentage') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_location_parentage"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_37f444927a74fb7565529a307408c6e0", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_location_parentage_parent_business_organisation_number__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_location_parentage_parent_business_organisation_number__prod.f5f14448b6", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_37f444927a74fb7565529a307408c6e0.sql", "original_file_path": "models/staging/dimensions/location/src_dim_location.yml", "name": "source_not_null_dsr_input_input_location_parentage_parent_business_organisation_number__prod", "alias": "source_not_null_dsr_input_inpu_37f444927a74fb7565529a307408c6e0", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_location_parentage"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/location/src_dim_location.yml/schema_test/source_not_null_dsr_input_inpu_37f444927a74fb7565529a307408c6e0.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_37f444927a74fb7565529a307408c6e0"}, "created_at": 1631703183, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "parent_business_organisation_number"}, "test.DSR.source_not_null_dsr_input_input_location_parentage_parent_location_function__prod.e8a5793613": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_000bd28a2870b243fb10e5efc40354bf\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "parent_location_function", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_location_parentage') }} where {{config.get('where')}}) input_location_parentage{% else %}{{ source('dsr_input', 'input_location_parentage') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_location_parentage"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_000bd28a2870b243fb10e5efc40354bf", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_location_parentage_parent_location_function__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_location_parentage_parent_location_function__prod.e8a5793613", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_000bd28a2870b243fb10e5efc40354bf.sql", "original_file_path": "models/staging/dimensions/location/src_dim_location.yml", "name": "source_not_null_dsr_input_input_location_parentage_parent_location_function__prod", "alias": "source_not_null_dsr_input_inpu_000bd28a2870b243fb10e5efc40354bf", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_location_parentage"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/location/src_dim_location.yml/schema_test/source_not_null_dsr_input_inpu_000bd28a2870b243fb10e5efc40354bf.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_000bd28a2870b243fb10e5efc40354bf"}, "created_at": 1631703183, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "parent_location_function"}, "test.DSR.source_not_null_dsr_input_input_location_parentage_parent_organisation_location_id__prod.4f5e8cefe7": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_479739b7b65214bab590882d7b94f0d6\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "parent_organisation_location_id", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_location_parentage') }} where {{config.get('where')}}) input_location_parentage{% else %}{{ source('dsr_input', 'input_location_parentage') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_location_parentage"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_479739b7b65214bab590882d7b94f0d6", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_location_parentage_parent_organisation_location_id__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_location_parentage_parent_organisation_location_id__prod.4f5e8cefe7", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_479739b7b65214bab590882d7b94f0d6.sql", "original_file_path": "models/staging/dimensions/location/src_dim_location.yml", "name": "source_not_null_dsr_input_input_location_parentage_parent_organisation_location_id__prod", "alias": "source_not_null_dsr_input_inpu_479739b7b65214bab590882d7b94f0d6", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_location_parentage"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/location/src_dim_location.yml/schema_test/source_not_null_dsr_input_inpu_479739b7b65214bab590882d7b94f0d6.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_479739b7b65214bab590882d7b94f0d6"}, "created_at": 1631703183, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "parent_organisation_location_id"}, "test.DSR.source_not_null_dsr_input_input_location_parentage_parent_origin_organisation_number__prod.2b70e2ebd6": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_0eec5cc3757fe06a8776796c01f9cc80\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "parent_origin_organisation_number", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_location_parentage') }} where {{config.get('where')}}) input_location_parentage{% else %}{{ source('dsr_input', 'input_location_parentage') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_location_parentage"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_0eec5cc3757fe06a8776796c01f9cc80", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_location_parentage_parent_origin_organisation_number__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_location_parentage_parent_origin_organisation_number__prod.2b70e2ebd6", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_0eec5cc3757fe06a8776796c01f9cc80.sql", "original_file_path": "models/staging/dimensions/location/src_dim_location.yml", "name": "source_not_null_dsr_input_input_location_parentage_parent_origin_organisation_number__prod", "alias": "source_not_null_dsr_input_inpu_0eec5cc3757fe06a8776796c01f9cc80", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_location_parentage"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/location/src_dim_location.yml/schema_test/source_not_null_dsr_input_inpu_0eec5cc3757fe06a8776796c01f9cc80.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_0eec5cc3757fe06a8776796c01f9cc80"}, "created_at": 1631703183, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "parent_origin_organisation_number"}, "test.DSR.source_not_null_dsr_input_input_location_parentage_subject_business_organisation_number__prod.c075fdf360": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_91ee96e7c09f5a3c923fb9f5596cd026\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "subject_business_organisation_number", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_location_parentage') }} where {{config.get('where')}}) input_location_parentage{% else %}{{ source('dsr_input', 'input_location_parentage') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_location_parentage"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_91ee96e7c09f5a3c923fb9f5596cd026", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_location_parentage_subject_business_organisation_number__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_location_parentage_subject_business_organisation_number__prod.c075fdf360", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_91ee96e7c09f5a3c923fb9f5596cd026.sql", "original_file_path": "models/staging/dimensions/location/src_dim_location.yml", "name": "source_not_null_dsr_input_input_location_parentage_subject_business_organisation_number__prod", "alias": "source_not_null_dsr_input_inpu_91ee96e7c09f5a3c923fb9f5596cd026", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_location_parentage"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/location/src_dim_location.yml/schema_test/source_not_null_dsr_input_inpu_91ee96e7c09f5a3c923fb9f5596cd026.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_91ee96e7c09f5a3c923fb9f5596cd026"}, "created_at": 1631703183, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "subject_business_organisation_number"}, "test.DSR.source_not_null_dsr_input_input_location_parentage_subject_location_function__prod.de6e44abf2": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_26d6b16ba5b031848890f484520a1d77\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "subject_location_function", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_location_parentage') }} where {{config.get('where')}}) input_location_parentage{% else %}{{ source('dsr_input', 'input_location_parentage') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_location_parentage"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_26d6b16ba5b031848890f484520a1d77", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_location_parentage_subject_location_function__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_location_parentage_subject_location_function__prod.de6e44abf2", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_26d6b16ba5b031848890f484520a1d77.sql", "original_file_path": "models/staging/dimensions/location/src_dim_location.yml", "name": "source_not_null_dsr_input_input_location_parentage_subject_location_function__prod", "alias": "source_not_null_dsr_input_inpu_26d6b16ba5b031848890f484520a1d77", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_location_parentage"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/location/src_dim_location.yml/schema_test/source_not_null_dsr_input_inpu_26d6b16ba5b031848890f484520a1d77.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_26d6b16ba5b031848890f484520a1d77"}, "created_at": 1631703183, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "subject_location_function"}, "test.DSR.source_not_null_dsr_input_input_location_parentage_subject_organisation_location_id__prod.b7bcbd7feb": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_fdf26bc2775bc839b36ca699dca725e4\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "subject_organisation_location_id", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_location_parentage') }} where {{config.get('where')}}) input_location_parentage{% else %}{{ source('dsr_input', 'input_location_parentage') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_location_parentage"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_fdf26bc2775bc839b36ca699dca725e4", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_location_parentage_subject_organisation_location_id__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_location_parentage_subject_organisation_location_id__prod.b7bcbd7feb", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_fdf26bc2775bc839b36ca699dca725e4.sql", "original_file_path": "models/staging/dimensions/location/src_dim_location.yml", "name": "source_not_null_dsr_input_input_location_parentage_subject_organisation_location_id__prod", "alias": "source_not_null_dsr_input_inpu_fdf26bc2775bc839b36ca699dca725e4", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_location_parentage"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/location/src_dim_location.yml/schema_test/source_not_null_dsr_input_inpu_fdf26bc2775bc839b36ca699dca725e4.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_fdf26bc2775bc839b36ca699dca725e4"}, "created_at": 1631703183, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "subject_organisation_location_id"}, "test.DSR.source_not_null_dsr_input_input_location_parentage_subject_origin_organisation_number__prod.1a097d2893": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_3dedb76263da599b7508705a01c657d6\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "subject_origin_organisation_number", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_location_parentage') }} where {{config.get('where')}}) input_location_parentage{% else %}{{ source('dsr_input', 'input_location_parentage') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_location_parentage"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_3dedb76263da599b7508705a01c657d6", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_location_parentage_subject_origin_organisation_number__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_location_parentage_subject_origin_organisation_number__prod.1a097d2893", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_3dedb76263da599b7508705a01c657d6.sql", "original_file_path": "models/staging/dimensions/location/src_dim_location.yml", "name": "source_not_null_dsr_input_input_location_parentage_subject_origin_organisation_number__prod", "alias": "source_not_null_dsr_input_inpu_3dedb76263da599b7508705a01c657d6", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_location_parentage"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/location/src_dim_location.yml/schema_test/source_not_null_dsr_input_inpu_3dedb76263da599b7508705a01c657d6.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_3dedb76263da599b7508705a01c657d6"}, "created_at": 1631703183, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "subject_origin_organisation_number"}, "test.DSR.source_unique_combination_of_columns_dsr_input_input_case_business_organisation_number__origin_organisation_number__organisation_case__organisation_sku__case_size__loaded_timestamp__prod.c16d710caa": {"raw_sql": "{{ test_unique_combination_of_columns(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_unique_combination_of_c_3bb1424909d584dea25ff06a548d9c03\") }}", "test_metadata": {"name": "unique_combination_of_columns", "kwargs": {"combination_of_columns": ["business_organisation_number", "origin_organisation_number", "organisation_case", "organisation_sku", "case_size", "loaded_timestamp"], "env": "prod", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_case') }} where {{config.get('where')}}) input_case{% else %}{{ source('dsr_input', 'input_case') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_unique_combination_of_columns"], "nodes": ["source.DSR.dsr_input.input_case"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_unique_combination_of_c_3bb1424909d584dea25ff06a548d9c03", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_unique_combination_of_columns_dsr_input_input_case_business_organisation_number__origin_organisation_number__organisation_case__organisation_sku__case_size__loaded_timestamp__prod"], "unique_id": "test.DSR.source_unique_combination_of_columns_dsr_input_input_case_business_organisation_number__origin_organisation_number__organisation_case__organisation_sku__case_size__loaded_timestamp__prod.c16d710caa", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_unique_combination_of_c_3bb1424909d584dea25ff06a548d9c03.sql", "original_file_path": "models/staging/dimensions/logistic_item/src_dim_logistic_item.yml", "name": "source_unique_combination_of_columns_dsr_input_input_case_business_organisation_number__origin_organisation_number__organisation_case__organisation_sku__case_size__loaded_timestamp__prod", "alias": "source_unique_combination_of_c_3bb1424909d584dea25ff06a548d9c03", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_case"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/logistic_item/src_dim_logistic_item.yml/schema_test/source_unique_combination_of_c_3bb1424909d584dea25ff06a548d9c03.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_unique_combination_of_c_3bb1424909d584dea25ff06a548d9c03"}, "created_at": 1631703183, "compiled_sql": "\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": null}, "test.DSR.source_not_null_dsr_input_input_case_business_organisation_number__prod.30c50ece7b": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_be6d63ea8eb8cb32f83ae5cebe5cdd93\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "business_organisation_number", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_case') }} where {{config.get('where')}}) input_case{% else %}{{ source('dsr_input', 'input_case') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_case"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_be6d63ea8eb8cb32f83ae5cebe5cdd93", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_case_business_organisation_number__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_case_business_organisation_number__prod.30c50ece7b", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_be6d63ea8eb8cb32f83ae5cebe5cdd93.sql", "original_file_path": "models/staging/dimensions/logistic_item/src_dim_logistic_item.yml", "name": "source_not_null_dsr_input_input_case_business_organisation_number__prod", "alias": "source_not_null_dsr_input_inpu_be6d63ea8eb8cb32f83ae5cebe5cdd93", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_case"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/logistic_item/src_dim_logistic_item.yml/schema_test/source_not_null_dsr_input_inpu_be6d63ea8eb8cb32f83ae5cebe5cdd93.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_be6d63ea8eb8cb32f83ae5cebe5cdd93"}, "created_at": 1631703183, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "business_organisation_number"}, "test.DSR.source_not_null_dsr_input_input_case_case_size__prod.a769f1420e": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "case_size", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_case') }} where {{config.get('where')}}) input_case{% else %}{{ source('dsr_input', 'input_case') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_case"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_case_case_size__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_case_case_size__prod.a769f1420e", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_input_case_case_size__prod.sql", "original_file_path": "models/staging/dimensions/logistic_item/src_dim_logistic_item.yml", "name": "source_not_null_dsr_input_input_case_case_size__prod", "alias": "source_not_null_dsr_input_input_case_case_size__prod", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_case"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/logistic_item/src_dim_logistic_item.yml/schema_test/source_not_null_dsr_input_input_case_case_size__prod.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1631703183, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "case_size"}, "test.DSR.source_not_null_dsr_input_input_case_organisation_case__prod.9af11ba595": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "organisation_case", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_case') }} where {{config.get('where')}}) input_case{% else %}{{ source('dsr_input', 'input_case') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_case"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_case_organisation_case__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_case_organisation_case__prod.9af11ba595", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_input_case_organisation_case__prod.sql", "original_file_path": "models/staging/dimensions/logistic_item/src_dim_logistic_item.yml", "name": "source_not_null_dsr_input_input_case_organisation_case__prod", "alias": "source_not_null_dsr_input_input_case_organisation_case__prod", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_case"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/logistic_item/src_dim_logistic_item.yml/schema_test/source_not_null_dsr_input_input_case_organisation_case__prod.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1631703183, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "organisation_case"}, "test.DSR.source_not_null_dsr_input_input_case_organisation_sku__prod.716e8b4fb4": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "organisation_sku", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_case') }} where {{config.get('where')}}) input_case{% else %}{{ source('dsr_input', 'input_case') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_case"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_case_organisation_sku__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_case_organisation_sku__prod.716e8b4fb4", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_input_case_organisation_sku__prod.sql", "original_file_path": "models/staging/dimensions/logistic_item/src_dim_logistic_item.yml", "name": "source_not_null_dsr_input_input_case_organisation_sku__prod", "alias": "source_not_null_dsr_input_input_case_organisation_sku__prod", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_case"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/logistic_item/src_dim_logistic_item.yml/schema_test/source_not_null_dsr_input_input_case_organisation_sku__prod.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1631703183, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "organisation_sku"}, "test.DSR.source_not_null_dsr_input_input_case_origin_organisation_number__prod.5f8386e20e": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_82c986ebca41fbb2a30299ac3000df00\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "origin_organisation_number", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_case') }} where {{config.get('where')}}) input_case{% else %}{{ source('dsr_input', 'input_case') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_case"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_82c986ebca41fbb2a30299ac3000df00", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_case_origin_organisation_number__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_case_origin_organisation_number__prod.5f8386e20e", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_82c986ebca41fbb2a30299ac3000df00.sql", "original_file_path": "models/staging/dimensions/logistic_item/src_dim_logistic_item.yml", "name": "source_not_null_dsr_input_input_case_origin_organisation_number__prod", "alias": "source_not_null_dsr_input_inpu_82c986ebca41fbb2a30299ac3000df00", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_case"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/logistic_item/src_dim_logistic_item.yml/schema_test/source_not_null_dsr_input_inpu_82c986ebca41fbb2a30299ac3000df00.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_82c986ebca41fbb2a30299ac3000df00"}, "created_at": 1631703183, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "origin_organisation_number"}, "test.DSR.source_unique_combination_of_columns_dsr_input_input_case_grouping_creator_business_organisation_number__creator_origin_organisation_number__organisation_case__subject_origin_organisation_number__subject_business_organisation_number__grouping_key__loaded_timestamp__prod.0a81ded6b2": {"raw_sql": "{{ test_unique_combination_of_columns(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_unique_combination_of_c_782b790908afd9e3bfba744ed99bc4e9\") }}", "test_metadata": {"name": "unique_combination_of_columns", "kwargs": {"combination_of_columns": ["creator_business_organisation_number", "creator_origin_organisation_number", "organisation_case", "subject_origin_organisation_number", "subject_business_organisation_number", "grouping_key", "loaded_timestamp"], "env": "prod", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_case_grouping') }} where {{config.get('where')}}) input_case_grouping{% else %}{{ source('dsr_input', 'input_case_grouping') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_unique_combination_of_columns"], "nodes": ["source.DSR.dsr_input.input_case_grouping"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_unique_combination_of_c_782b790908afd9e3bfba744ed99bc4e9", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_unique_combination_of_columns_dsr_input_input_case_grouping_creator_business_organisation_number__creator_origin_organisation_number__organisation_case__subject_origin_organisation_number__subject_business_organisation_number__grouping_key__loaded_timestamp__prod"], "unique_id": "test.DSR.source_unique_combination_of_columns_dsr_input_input_case_grouping_creator_business_organisation_number__creator_origin_organisation_number__organisation_case__subject_origin_organisation_number__subject_business_organisation_number__grouping_key__loaded_timestamp__prod.0a81ded6b2", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_unique_combination_of_c_782b790908afd9e3bfba744ed99bc4e9.sql", "original_file_path": "models/staging/dimensions/logistic_item/src_dim_logistic_item.yml", "name": "source_unique_combination_of_columns_dsr_input_input_case_grouping_creator_business_organisation_number__creator_origin_organisation_number__organisation_case__subject_origin_organisation_number__subject_business_organisation_number__grouping_key__loaded_timestamp__prod", "alias": "source_unique_combination_of_c_782b790908afd9e3bfba744ed99bc4e9", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_case_grouping"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/logistic_item/src_dim_logistic_item.yml/schema_test/source_unique_combination_of_c_782b790908afd9e3bfba744ed99bc4e9.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_unique_combination_of_c_782b790908afd9e3bfba744ed99bc4e9"}, "created_at": 1631703183, "compiled_sql": "\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": null}, "test.DSR.source_not_null_dsr_input_input_case_grouping_creator_business_organisation_number__prod.c5142b9338": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_e2ad2cfdf4fb17ca69dfd697d9318fa3\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "creator_business_organisation_number", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_case_grouping') }} where {{config.get('where')}}) input_case_grouping{% else %}{{ source('dsr_input', 'input_case_grouping') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_case_grouping"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_e2ad2cfdf4fb17ca69dfd697d9318fa3", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_case_grouping_creator_business_organisation_number__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_case_grouping_creator_business_organisation_number__prod.c5142b9338", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_e2ad2cfdf4fb17ca69dfd697d9318fa3.sql", "original_file_path": "models/staging/dimensions/logistic_item/src_dim_logistic_item.yml", "name": "source_not_null_dsr_input_input_case_grouping_creator_business_organisation_number__prod", "alias": "source_not_null_dsr_input_inpu_e2ad2cfdf4fb17ca69dfd697d9318fa3", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_case_grouping"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/logistic_item/src_dim_logistic_item.yml/schema_test/source_not_null_dsr_input_inpu_e2ad2cfdf4fb17ca69dfd697d9318fa3.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_e2ad2cfdf4fb17ca69dfd697d9318fa3"}, "created_at": 1631703183, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "creator_business_organisation_number"}, "test.DSR.source_not_null_dsr_input_input_case_grouping_creator_origin_organisation_number__prod.c5e2731fa2": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_eef0b95208e358ce7bc2212ca813277c\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "creator_origin_organisation_number", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_case_grouping') }} where {{config.get('where')}}) input_case_grouping{% else %}{{ source('dsr_input', 'input_case_grouping') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_case_grouping"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_eef0b95208e358ce7bc2212ca813277c", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_case_grouping_creator_origin_organisation_number__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_case_grouping_creator_origin_organisation_number__prod.c5e2731fa2", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_eef0b95208e358ce7bc2212ca813277c.sql", "original_file_path": "models/staging/dimensions/logistic_item/src_dim_logistic_item.yml", "name": "source_not_null_dsr_input_input_case_grouping_creator_origin_organisation_number__prod", "alias": "source_not_null_dsr_input_inpu_eef0b95208e358ce7bc2212ca813277c", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_case_grouping"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/logistic_item/src_dim_logistic_item.yml/schema_test/source_not_null_dsr_input_inpu_eef0b95208e358ce7bc2212ca813277c.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_eef0b95208e358ce7bc2212ca813277c"}, "created_at": 1631703183, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "creator_origin_organisation_number"}, "test.DSR.source_not_null_dsr_input_input_case_grouping_grouping_key__prod.7972c84e2b": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_115fe401b56c34bc5862e5734479fd70\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "grouping_key", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_case_grouping') }} where {{config.get('where')}}) input_case_grouping{% else %}{{ source('dsr_input', 'input_case_grouping') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_case_grouping"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_115fe401b56c34bc5862e5734479fd70", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_case_grouping_grouping_key__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_case_grouping_grouping_key__prod.7972c84e2b", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_115fe401b56c34bc5862e5734479fd70.sql", "original_file_path": "models/staging/dimensions/logistic_item/src_dim_logistic_item.yml", "name": "source_not_null_dsr_input_input_case_grouping_grouping_key__prod", "alias": "source_not_null_dsr_input_inpu_115fe401b56c34bc5862e5734479fd70", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_case_grouping"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/logistic_item/src_dim_logistic_item.yml/schema_test/source_not_null_dsr_input_inpu_115fe401b56c34bc5862e5734479fd70.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_115fe401b56c34bc5862e5734479fd70"}, "created_at": 1631703183, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "grouping_key"}, "test.DSR.source_not_null_dsr_input_input_case_grouping_organisation_case__prod.c3e6a140d5": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_7e9577eb2643d24fdb27232403b437bb\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "organisation_case", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_case_grouping') }} where {{config.get('where')}}) input_case_grouping{% else %}{{ source('dsr_input', 'input_case_grouping') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_case_grouping"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_7e9577eb2643d24fdb27232403b437bb", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_case_grouping_organisation_case__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_case_grouping_organisation_case__prod.c3e6a140d5", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_7e9577eb2643d24fdb27232403b437bb.sql", "original_file_path": "models/staging/dimensions/logistic_item/src_dim_logistic_item.yml", "name": "source_not_null_dsr_input_input_case_grouping_organisation_case__prod", "alias": "source_not_null_dsr_input_inpu_7e9577eb2643d24fdb27232403b437bb", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_case_grouping"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/logistic_item/src_dim_logistic_item.yml/schema_test/source_not_null_dsr_input_inpu_7e9577eb2643d24fdb27232403b437bb.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_7e9577eb2643d24fdb27232403b437bb"}, "created_at": 1631703183, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "organisation_case"}, "test.DSR.source_not_null_dsr_input_input_case_grouping_subject_business_organisation_number__prod.a06b0f1c05": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_ace148652166bf871414cf4d405d4371\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "subject_business_organisation_number", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_case_grouping') }} where {{config.get('where')}}) input_case_grouping{% else %}{{ source('dsr_input', 'input_case_grouping') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_case_grouping"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_ace148652166bf871414cf4d405d4371", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_case_grouping_subject_business_organisation_number__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_case_grouping_subject_business_organisation_number__prod.a06b0f1c05", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_ace148652166bf871414cf4d405d4371.sql", "original_file_path": "models/staging/dimensions/logistic_item/src_dim_logistic_item.yml", "name": "source_not_null_dsr_input_input_case_grouping_subject_business_organisation_number__prod", "alias": "source_not_null_dsr_input_inpu_ace148652166bf871414cf4d405d4371", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_case_grouping"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/logistic_item/src_dim_logistic_item.yml/schema_test/source_not_null_dsr_input_inpu_ace148652166bf871414cf4d405d4371.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_ace148652166bf871414cf4d405d4371"}, "created_at": 1631703183, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "subject_business_organisation_number"}, "test.DSR.source_not_null_dsr_input_input_case_grouping_subject_origin_organisation_number__prod.a8e45c7d81": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_26d9764ecd1367605c810303fc118cff\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "subject_origin_organisation_number", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_case_grouping') }} where {{config.get('where')}}) input_case_grouping{% else %}{{ source('dsr_input', 'input_case_grouping') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_case_grouping"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_26d9764ecd1367605c810303fc118cff", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_case_grouping_subject_origin_organisation_number__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_case_grouping_subject_origin_organisation_number__prod.a8e45c7d81", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_26d9764ecd1367605c810303fc118cff.sql", "original_file_path": "models/staging/dimensions/logistic_item/src_dim_logistic_item.yml", "name": "source_not_null_dsr_input_input_case_grouping_subject_origin_organisation_number__prod", "alias": "source_not_null_dsr_input_inpu_26d9764ecd1367605c810303fc118cff", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_case_grouping"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/logistic_item/src_dim_logistic_item.yml/schema_test/source_not_null_dsr_input_inpu_26d9764ecd1367605c810303fc118cff.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_26d9764ecd1367605c810303fc118cff"}, "created_at": 1631703183, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "subject_origin_organisation_number"}, "test.DSR.source_unique_combination_of_columns_dsr_input_input_sku_business_organisation_number__origin_organisation_number__organisation_sku__loaded_timestamp__prod.79d675cb44": {"raw_sql": "{{ test_unique_combination_of_columns(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_unique_combination_of_c_0fcdde54488c8e87baadf6838bfb613c\") }}", "test_metadata": {"name": "unique_combination_of_columns", "kwargs": {"combination_of_columns": ["business_organisation_number", "origin_organisation_number", "organisation_sku", "loaded_timestamp"], "env": "prod", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_sku') }} where {{config.get('where')}}) input_sku{% else %}{{ source('dsr_input', 'input_sku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_unique_combination_of_columns"], "nodes": ["source.DSR.dsr_input.input_sku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_unique_combination_of_c_0fcdde54488c8e87baadf6838bfb613c", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_unique_combination_of_columns_dsr_input_input_sku_business_organisation_number__origin_organisation_number__organisation_sku__loaded_timestamp__prod"], "unique_id": "test.DSR.source_unique_combination_of_columns_dsr_input_input_sku_business_organisation_number__origin_organisation_number__organisation_sku__loaded_timestamp__prod.79d675cb44", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_unique_combination_of_c_0fcdde54488c8e87baadf6838bfb613c.sql", "original_file_path": "models/staging/dimensions/product/src_dim_product.yml", "name": "source_unique_combination_of_columns_dsr_input_input_sku_business_organisation_number__origin_organisation_number__organisation_sku__loaded_timestamp__prod", "alias": "source_unique_combination_of_c_0fcdde54488c8e87baadf6838bfb613c", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_sku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/product/src_dim_product.yml/schema_test/source_unique_combination_of_c_0fcdde54488c8e87baadf6838bfb613c.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_unique_combination_of_c_0fcdde54488c8e87baadf6838bfb613c"}, "created_at": 1631703183, "compiled_sql": "\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": null}, "test.DSR.source_not_null_dsr_input_input_sku_business_organisation_number__prod.cb81cc81cb": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_9ccb7f704e1f61063884f85a0c4b5b4e\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "business_organisation_number", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_sku') }} where {{config.get('where')}}) input_sku{% else %}{{ source('dsr_input', 'input_sku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_sku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_9ccb7f704e1f61063884f85a0c4b5b4e", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_sku_business_organisation_number__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_sku_business_organisation_number__prod.cb81cc81cb", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_9ccb7f704e1f61063884f85a0c4b5b4e.sql", "original_file_path": "models/staging/dimensions/product/src_dim_product.yml", "name": "source_not_null_dsr_input_input_sku_business_organisation_number__prod", "alias": "source_not_null_dsr_input_inpu_9ccb7f704e1f61063884f85a0c4b5b4e", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_sku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/product/src_dim_product.yml/schema_test/source_not_null_dsr_input_inpu_9ccb7f704e1f61063884f85a0c4b5b4e.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_9ccb7f704e1f61063884f85a0c4b5b4e"}, "created_at": 1631703183, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "business_organisation_number"}, "test.DSR.source_not_null_dsr_input_input_sku_organisation_sku__prod.f8ce66955a": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "organisation_sku", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_sku') }} where {{config.get('where')}}) input_sku{% else %}{{ source('dsr_input', 'input_sku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_sku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_sku_organisation_sku__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_sku_organisation_sku__prod.f8ce66955a", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_input_sku_organisation_sku__prod.sql", "original_file_path": "models/staging/dimensions/product/src_dim_product.yml", "name": "source_not_null_dsr_input_input_sku_organisation_sku__prod", "alias": "source_not_null_dsr_input_input_sku_organisation_sku__prod", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_sku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/product/src_dim_product.yml/schema_test/source_not_null_dsr_input_input_sku_organisation_sku__prod.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1631703183, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "organisation_sku"}, "test.DSR.source_not_null_dsr_input_input_sku_origin_organisation_number__prod.c6d66e2db2": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_d5d37054791036cc31767efabc1fcfdd\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "origin_organisation_number", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_sku') }} where {{config.get('where')}}) input_sku{% else %}{{ source('dsr_input', 'input_sku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_sku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_d5d37054791036cc31767efabc1fcfdd", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_sku_origin_organisation_number__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_sku_origin_organisation_number__prod.c6d66e2db2", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_d5d37054791036cc31767efabc1fcfdd.sql", "original_file_path": "models/staging/dimensions/product/src_dim_product.yml", "name": "source_not_null_dsr_input_input_sku_origin_organisation_number__prod", "alias": "source_not_null_dsr_input_inpu_d5d37054791036cc31767efabc1fcfdd", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_sku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/product/src_dim_product.yml/schema_test/source_not_null_dsr_input_inpu_d5d37054791036cc31767efabc1fcfdd.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_d5d37054791036cc31767efabc1fcfdd"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "origin_organisation_number"}, "test.DSR.source_unique_combination_of_columns_dsr_input_input_sku_grouping_creator_business_organisation_number__creator_origin_organisation_number__organisation_sku__subject_origin_organisation_number__subject_business_organisation_number__group_name__group_value__loaded_timestamp__prod.736dae4089": {"raw_sql": "{{ test_unique_combination_of_columns(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_unique_combination_of_c_22af1da7a2bf4f9cb21c89f30e44fe2b\") }}", "test_metadata": {"name": "unique_combination_of_columns", "kwargs": {"combination_of_columns": ["creator_business_organisation_number", "creator_origin_organisation_number", "organisation_sku", "subject_origin_organisation_number", "subject_business_organisation_number", "group_name", "group_value", "loaded_timestamp"], "env": "prod", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_sku_grouping') }} where {{config.get('where')}}) input_sku_grouping{% else %}{{ source('dsr_input', 'input_sku_grouping') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_unique_combination_of_columns"], "nodes": ["source.DSR.dsr_input.input_sku_grouping"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_unique_combination_of_c_22af1da7a2bf4f9cb21c89f30e44fe2b", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_unique_combination_of_columns_dsr_input_input_sku_grouping_creator_business_organisation_number__creator_origin_organisation_number__organisation_sku__subject_origin_organisation_number__subject_business_organisation_number__group_name__group_value__loaded_timestamp__prod"], "unique_id": "test.DSR.source_unique_combination_of_columns_dsr_input_input_sku_grouping_creator_business_organisation_number__creator_origin_organisation_number__organisation_sku__subject_origin_organisation_number__subject_business_organisation_number__group_name__group_value__loaded_timestamp__prod.736dae4089", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_unique_combination_of_c_22af1da7a2bf4f9cb21c89f30e44fe2b.sql", "original_file_path": "models/staging/dimensions/product/src_dim_product.yml", "name": "source_unique_combination_of_columns_dsr_input_input_sku_grouping_creator_business_organisation_number__creator_origin_organisation_number__organisation_sku__subject_origin_organisation_number__subject_business_organisation_number__group_name__group_value__loaded_timestamp__prod", "alias": "source_unique_combination_of_c_22af1da7a2bf4f9cb21c89f30e44fe2b", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_sku_grouping"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/product/src_dim_product.yml/schema_test/source_unique_combination_of_c_22af1da7a2bf4f9cb21c89f30e44fe2b.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_unique_combination_of_c_22af1da7a2bf4f9cb21c89f30e44fe2b"}, "created_at": 1631703184, "compiled_sql": "\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": null}, "test.DSR.source_not_null_dsr_input_input_sku_grouping_creator_business_organisation_number__prod.cf516ad382": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_53b21fae26971b4dcd691606a8ed737d\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "creator_business_organisation_number", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_sku_grouping') }} where {{config.get('where')}}) input_sku_grouping{% else %}{{ source('dsr_input', 'input_sku_grouping') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_sku_grouping"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_53b21fae26971b4dcd691606a8ed737d", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_sku_grouping_creator_business_organisation_number__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_sku_grouping_creator_business_organisation_number__prod.cf516ad382", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_53b21fae26971b4dcd691606a8ed737d.sql", "original_file_path": "models/staging/dimensions/product/src_dim_product.yml", "name": "source_not_null_dsr_input_input_sku_grouping_creator_business_organisation_number__prod", "alias": "source_not_null_dsr_input_inpu_53b21fae26971b4dcd691606a8ed737d", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_sku_grouping"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/product/src_dim_product.yml/schema_test/source_not_null_dsr_input_inpu_53b21fae26971b4dcd691606a8ed737d.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_53b21fae26971b4dcd691606a8ed737d"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "creator_business_organisation_number"}, "test.DSR.source_not_null_dsr_input_input_sku_grouping_creator_origin_organisation_number__prod.4b1409afcf": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_94d43eac45631e05925e41dc0d65914e\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "creator_origin_organisation_number", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_sku_grouping') }} where {{config.get('where')}}) input_sku_grouping{% else %}{{ source('dsr_input', 'input_sku_grouping') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_sku_grouping"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_94d43eac45631e05925e41dc0d65914e", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_sku_grouping_creator_origin_organisation_number__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_sku_grouping_creator_origin_organisation_number__prod.4b1409afcf", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_94d43eac45631e05925e41dc0d65914e.sql", "original_file_path": "models/staging/dimensions/product/src_dim_product.yml", "name": "source_not_null_dsr_input_input_sku_grouping_creator_origin_organisation_number__prod", "alias": "source_not_null_dsr_input_inpu_94d43eac45631e05925e41dc0d65914e", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_sku_grouping"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/product/src_dim_product.yml/schema_test/source_not_null_dsr_input_inpu_94d43eac45631e05925e41dc0d65914e.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_94d43eac45631e05925e41dc0d65914e"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "creator_origin_organisation_number"}, "test.DSR.source_not_null_dsr_input_input_sku_grouping_group_name__prod.41b1a8f742": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "group_name", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_sku_grouping') }} where {{config.get('where')}}) input_sku_grouping{% else %}{{ source('dsr_input', 'input_sku_grouping') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_sku_grouping"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_sku_grouping_group_name__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_sku_grouping_group_name__prod.41b1a8f742", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_input_sku_grouping_group_name__prod.sql", "original_file_path": "models/staging/dimensions/product/src_dim_product.yml", "name": "source_not_null_dsr_input_input_sku_grouping_group_name__prod", "alias": "source_not_null_dsr_input_input_sku_grouping_group_name__prod", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_sku_grouping"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/product/src_dim_product.yml/schema_test/source_not_null_dsr_input_input_sku_grouping_group_name__prod.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "group_name"}, "test.DSR.source_not_null_dsr_input_input_sku_grouping_group_value__prod.6041822dc3": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "group_value", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_sku_grouping') }} where {{config.get('where')}}) input_sku_grouping{% else %}{{ source('dsr_input', 'input_sku_grouping') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_sku_grouping"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_sku_grouping_group_value__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_sku_grouping_group_value__prod.6041822dc3", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_input_sku_grouping_group_value__prod.sql", "original_file_path": "models/staging/dimensions/product/src_dim_product.yml", "name": "source_not_null_dsr_input_input_sku_grouping_group_value__prod", "alias": "source_not_null_dsr_input_input_sku_grouping_group_value__prod", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_sku_grouping"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/product/src_dim_product.yml/schema_test/source_not_null_dsr_input_input_sku_grouping_group_value__prod.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "group_value"}, "test.DSR.source_not_null_dsr_input_input_sku_grouping_organisation_sku__prod.eeb336f8f9": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_07270798993f0000971a29234f3052a9\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "organisation_sku", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_sku_grouping') }} where {{config.get('where')}}) input_sku_grouping{% else %}{{ source('dsr_input', 'input_sku_grouping') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_sku_grouping"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_07270798993f0000971a29234f3052a9", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_sku_grouping_organisation_sku__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_sku_grouping_organisation_sku__prod.eeb336f8f9", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_07270798993f0000971a29234f3052a9.sql", "original_file_path": "models/staging/dimensions/product/src_dim_product.yml", "name": "source_not_null_dsr_input_input_sku_grouping_organisation_sku__prod", "alias": "source_not_null_dsr_input_inpu_07270798993f0000971a29234f3052a9", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_sku_grouping"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/product/src_dim_product.yml/schema_test/source_not_null_dsr_input_inpu_07270798993f0000971a29234f3052a9.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_07270798993f0000971a29234f3052a9"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "organisation_sku"}, "test.DSR.source_not_null_dsr_input_input_sku_grouping_subject_business_organisation_number__prod.bd48fbcb54": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_55ddad54842fd728bb6d3beb9d9e759f\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "subject_business_organisation_number", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_sku_grouping') }} where {{config.get('where')}}) input_sku_grouping{% else %}{{ source('dsr_input', 'input_sku_grouping') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_sku_grouping"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_55ddad54842fd728bb6d3beb9d9e759f", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_sku_grouping_subject_business_organisation_number__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_sku_grouping_subject_business_organisation_number__prod.bd48fbcb54", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_55ddad54842fd728bb6d3beb9d9e759f.sql", "original_file_path": "models/staging/dimensions/product/src_dim_product.yml", "name": "source_not_null_dsr_input_input_sku_grouping_subject_business_organisation_number__prod", "alias": "source_not_null_dsr_input_inpu_55ddad54842fd728bb6d3beb9d9e759f", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_sku_grouping"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/product/src_dim_product.yml/schema_test/source_not_null_dsr_input_inpu_55ddad54842fd728bb6d3beb9d9e759f.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_55ddad54842fd728bb6d3beb9d9e759f"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "subject_business_organisation_number"}, "test.DSR.source_not_null_dsr_input_input_sku_grouping_subject_origin_organisation_number__prod.67be80ab88": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_f9d0d26b82a634c0bc6fa9d49dd0dce2\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "subject_origin_organisation_number", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_sku_grouping') }} where {{config.get('where')}}) input_sku_grouping{% else %}{{ source('dsr_input', 'input_sku_grouping') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_sku_grouping"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_f9d0d26b82a634c0bc6fa9d49dd0dce2", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_sku_grouping_subject_origin_organisation_number__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_sku_grouping_subject_origin_organisation_number__prod.67be80ab88", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_f9d0d26b82a634c0bc6fa9d49dd0dce2.sql", "original_file_path": "models/staging/dimensions/product/src_dim_product.yml", "name": "source_not_null_dsr_input_input_sku_grouping_subject_origin_organisation_number__prod", "alias": "source_not_null_dsr_input_inpu_f9d0d26b82a634c0bc6fa9d49dd0dce2", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_sku_grouping"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/product/src_dim_product.yml/schema_test/source_not_null_dsr_input_inpu_f9d0d26b82a634c0bc6fa9d49dd0dce2.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_f9d0d26b82a634c0bc6fa9d49dd0dce2"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "subject_origin_organisation_number"}, "test.DSR.source_unique_combination_of_columns_dsr_input_input_organisation_mapping_origin_organisation_number__business_organisation_number__loaded_timestamp__prod.ea7f9aa8a3": {"raw_sql": "{{ test_unique_combination_of_columns(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_unique_combination_of_c_cc69ae0c66b1dc7f8ccc01cd3cdd73f5\") }}", "test_metadata": {"name": "unique_combination_of_columns", "kwargs": {"combination_of_columns": ["origin_organisation_number", "business_organisation_number", "loaded_timestamp"], "env": "prod", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_organisation_mapping') }} where {{config.get('where')}}) input_organisation_mapping{% else %}{{ source('dsr_input', 'input_organisation_mapping') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_unique_combination_of_columns"], "nodes": ["source.DSR.dsr_input.input_organisation_mapping"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_unique_combination_of_c_cc69ae0c66b1dc7f8ccc01cd3cdd73f5", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_unique_combination_of_columns_dsr_input_input_organisation_mapping_origin_organisation_number__business_organisation_number__loaded_timestamp__prod"], "unique_id": "test.DSR.source_unique_combination_of_columns_dsr_input_input_organisation_mapping_origin_organisation_number__business_organisation_number__loaded_timestamp__prod.ea7f9aa8a3", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_unique_combination_of_c_cc69ae0c66b1dc7f8ccc01cd3cdd73f5.sql", "original_file_path": "models/staging/dimensions/organisation/src_dim_org.yml", "name": "source_unique_combination_of_columns_dsr_input_input_organisation_mapping_origin_organisation_number__business_organisation_number__loaded_timestamp__prod", "alias": "source_unique_combination_of_c_cc69ae0c66b1dc7f8ccc01cd3cdd73f5", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_organisation_mapping"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/organisation/src_dim_org.yml/schema_test/source_unique_combination_of_c_cc69ae0c66b1dc7f8ccc01cd3cdd73f5.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_unique_combination_of_c_cc69ae0c66b1dc7f8ccc01cd3cdd73f5"}, "created_at": 1631703184, "compiled_sql": "\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": null}, "test.DSR.source_not_null_dsr_input_input_organisation_mapping_business_organisation_number__prod.c9ec6d8080": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_0df8394a4ac0d866f879c4908b848c80\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "business_organisation_number", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_organisation_mapping') }} where {{config.get('where')}}) input_organisation_mapping{% else %}{{ source('dsr_input', 'input_organisation_mapping') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_organisation_mapping"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_0df8394a4ac0d866f879c4908b848c80", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_organisation_mapping_business_organisation_number__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_organisation_mapping_business_organisation_number__prod.c9ec6d8080", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_0df8394a4ac0d866f879c4908b848c80.sql", "original_file_path": "models/staging/dimensions/organisation/src_dim_org.yml", "name": "source_not_null_dsr_input_input_organisation_mapping_business_organisation_number__prod", "alias": "source_not_null_dsr_input_inpu_0df8394a4ac0d866f879c4908b848c80", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_organisation_mapping"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/organisation/src_dim_org.yml/schema_test/source_not_null_dsr_input_inpu_0df8394a4ac0d866f879c4908b848c80.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_0df8394a4ac0d866f879c4908b848c80"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "business_organisation_number"}, "test.DSR.source_not_null_dsr_input_input_organisation_mapping_origin_organisation_number__prod.25d92dfd8e": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_173725f0bd3b4822dc23ecfc82bbb15b\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "origin_organisation_number", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_organisation_mapping') }} where {{config.get('where')}}) input_organisation_mapping{% else %}{{ source('dsr_input', 'input_organisation_mapping') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_organisation_mapping"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_173725f0bd3b4822dc23ecfc82bbb15b", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_organisation_mapping_origin_organisation_number__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_organisation_mapping_origin_organisation_number__prod.25d92dfd8e", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_173725f0bd3b4822dc23ecfc82bbb15b.sql", "original_file_path": "models/staging/dimensions/organisation/src_dim_org.yml", "name": "source_not_null_dsr_input_input_organisation_mapping_origin_organisation_number__prod", "alias": "source_not_null_dsr_input_inpu_173725f0bd3b4822dc23ecfc82bbb15b", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_organisation_mapping"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/organisation/src_dim_org.yml/schema_test/source_not_null_dsr_input_inpu_173725f0bd3b4822dc23ecfc82bbb15b.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_173725f0bd3b4822dc23ecfc82bbb15b"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "origin_organisation_number"}, "test.DSR.source_unique_combination_of_columns_dsr_input_input_organisation_business_organisation_number__origin_organisation_number__loaded_timestamp__prod.a7339c677b": {"raw_sql": "{{ test_unique_combination_of_columns(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_unique_combination_of_c_924527244877173d1bfbaaa8f3b6fe0f\") }}", "test_metadata": {"name": "unique_combination_of_columns", "kwargs": {"combination_of_columns": ["business_organisation_number", "origin_organisation_number", "loaded_timestamp"], "env": "prod", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_organisation') }} where {{config.get('where')}}) input_organisation{% else %}{{ source('dsr_input', 'input_organisation') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_unique_combination_of_columns"], "nodes": ["source.DSR.dsr_input.input_organisation"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_unique_combination_of_c_924527244877173d1bfbaaa8f3b6fe0f", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_unique_combination_of_columns_dsr_input_input_organisation_business_organisation_number__origin_organisation_number__loaded_timestamp__prod"], "unique_id": "test.DSR.source_unique_combination_of_columns_dsr_input_input_organisation_business_organisation_number__origin_organisation_number__loaded_timestamp__prod.a7339c677b", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_unique_combination_of_c_924527244877173d1bfbaaa8f3b6fe0f.sql", "original_file_path": "models/staging/dimensions/organisation/src_dim_org.yml", "name": "source_unique_combination_of_columns_dsr_input_input_organisation_business_organisation_number__origin_organisation_number__loaded_timestamp__prod", "alias": "source_unique_combination_of_c_924527244877173d1bfbaaa8f3b6fe0f", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_organisation"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/organisation/src_dim_org.yml/schema_test/source_unique_combination_of_c_924527244877173d1bfbaaa8f3b6fe0f.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_unique_combination_of_c_924527244877173d1bfbaaa8f3b6fe0f"}, "created_at": 1631703184, "compiled_sql": "\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": null}, "test.DSR.source_not_null_dsr_input_input_organisation_business_organisation_number__prod.8ab99da45a": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_623dd3fb94ce241bbe38d63fb4fb87fd\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "business_organisation_number", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_organisation') }} where {{config.get('where')}}) input_organisation{% else %}{{ source('dsr_input', 'input_organisation') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_organisation"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_623dd3fb94ce241bbe38d63fb4fb87fd", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_organisation_business_organisation_number__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_organisation_business_organisation_number__prod.8ab99da45a", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_623dd3fb94ce241bbe38d63fb4fb87fd.sql", "original_file_path": "models/staging/dimensions/organisation/src_dim_org.yml", "name": "source_not_null_dsr_input_input_organisation_business_organisation_number__prod", "alias": "source_not_null_dsr_input_inpu_623dd3fb94ce241bbe38d63fb4fb87fd", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_organisation"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/organisation/src_dim_org.yml/schema_test/source_not_null_dsr_input_inpu_623dd3fb94ce241bbe38d63fb4fb87fd.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_623dd3fb94ce241bbe38d63fb4fb87fd"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "business_organisation_number"}, "test.DSR.source_not_null_dsr_input_input_organisation_origin_organisation_number__prod.b673dbf060": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_37924a1f4a9bd5c8baef9d25afad27d9\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "origin_organisation_number", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_organisation') }} where {{config.get('where')}}) input_organisation{% else %}{{ source('dsr_input', 'input_organisation') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_organisation"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_37924a1f4a9bd5c8baef9d25afad27d9", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_organisation_origin_organisation_number__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_organisation_origin_organisation_number__prod.b673dbf060", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_37924a1f4a9bd5c8baef9d25afad27d9.sql", "original_file_path": "models/staging/dimensions/organisation/src_dim_org.yml", "name": "source_not_null_dsr_input_input_organisation_origin_organisation_number__prod", "alias": "source_not_null_dsr_input_inpu_37924a1f4a9bd5c8baef9d25afad27d9", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_organisation"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/organisation/src_dim_org.yml/schema_test/source_not_null_dsr_input_inpu_37924a1f4a9bd5c8baef9d25afad27d9.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_37924a1f4a9bd5c8baef9d25afad27d9"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "origin_organisation_number"}, "test.DSR.source_unique_combination_of_columns_dsr_input_input_organisation_parentage_business_organisation_number__origin_organisation_number__parent_origin_organisation_number__parent_business_organisation_number__creator_origin_organisation_number__creator_business_organisation_number__loaded_timestamp__prod.16f2a9c05c": {"raw_sql": "{{ test_unique_combination_of_columns(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_unique_combination_of_c_9ffcf27a69da458d11a4857d05830547\") }}", "test_metadata": {"name": "unique_combination_of_columns", "kwargs": {"combination_of_columns": ["business_organisation_number", "origin_organisation_number", "parent_origin_organisation_number", "parent_business_organisation_number", "creator_origin_organisation_number", "creator_business_organisation_number", "loaded_timestamp"], "env": "prod", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_organisation_parentage') }} where {{config.get('where')}}) input_organisation_parentage{% else %}{{ source('dsr_input', 'input_organisation_parentage') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_unique_combination_of_columns"], "nodes": ["source.DSR.dsr_input.input_organisation_parentage"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_unique_combination_of_c_9ffcf27a69da458d11a4857d05830547", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_unique_combination_of_columns_dsr_input_input_organisation_parentage_business_organisation_number__origin_organisation_number__parent_origin_organisation_number__parent_business_organisation_number__creator_origin_organisation_number__creator_business_organisation_number__loaded_timestamp__prod"], "unique_id": "test.DSR.source_unique_combination_of_columns_dsr_input_input_organisation_parentage_business_organisation_number__origin_organisation_number__parent_origin_organisation_number__parent_business_organisation_number__creator_origin_organisation_number__creator_business_organisation_number__loaded_timestamp__prod.16f2a9c05c", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_unique_combination_of_c_9ffcf27a69da458d11a4857d05830547.sql", "original_file_path": "models/staging/dimensions/organisation/src_dim_org.yml", "name": "source_unique_combination_of_columns_dsr_input_input_organisation_parentage_business_organisation_number__origin_organisation_number__parent_origin_organisation_number__parent_business_organisation_number__creator_origin_organisation_number__creator_business_organisation_number__loaded_timestamp__prod", "alias": "source_unique_combination_of_c_9ffcf27a69da458d11a4857d05830547", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_organisation_parentage"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/organisation/src_dim_org.yml/schema_test/source_unique_combination_of_c_9ffcf27a69da458d11a4857d05830547.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_unique_combination_of_c_9ffcf27a69da458d11a4857d05830547"}, "created_at": 1631703184, "compiled_sql": "\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": null}, "test.DSR.source_not_null_dsr_input_input_organisation_parentage_business_organisation_number__prod.d35f954c48": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_238254a2d64056c5263766193ab607c4\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "business_organisation_number", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_organisation_parentage') }} where {{config.get('where')}}) input_organisation_parentage{% else %}{{ source('dsr_input', 'input_organisation_parentage') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_organisation_parentage"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_238254a2d64056c5263766193ab607c4", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_organisation_parentage_business_organisation_number__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_organisation_parentage_business_organisation_number__prod.d35f954c48", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_238254a2d64056c5263766193ab607c4.sql", "original_file_path": "models/staging/dimensions/organisation/src_dim_org.yml", "name": "source_not_null_dsr_input_input_organisation_parentage_business_organisation_number__prod", "alias": "source_not_null_dsr_input_inpu_238254a2d64056c5263766193ab607c4", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_organisation_parentage"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/organisation/src_dim_org.yml/schema_test/source_not_null_dsr_input_inpu_238254a2d64056c5263766193ab607c4.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_238254a2d64056c5263766193ab607c4"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "business_organisation_number"}, "test.DSR.source_not_null_dsr_input_input_organisation_parentage_creator_business_organisation_number__prod.e6445a8bc2": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_854e573db6539168b75e59733a3c717b\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "creator_business_organisation_number", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_organisation_parentage') }} where {{config.get('where')}}) input_organisation_parentage{% else %}{{ source('dsr_input', 'input_organisation_parentage') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_organisation_parentage"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_854e573db6539168b75e59733a3c717b", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_organisation_parentage_creator_business_organisation_number__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_organisation_parentage_creator_business_organisation_number__prod.e6445a8bc2", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_854e573db6539168b75e59733a3c717b.sql", "original_file_path": "models/staging/dimensions/organisation/src_dim_org.yml", "name": "source_not_null_dsr_input_input_organisation_parentage_creator_business_organisation_number__prod", "alias": "source_not_null_dsr_input_inpu_854e573db6539168b75e59733a3c717b", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_organisation_parentage"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/organisation/src_dim_org.yml/schema_test/source_not_null_dsr_input_inpu_854e573db6539168b75e59733a3c717b.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_854e573db6539168b75e59733a3c717b"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "creator_business_organisation_number"}, "test.DSR.source_not_null_dsr_input_input_organisation_parentage_origin_organisation_number__prod.a5d0bcbc7b": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_e31542b2c6a5521772f945dcb10fedd8\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "origin_organisation_number", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_organisation_parentage') }} where {{config.get('where')}}) input_organisation_parentage{% else %}{{ source('dsr_input', 'input_organisation_parentage') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_organisation_parentage"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_e31542b2c6a5521772f945dcb10fedd8", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_organisation_parentage_origin_organisation_number__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_organisation_parentage_origin_organisation_number__prod.a5d0bcbc7b", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_e31542b2c6a5521772f945dcb10fedd8.sql", "original_file_path": "models/staging/dimensions/organisation/src_dim_org.yml", "name": "source_not_null_dsr_input_input_organisation_parentage_origin_organisation_number__prod", "alias": "source_not_null_dsr_input_inpu_e31542b2c6a5521772f945dcb10fedd8", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_organisation_parentage"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/organisation/src_dim_org.yml/schema_test/source_not_null_dsr_input_inpu_e31542b2c6a5521772f945dcb10fedd8.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_e31542b2c6a5521772f945dcb10fedd8"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "origin_organisation_number"}, "test.DSR.source_not_null_dsr_input_input_organisation_parentage_parent_business_organisation_number__prod.258375f2fc": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_c333cd31d8dfa36fe2e86b7c3947a650\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "parent_business_organisation_number", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_organisation_parentage') }} where {{config.get('where')}}) input_organisation_parentage{% else %}{{ source('dsr_input', 'input_organisation_parentage') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_organisation_parentage"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_c333cd31d8dfa36fe2e86b7c3947a650", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_organisation_parentage_parent_business_organisation_number__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_organisation_parentage_parent_business_organisation_number__prod.258375f2fc", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_c333cd31d8dfa36fe2e86b7c3947a650.sql", "original_file_path": "models/staging/dimensions/organisation/src_dim_org.yml", "name": "source_not_null_dsr_input_input_organisation_parentage_parent_business_organisation_number__prod", "alias": "source_not_null_dsr_input_inpu_c333cd31d8dfa36fe2e86b7c3947a650", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_organisation_parentage"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/dimensions/organisation/src_dim_org.yml/schema_test/source_not_null_dsr_input_inpu_c333cd31d8dfa36fe2e86b7c3947a650.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_c333cd31d8dfa36fe2e86b7c3947a650"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "parent_business_organisation_number"}, "test.DSR.source_unique_combination_of_columns_dsr_input_input_delegated_visibility_delegator_origin_organisation_number__delegator_organisation_number__delegatee_origin_organisation_number__delegatee_organisation_number__subject_origin_organisation_number__subject_organisation_number__organisation_product__loaded_timestamp__prod.26a17780a5": {"raw_sql": "{{ test_unique_combination_of_columns(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_unique_combination_of_c_9383e4eb8f7d252205d7c24b945ddbc5\") }}", "test_metadata": {"name": "unique_combination_of_columns", "kwargs": {"combination_of_columns": ["delegator_origin_organisation_number", "delegator_organisation_number", "delegatee_origin_organisation_number", "delegatee_organisation_number", "subject_origin_organisation_number", "subject_organisation_number", "organisation_product", "loaded_timestamp"], "env": "prod", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_delegated_visibility') }} where {{config.get('where')}}) input_delegated_visibility{% else %}{{ source('dsr_input', 'input_delegated_visibility') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_unique_combination_of_columns"], "nodes": ["source.DSR.dsr_input.input_delegated_visibility"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_unique_combination_of_c_9383e4eb8f7d252205d7c24b945ddbc5", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_unique_combination_of_columns_dsr_input_input_delegated_visibility_delegator_origin_organisation_number__delegator_organisation_number__delegatee_origin_organisation_number__delegatee_organisation_number__subject_origin_organisation_number__subject_organisation_number__organisation_product__loaded_timestamp__prod"], "unique_id": "test.DSR.source_unique_combination_of_columns_dsr_input_input_delegated_visibility_delegator_origin_organisation_number__delegator_organisation_number__delegatee_origin_organisation_number__delegatee_organisation_number__subject_origin_organisation_number__subject_organisation_number__organisation_product__loaded_timestamp__prod.26a17780a5", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_unique_combination_of_c_9383e4eb8f7d252205d7c24b945ddbc5.sql", "original_file_path": "models/staging/facts/visibility/src_visibility.yml", "name": "source_unique_combination_of_columns_dsr_input_input_delegated_visibility_delegator_origin_organisation_number__delegator_organisation_number__delegatee_origin_organisation_number__delegatee_organisation_number__subject_origin_organisation_number__subject_organisation_number__organisation_product__loaded_timestamp__prod", "alias": "source_unique_combination_of_c_9383e4eb8f7d252205d7c24b945ddbc5", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_delegated_visibility"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/visibility/src_visibility.yml/schema_test/source_unique_combination_of_c_9383e4eb8f7d252205d7c24b945ddbc5.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_unique_combination_of_c_9383e4eb8f7d252205d7c24b945ddbc5"}, "created_at": 1631703184, "compiled_sql": "\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": null}, "test.DSR.source_not_null_dsr_input_input_delegated_visibility_delegated_status__prod.657967a0e2": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_8d7ff8bbd91cc775897d9a3305ba779d\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "delegated_status", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_delegated_visibility') }} where {{config.get('where')}}) input_delegated_visibility{% else %}{{ source('dsr_input', 'input_delegated_visibility') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_delegated_visibility"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_8d7ff8bbd91cc775897d9a3305ba779d", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_delegated_visibility_delegated_status__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_delegated_visibility_delegated_status__prod.657967a0e2", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_8d7ff8bbd91cc775897d9a3305ba779d.sql", "original_file_path": "models/staging/facts/visibility/src_visibility.yml", "name": "source_not_null_dsr_input_input_delegated_visibility_delegated_status__prod", "alias": "source_not_null_dsr_input_inpu_8d7ff8bbd91cc775897d9a3305ba779d", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_delegated_visibility"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/visibility/src_visibility.yml/schema_test/source_not_null_dsr_input_inpu_8d7ff8bbd91cc775897d9a3305ba779d.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_8d7ff8bbd91cc775897d9a3305ba779d"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "delegated_status"}, "test.DSR.source_not_null_dsr_input_input_delegated_visibility_delegatee_organisation_number__prod.8a4ebd220a": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_bffbf2783f615f378a9c6f2319e92358\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "delegatee_organisation_number", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_delegated_visibility') }} where {{config.get('where')}}) input_delegated_visibility{% else %}{{ source('dsr_input', 'input_delegated_visibility') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_delegated_visibility"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_bffbf2783f615f378a9c6f2319e92358", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_delegated_visibility_delegatee_organisation_number__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_delegated_visibility_delegatee_organisation_number__prod.8a4ebd220a", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_bffbf2783f615f378a9c6f2319e92358.sql", "original_file_path": "models/staging/facts/visibility/src_visibility.yml", "name": "source_not_null_dsr_input_input_delegated_visibility_delegatee_organisation_number__prod", "alias": "source_not_null_dsr_input_inpu_bffbf2783f615f378a9c6f2319e92358", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_delegated_visibility"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/visibility/src_visibility.yml/schema_test/source_not_null_dsr_input_inpu_bffbf2783f615f378a9c6f2319e92358.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_bffbf2783f615f378a9c6f2319e92358"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "delegatee_organisation_number"}, "test.DSR.source_not_null_dsr_input_input_delegated_visibility_delegatee_origin_organisation_number__prod.da70a9cfad": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_9140326c9a6a3a09f7aa2a56b2da5f0c\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "delegatee_origin_organisation_number", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_delegated_visibility') }} where {{config.get('where')}}) input_delegated_visibility{% else %}{{ source('dsr_input', 'input_delegated_visibility') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_delegated_visibility"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_9140326c9a6a3a09f7aa2a56b2da5f0c", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_delegated_visibility_delegatee_origin_organisation_number__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_delegated_visibility_delegatee_origin_organisation_number__prod.da70a9cfad", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_9140326c9a6a3a09f7aa2a56b2da5f0c.sql", "original_file_path": "models/staging/facts/visibility/src_visibility.yml", "name": "source_not_null_dsr_input_input_delegated_visibility_delegatee_origin_organisation_number__prod", "alias": "source_not_null_dsr_input_inpu_9140326c9a6a3a09f7aa2a56b2da5f0c", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_delegated_visibility"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/visibility/src_visibility.yml/schema_test/source_not_null_dsr_input_inpu_9140326c9a6a3a09f7aa2a56b2da5f0c.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_9140326c9a6a3a09f7aa2a56b2da5f0c"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "delegatee_origin_organisation_number"}, "test.DSR.source_not_null_dsr_input_input_delegated_visibility_delegator_organisation_number__prod.fb62180c23": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_dc907a49ffccc2a9e0e259b674031d79\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "delegator_organisation_number", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_delegated_visibility') }} where {{config.get('where')}}) input_delegated_visibility{% else %}{{ source('dsr_input', 'input_delegated_visibility') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_delegated_visibility"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_dc907a49ffccc2a9e0e259b674031d79", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_delegated_visibility_delegator_organisation_number__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_delegated_visibility_delegator_organisation_number__prod.fb62180c23", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_dc907a49ffccc2a9e0e259b674031d79.sql", "original_file_path": "models/staging/facts/visibility/src_visibility.yml", "name": "source_not_null_dsr_input_input_delegated_visibility_delegator_organisation_number__prod", "alias": "source_not_null_dsr_input_inpu_dc907a49ffccc2a9e0e259b674031d79", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_delegated_visibility"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/visibility/src_visibility.yml/schema_test/source_not_null_dsr_input_inpu_dc907a49ffccc2a9e0e259b674031d79.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_dc907a49ffccc2a9e0e259b674031d79"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "delegator_organisation_number"}, "test.DSR.source_not_null_dsr_input_input_delegated_visibility_delegator_origin_organisation_number__prod.175f6c7689": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_afed3bfead3c38a05fe2e74427fc631e\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "delegator_origin_organisation_number", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_delegated_visibility') }} where {{config.get('where')}}) input_delegated_visibility{% else %}{{ source('dsr_input', 'input_delegated_visibility') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_delegated_visibility"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_afed3bfead3c38a05fe2e74427fc631e", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_delegated_visibility_delegator_origin_organisation_number__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_delegated_visibility_delegator_origin_organisation_number__prod.175f6c7689", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_afed3bfead3c38a05fe2e74427fc631e.sql", "original_file_path": "models/staging/facts/visibility/src_visibility.yml", "name": "source_not_null_dsr_input_input_delegated_visibility_delegator_origin_organisation_number__prod", "alias": "source_not_null_dsr_input_inpu_afed3bfead3c38a05fe2e74427fc631e", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_delegated_visibility"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/visibility/src_visibility.yml/schema_test/source_not_null_dsr_input_inpu_afed3bfead3c38a05fe2e74427fc631e.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_afed3bfead3c38a05fe2e74427fc631e"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "delegator_origin_organisation_number"}, "test.DSR.source_not_null_dsr_input_input_delegated_visibility_organisation_product__prod.d706364610": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_c5334b59af386633077396eb2ee87517\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "organisation_product", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_delegated_visibility') }} where {{config.get('where')}}) input_delegated_visibility{% else %}{{ source('dsr_input', 'input_delegated_visibility') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_delegated_visibility"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_c5334b59af386633077396eb2ee87517", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_delegated_visibility_organisation_product__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_delegated_visibility_organisation_product__prod.d706364610", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_c5334b59af386633077396eb2ee87517.sql", "original_file_path": "models/staging/facts/visibility/src_visibility.yml", "name": "source_not_null_dsr_input_input_delegated_visibility_organisation_product__prod", "alias": "source_not_null_dsr_input_inpu_c5334b59af386633077396eb2ee87517", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_delegated_visibility"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/visibility/src_visibility.yml/schema_test/source_not_null_dsr_input_inpu_c5334b59af386633077396eb2ee87517.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_c5334b59af386633077396eb2ee87517"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "organisation_product"}, "test.DSR.source_not_null_dsr_input_input_delegated_visibility_product_type__prod.2918c41747": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_c0739e4686b54daa7f14dc8f3f1ca671\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "product_type", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_delegated_visibility') }} where {{config.get('where')}}) input_delegated_visibility{% else %}{{ source('dsr_input', 'input_delegated_visibility') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_delegated_visibility"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_c0739e4686b54daa7f14dc8f3f1ca671", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_delegated_visibility_product_type__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_delegated_visibility_product_type__prod.2918c41747", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_c0739e4686b54daa7f14dc8f3f1ca671.sql", "original_file_path": "models/staging/facts/visibility/src_visibility.yml", "name": "source_not_null_dsr_input_input_delegated_visibility_product_type__prod", "alias": "source_not_null_dsr_input_inpu_c0739e4686b54daa7f14dc8f3f1ca671", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_delegated_visibility"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/visibility/src_visibility.yml/schema_test/source_not_null_dsr_input_inpu_c0739e4686b54daa7f14dc8f3f1ca671.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_c0739e4686b54daa7f14dc8f3f1ca671"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "product_type"}, "test.DSR.source_not_null_dsr_input_input_delegated_visibility_subject_organisation_number__prod.e4f0c9d2a7": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_b7f39535b72466a62cf56840a9809fe9\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "subject_organisation_number", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_delegated_visibility') }} where {{config.get('where')}}) input_delegated_visibility{% else %}{{ source('dsr_input', 'input_delegated_visibility') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_delegated_visibility"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_b7f39535b72466a62cf56840a9809fe9", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_delegated_visibility_subject_organisation_number__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_delegated_visibility_subject_organisation_number__prod.e4f0c9d2a7", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_b7f39535b72466a62cf56840a9809fe9.sql", "original_file_path": "models/staging/facts/visibility/src_visibility.yml", "name": "source_not_null_dsr_input_input_delegated_visibility_subject_organisation_number__prod", "alias": "source_not_null_dsr_input_inpu_b7f39535b72466a62cf56840a9809fe9", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_delegated_visibility"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/visibility/src_visibility.yml/schema_test/source_not_null_dsr_input_inpu_b7f39535b72466a62cf56840a9809fe9.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_b7f39535b72466a62cf56840a9809fe9"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "subject_organisation_number"}, "test.DSR.source_not_null_dsr_input_input_delegated_visibility_subject_origin_organisation_number__prod.eb08a707ff": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_e92034216a863e7bff13389b82ce1de2\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "subject_origin_organisation_number", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_delegated_visibility') }} where {{config.get('where')}}) input_delegated_visibility{% else %}{{ source('dsr_input', 'input_delegated_visibility') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_delegated_visibility"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_e92034216a863e7bff13389b82ce1de2", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_delegated_visibility_subject_origin_organisation_number__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_delegated_visibility_subject_origin_organisation_number__prod.eb08a707ff", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_e92034216a863e7bff13389b82ce1de2.sql", "original_file_path": "models/staging/facts/visibility/src_visibility.yml", "name": "source_not_null_dsr_input_input_delegated_visibility_subject_origin_organisation_number__prod", "alias": "source_not_null_dsr_input_inpu_e92034216a863e7bff13389b82ce1de2", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_delegated_visibility"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/visibility/src_visibility.yml/schema_test/source_not_null_dsr_input_inpu_e92034216a863e7bff13389b82ce1de2.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_e92034216a863e7bff13389b82ce1de2"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "subject_origin_organisation_number"}, "test.DSR.source_unique_combination_of_columns_dsr_input_input_pln_mvt_depotstoredaysku_base_forecast_date__forecast_date__source_db_id__organisation_sku__organisation_location_id_from__organisation_location_id_to__model_version__forecast_components__loaded_timestamp__prod.f8cfd5dfb9": {"raw_sql": "{{ test_unique_combination_of_columns(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_unique_combination_of_c_f81410f3813a5362a3e641aaeec9d2b0\") }}", "test_metadata": {"name": "unique_combination_of_columns", "kwargs": {"combination_of_columns": ["base_forecast_date", "forecast_date", "source_db_id", "organisation_sku", "organisation_location_id_from", "organisation_location_id_to", "model_version", "forecast_components", "loaded_timestamp"], "env": "prod", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_pln_mvt_depotstoredaysku') }} where {{config.get('where')}}) input_pln_mvt_depotstoredaysku{% else %}{{ source('dsr_input', 'input_pln_mvt_depotstoredaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_unique_combination_of_columns"], "nodes": ["source.DSR.dsr_input.input_pln_mvt_depotstoredaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_unique_combination_of_c_f81410f3813a5362a3e641aaeec9d2b0", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_unique_combination_of_columns_dsr_input_input_pln_mvt_depotstoredaysku_base_forecast_date__forecast_date__source_db_id__organisation_sku__organisation_location_id_from__organisation_location_id_to__model_version__forecast_components__loaded_timestamp__prod"], "unique_id": "test.DSR.source_unique_combination_of_columns_dsr_input_input_pln_mvt_depotstoredaysku_base_forecast_date__forecast_date__source_db_id__organisation_sku__organisation_location_id_from__organisation_location_id_to__model_version__forecast_components__loaded_timestamp__prod.f8cfd5dfb9", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_unique_combination_of_c_f81410f3813a5362a3e641aaeec9d2b0.sql", "original_file_path": "models/staging/facts/movements/plans/src_fact_pln_mvt.yml", "name": "source_unique_combination_of_columns_dsr_input_input_pln_mvt_depotstoredaysku_base_forecast_date__forecast_date__source_db_id__organisation_sku__organisation_location_id_from__organisation_location_id_to__model_version__forecast_components__loaded_timestamp__prod", "alias": "source_unique_combination_of_c_f81410f3813a5362a3e641aaeec9d2b0", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_pln_mvt_depotstoredaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/plans/src_fact_pln_mvt.yml/schema_test/source_unique_combination_of_c_f81410f3813a5362a3e641aaeec9d2b0.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_unique_combination_of_c_f81410f3813a5362a3e641aaeec9d2b0"}, "created_at": 1631703184, "compiled_sql": "\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": null}, "test.DSR.source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_base_forecast_date__prod.f025ab6040": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_b5bcfb4223ff1ac45c7362e80491dacf\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "base_forecast_date", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_pln_mvt_depotstoredaysku') }} where {{config.get('where')}}) input_pln_mvt_depotstoredaysku{% else %}{{ source('dsr_input', 'input_pln_mvt_depotstoredaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_pln_mvt_depotstoredaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_b5bcfb4223ff1ac45c7362e80491dacf", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_base_forecast_date__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_base_forecast_date__prod.f025ab6040", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_b5bcfb4223ff1ac45c7362e80491dacf.sql", "original_file_path": "models/staging/facts/movements/plans/src_fact_pln_mvt.yml", "name": "source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_base_forecast_date__prod", "alias": "source_not_null_dsr_input_inpu_b5bcfb4223ff1ac45c7362e80491dacf", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_pln_mvt_depotstoredaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/plans/src_fact_pln_mvt.yml/schema_test/source_not_null_dsr_input_inpu_b5bcfb4223ff1ac45c7362e80491dacf.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_b5bcfb4223ff1ac45c7362e80491dacf"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "base_forecast_date"}, "test.DSR.source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_forecast_components__prod.ce1c65d8cf": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_4f955c82332c2b8ebe30fb93bae739ce\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "forecast_components", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_pln_mvt_depotstoredaysku') }} where {{config.get('where')}}) input_pln_mvt_depotstoredaysku{% else %}{{ source('dsr_input', 'input_pln_mvt_depotstoredaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_pln_mvt_depotstoredaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_4f955c82332c2b8ebe30fb93bae739ce", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_forecast_components__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_forecast_components__prod.ce1c65d8cf", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_4f955c82332c2b8ebe30fb93bae739ce.sql", "original_file_path": "models/staging/facts/movements/plans/src_fact_pln_mvt.yml", "name": "source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_forecast_components__prod", "alias": "source_not_null_dsr_input_inpu_4f955c82332c2b8ebe30fb93bae739ce", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_pln_mvt_depotstoredaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/plans/src_fact_pln_mvt.yml/schema_test/source_not_null_dsr_input_inpu_4f955c82332c2b8ebe30fb93bae739ce.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_4f955c82332c2b8ebe30fb93bae739ce"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "forecast_components"}, "test.DSR.source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_forecast_date__prod.cfbe7bfc82": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_232e2bee12d4b34fdfbc3479f8bfaa9d\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "forecast_date", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_pln_mvt_depotstoredaysku') }} where {{config.get('where')}}) input_pln_mvt_depotstoredaysku{% else %}{{ source('dsr_input', 'input_pln_mvt_depotstoredaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_pln_mvt_depotstoredaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_232e2bee12d4b34fdfbc3479f8bfaa9d", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_forecast_date__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_forecast_date__prod.cfbe7bfc82", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_232e2bee12d4b34fdfbc3479f8bfaa9d.sql", "original_file_path": "models/staging/facts/movements/plans/src_fact_pln_mvt.yml", "name": "source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_forecast_date__prod", "alias": "source_not_null_dsr_input_inpu_232e2bee12d4b34fdfbc3479f8bfaa9d", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_pln_mvt_depotstoredaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/plans/src_fact_pln_mvt.yml/schema_test/source_not_null_dsr_input_inpu_232e2bee12d4b34fdfbc3479f8bfaa9d.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_232e2bee12d4b34fdfbc3479f8bfaa9d"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "forecast_date"}, "test.DSR.source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_model_version__prod.b948cb7a45": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_4c050a10f2eab14443c63e4a60ae20c6\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "model_version", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_pln_mvt_depotstoredaysku') }} where {{config.get('where')}}) input_pln_mvt_depotstoredaysku{% else %}{{ source('dsr_input', 'input_pln_mvt_depotstoredaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_pln_mvt_depotstoredaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_4c050a10f2eab14443c63e4a60ae20c6", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_model_version__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_model_version__prod.b948cb7a45", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_4c050a10f2eab14443c63e4a60ae20c6.sql", "original_file_path": "models/staging/facts/movements/plans/src_fact_pln_mvt.yml", "name": "source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_model_version__prod", "alias": "source_not_null_dsr_input_inpu_4c050a10f2eab14443c63e4a60ae20c6", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_pln_mvt_depotstoredaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/plans/src_fact_pln_mvt.yml/schema_test/source_not_null_dsr_input_inpu_4c050a10f2eab14443c63e4a60ae20c6.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_4c050a10f2eab14443c63e4a60ae20c6"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "model_version"}, "test.DSR.source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_organisation_location_id_from__prod.66a3b8d82d": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_6fbe9f9df57e1655f5508e4f0e5aa06e\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "organisation_location_id_from", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_pln_mvt_depotstoredaysku') }} where {{config.get('where')}}) input_pln_mvt_depotstoredaysku{% else %}{{ source('dsr_input', 'input_pln_mvt_depotstoredaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_pln_mvt_depotstoredaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_6fbe9f9df57e1655f5508e4f0e5aa06e", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_organisation_location_id_from__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_organisation_location_id_from__prod.66a3b8d82d", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_6fbe9f9df57e1655f5508e4f0e5aa06e.sql", "original_file_path": "models/staging/facts/movements/plans/src_fact_pln_mvt.yml", "name": "source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_organisation_location_id_from__prod", "alias": "source_not_null_dsr_input_inpu_6fbe9f9df57e1655f5508e4f0e5aa06e", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_pln_mvt_depotstoredaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/plans/src_fact_pln_mvt.yml/schema_test/source_not_null_dsr_input_inpu_6fbe9f9df57e1655f5508e4f0e5aa06e.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_6fbe9f9df57e1655f5508e4f0e5aa06e"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "organisation_location_id_from"}, "test.DSR.source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_organisation_location_id_to__prod.9d2503001b": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_eec06bd38f80617f7dca94da038881b1\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "organisation_location_id_to", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_pln_mvt_depotstoredaysku') }} where {{config.get('where')}}) input_pln_mvt_depotstoredaysku{% else %}{{ source('dsr_input', 'input_pln_mvt_depotstoredaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_pln_mvt_depotstoredaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_eec06bd38f80617f7dca94da038881b1", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_organisation_location_id_to__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_organisation_location_id_to__prod.9d2503001b", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_eec06bd38f80617f7dca94da038881b1.sql", "original_file_path": "models/staging/facts/movements/plans/src_fact_pln_mvt.yml", "name": "source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_organisation_location_id_to__prod", "alias": "source_not_null_dsr_input_inpu_eec06bd38f80617f7dca94da038881b1", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_pln_mvt_depotstoredaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/plans/src_fact_pln_mvt.yml/schema_test/source_not_null_dsr_input_inpu_eec06bd38f80617f7dca94da038881b1.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_eec06bd38f80617f7dca94da038881b1"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "organisation_location_id_to"}, "test.DSR.source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_organisation_sku__prod.938a37659b": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_623b0d8e0432b0758d9d73a3886d74b3\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "organisation_sku", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_pln_mvt_depotstoredaysku') }} where {{config.get('where')}}) input_pln_mvt_depotstoredaysku{% else %}{{ source('dsr_input', 'input_pln_mvt_depotstoredaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_pln_mvt_depotstoredaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_623b0d8e0432b0758d9d73a3886d74b3", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_organisation_sku__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_organisation_sku__prod.938a37659b", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_623b0d8e0432b0758d9d73a3886d74b3.sql", "original_file_path": "models/staging/facts/movements/plans/src_fact_pln_mvt.yml", "name": "source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_organisation_sku__prod", "alias": "source_not_null_dsr_input_inpu_623b0d8e0432b0758d9d73a3886d74b3", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_pln_mvt_depotstoredaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/plans/src_fact_pln_mvt.yml/schema_test/source_not_null_dsr_input_inpu_623b0d8e0432b0758d9d73a3886d74b3.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_623b0d8e0432b0758d9d73a3886d74b3"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "organisation_sku"}, "test.DSR.source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_source_db_id__prod.efb01e6cfb": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_656d9491807df4ff84175b7007bf1be0\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "source_db_id", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_pln_mvt_depotstoredaysku') }} where {{config.get('where')}}) input_pln_mvt_depotstoredaysku{% else %}{{ source('dsr_input', 'input_pln_mvt_depotstoredaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_pln_mvt_depotstoredaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_656d9491807df4ff84175b7007bf1be0", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_source_db_id__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_source_db_id__prod.efb01e6cfb", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_656d9491807df4ff84175b7007bf1be0.sql", "original_file_path": "models/staging/facts/movements/plans/src_fact_pln_mvt.yml", "name": "source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_source_db_id__prod", "alias": "source_not_null_dsr_input_inpu_656d9491807df4ff84175b7007bf1be0", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_pln_mvt_depotstoredaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/plans/src_fact_pln_mvt.yml/schema_test/source_not_null_dsr_input_inpu_656d9491807df4ff84175b7007bf1be0.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_656d9491807df4ff84175b7007bf1be0"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "source_db_id"}, "test.DSR.source_unique_combination_of_columns_dsr_input_input_pln_mvt_daysku_base_forecast_date__forecast_date__source_db_id__subject_business_organisation_number__organisation_sku__model_version__forecast_components__loaded_timestamp__prod.5ea859b8aa": {"raw_sql": "{{ test_unique_combination_of_columns(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_unique_combination_of_c_a3502f2e5688bd5afe14bfe4575b53b0\") }}", "test_metadata": {"name": "unique_combination_of_columns", "kwargs": {"combination_of_columns": ["base_forecast_date", "forecast_date", "source_db_id", "subject_business_organisation_number", "organisation_sku", "model_version", "forecast_components", "loaded_timestamp"], "env": "prod", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_pln_mvt_daysku') }} where {{config.get('where')}}) input_pln_mvt_daysku{% else %}{{ source('dsr_input', 'input_pln_mvt_daysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_unique_combination_of_columns"], "nodes": ["source.DSR.dsr_input.input_pln_mvt_daysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_unique_combination_of_c_a3502f2e5688bd5afe14bfe4575b53b0", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_unique_combination_of_columns_dsr_input_input_pln_mvt_daysku_base_forecast_date__forecast_date__source_db_id__subject_business_organisation_number__organisation_sku__model_version__forecast_components__loaded_timestamp__prod"], "unique_id": "test.DSR.source_unique_combination_of_columns_dsr_input_input_pln_mvt_daysku_base_forecast_date__forecast_date__source_db_id__subject_business_organisation_number__organisation_sku__model_version__forecast_components__loaded_timestamp__prod.5ea859b8aa", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_unique_combination_of_c_a3502f2e5688bd5afe14bfe4575b53b0.sql", "original_file_path": "models/staging/facts/movements/plans/src_fact_pln_mvt.yml", "name": "source_unique_combination_of_columns_dsr_input_input_pln_mvt_daysku_base_forecast_date__forecast_date__source_db_id__subject_business_organisation_number__organisation_sku__model_version__forecast_components__loaded_timestamp__prod", "alias": "source_unique_combination_of_c_a3502f2e5688bd5afe14bfe4575b53b0", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_pln_mvt_daysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/plans/src_fact_pln_mvt.yml/schema_test/source_unique_combination_of_c_a3502f2e5688bd5afe14bfe4575b53b0.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_unique_combination_of_c_a3502f2e5688bd5afe14bfe4575b53b0"}, "created_at": 1631703184, "compiled_sql": "\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": null}, "test.DSR.source_not_null_dsr_input_input_pln_mvt_daysku_base_forecast_date__prod.2f098a2e73": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_43ce32c909fd28f6936305e863cc1b92\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "base_forecast_date", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_pln_mvt_daysku') }} where {{config.get('where')}}) input_pln_mvt_daysku{% else %}{{ source('dsr_input', 'input_pln_mvt_daysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_pln_mvt_daysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_43ce32c909fd28f6936305e863cc1b92", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_pln_mvt_daysku_base_forecast_date__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_pln_mvt_daysku_base_forecast_date__prod.2f098a2e73", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_43ce32c909fd28f6936305e863cc1b92.sql", "original_file_path": "models/staging/facts/movements/plans/src_fact_pln_mvt.yml", "name": "source_not_null_dsr_input_input_pln_mvt_daysku_base_forecast_date__prod", "alias": "source_not_null_dsr_input_inpu_43ce32c909fd28f6936305e863cc1b92", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_pln_mvt_daysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/plans/src_fact_pln_mvt.yml/schema_test/source_not_null_dsr_input_inpu_43ce32c909fd28f6936305e863cc1b92.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_43ce32c909fd28f6936305e863cc1b92"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "base_forecast_date"}, "test.DSR.source_not_null_dsr_input_input_pln_mvt_daysku_forecast_components__prod.34961f0b94": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_5e5cf1d99fff47f3e71ce919f4927610\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "forecast_components", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_pln_mvt_daysku') }} where {{config.get('where')}}) input_pln_mvt_daysku{% else %}{{ source('dsr_input', 'input_pln_mvt_daysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_pln_mvt_daysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_5e5cf1d99fff47f3e71ce919f4927610", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_pln_mvt_daysku_forecast_components__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_pln_mvt_daysku_forecast_components__prod.34961f0b94", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_5e5cf1d99fff47f3e71ce919f4927610.sql", "original_file_path": "models/staging/facts/movements/plans/src_fact_pln_mvt.yml", "name": "source_not_null_dsr_input_input_pln_mvt_daysku_forecast_components__prod", "alias": "source_not_null_dsr_input_inpu_5e5cf1d99fff47f3e71ce919f4927610", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_pln_mvt_daysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/plans/src_fact_pln_mvt.yml/schema_test/source_not_null_dsr_input_inpu_5e5cf1d99fff47f3e71ce919f4927610.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_5e5cf1d99fff47f3e71ce919f4927610"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "forecast_components"}, "test.DSR.source_not_null_dsr_input_input_pln_mvt_daysku_forecast_date__prod.e4d3c096c0": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_5434f59374e02a0d0401d1c15250cca0\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "forecast_date", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_pln_mvt_daysku') }} where {{config.get('where')}}) input_pln_mvt_daysku{% else %}{{ source('dsr_input', 'input_pln_mvt_daysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_pln_mvt_daysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_5434f59374e02a0d0401d1c15250cca0", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_pln_mvt_daysku_forecast_date__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_pln_mvt_daysku_forecast_date__prod.e4d3c096c0", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_5434f59374e02a0d0401d1c15250cca0.sql", "original_file_path": "models/staging/facts/movements/plans/src_fact_pln_mvt.yml", "name": "source_not_null_dsr_input_input_pln_mvt_daysku_forecast_date__prod", "alias": "source_not_null_dsr_input_inpu_5434f59374e02a0d0401d1c15250cca0", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_pln_mvt_daysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/plans/src_fact_pln_mvt.yml/schema_test/source_not_null_dsr_input_inpu_5434f59374e02a0d0401d1c15250cca0.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_5434f59374e02a0d0401d1c15250cca0"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "forecast_date"}, "test.DSR.source_not_null_dsr_input_input_pln_mvt_daysku_model_version__prod.c95b052781": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_d980ea72cf019f35d54f06430fe3f030\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "model_version", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_pln_mvt_daysku') }} where {{config.get('where')}}) input_pln_mvt_daysku{% else %}{{ source('dsr_input', 'input_pln_mvt_daysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_pln_mvt_daysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_d980ea72cf019f35d54f06430fe3f030", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_pln_mvt_daysku_model_version__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_pln_mvt_daysku_model_version__prod.c95b052781", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_d980ea72cf019f35d54f06430fe3f030.sql", "original_file_path": "models/staging/facts/movements/plans/src_fact_pln_mvt.yml", "name": "source_not_null_dsr_input_input_pln_mvt_daysku_model_version__prod", "alias": "source_not_null_dsr_input_inpu_d980ea72cf019f35d54f06430fe3f030", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_pln_mvt_daysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/plans/src_fact_pln_mvt.yml/schema_test/source_not_null_dsr_input_inpu_d980ea72cf019f35d54f06430fe3f030.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_d980ea72cf019f35d54f06430fe3f030"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "model_version"}, "test.DSR.source_not_null_dsr_input_input_pln_mvt_daysku_organisation_sku__prod.887284b623": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_790e0c9b851e93a9c93426d0ff889880\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "organisation_sku", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_pln_mvt_daysku') }} where {{config.get('where')}}) input_pln_mvt_daysku{% else %}{{ source('dsr_input', 'input_pln_mvt_daysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_pln_mvt_daysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_790e0c9b851e93a9c93426d0ff889880", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_pln_mvt_daysku_organisation_sku__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_pln_mvt_daysku_organisation_sku__prod.887284b623", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_790e0c9b851e93a9c93426d0ff889880.sql", "original_file_path": "models/staging/facts/movements/plans/src_fact_pln_mvt.yml", "name": "source_not_null_dsr_input_input_pln_mvt_daysku_organisation_sku__prod", "alias": "source_not_null_dsr_input_inpu_790e0c9b851e93a9c93426d0ff889880", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_pln_mvt_daysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/plans/src_fact_pln_mvt.yml/schema_test/source_not_null_dsr_input_inpu_790e0c9b851e93a9c93426d0ff889880.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_790e0c9b851e93a9c93426d0ff889880"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "organisation_sku"}, "test.DSR.source_not_null_dsr_input_input_pln_mvt_daysku_source_db_id__prod.d99e8bd8b0": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_591a33ba6c58becd4ccca4be9ba4b2ee\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "source_db_id", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_pln_mvt_daysku') }} where {{config.get('where')}}) input_pln_mvt_daysku{% else %}{{ source('dsr_input', 'input_pln_mvt_daysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_pln_mvt_daysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_591a33ba6c58becd4ccca4be9ba4b2ee", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_pln_mvt_daysku_source_db_id__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_pln_mvt_daysku_source_db_id__prod.d99e8bd8b0", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_591a33ba6c58becd4ccca4be9ba4b2ee.sql", "original_file_path": "models/staging/facts/movements/plans/src_fact_pln_mvt.yml", "name": "source_not_null_dsr_input_input_pln_mvt_daysku_source_db_id__prod", "alias": "source_not_null_dsr_input_inpu_591a33ba6c58becd4ccca4be9ba4b2ee", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_pln_mvt_daysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/plans/src_fact_pln_mvt.yml/schema_test/source_not_null_dsr_input_inpu_591a33ba6c58becd4ccca4be9ba4b2ee.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_591a33ba6c58becd4ccca4be9ba4b2ee"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "source_db_id"}, "test.DSR.source_not_null_dsr_input_input_pln_mvt_daysku_subject_business_organisation_number__prod.cf51ed692a": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_f9950af9963d6748e0e342a03ba1e963\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "subject_business_organisation_number", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_pln_mvt_daysku') }} where {{config.get('where')}}) input_pln_mvt_daysku{% else %}{{ source('dsr_input', 'input_pln_mvt_daysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_pln_mvt_daysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_f9950af9963d6748e0e342a03ba1e963", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_pln_mvt_daysku_subject_business_organisation_number__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_pln_mvt_daysku_subject_business_organisation_number__prod.cf51ed692a", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_f9950af9963d6748e0e342a03ba1e963.sql", "original_file_path": "models/staging/facts/movements/plans/src_fact_pln_mvt.yml", "name": "source_not_null_dsr_input_input_pln_mvt_daysku_subject_business_organisation_number__prod", "alias": "source_not_null_dsr_input_inpu_f9950af9963d6748e0e342a03ba1e963", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_pln_mvt_daysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/plans/src_fact_pln_mvt.yml/schema_test/source_not_null_dsr_input_inpu_f9950af9963d6748e0e342a03ba1e963.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_f9950af9963d6748e0e342a03ba1e963"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "subject_business_organisation_number"}, "test.DSR.source_unique_combination_of_columns_dsr_input_input_pln_mvt_storedaysku_base_forecast_date__forecast_date__source_db_id__subject_business_organisation_number__subject_organisation_location_id_to__organisation_sku__model_version__forecast_components__loaded_timestamp__prod.5fe9ceeb7a": {"raw_sql": "{{ test_unique_combination_of_columns(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_unique_combination_of_c_7afbad2c9d1d1e7780e987e40ffe6803\") }}", "test_metadata": {"name": "unique_combination_of_columns", "kwargs": {"combination_of_columns": ["base_forecast_date", "forecast_date", "source_db_id", "subject_business_organisation_number", "subject_organisation_location_id_to", "organisation_sku", "model_version", "forecast_components", "loaded_timestamp"], "env": "prod", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_pln_mvt_storedaysku') }} where {{config.get('where')}}) input_pln_mvt_storedaysku{% else %}{{ source('dsr_input', 'input_pln_mvt_storedaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_unique_combination_of_columns"], "nodes": ["source.DSR.dsr_input.input_pln_mvt_storedaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_unique_combination_of_c_7afbad2c9d1d1e7780e987e40ffe6803", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_unique_combination_of_columns_dsr_input_input_pln_mvt_storedaysku_base_forecast_date__forecast_date__source_db_id__subject_business_organisation_number__subject_organisation_location_id_to__organisation_sku__model_version__forecast_components__loaded_timestamp__prod"], "unique_id": "test.DSR.source_unique_combination_of_columns_dsr_input_input_pln_mvt_storedaysku_base_forecast_date__forecast_date__source_db_id__subject_business_organisation_number__subject_organisation_location_id_to__organisation_sku__model_version__forecast_components__loaded_timestamp__prod.5fe9ceeb7a", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_unique_combination_of_c_7afbad2c9d1d1e7780e987e40ffe6803.sql", "original_file_path": "models/staging/facts/movements/plans/src_fact_pln_mvt.yml", "name": "source_unique_combination_of_columns_dsr_input_input_pln_mvt_storedaysku_base_forecast_date__forecast_date__source_db_id__subject_business_organisation_number__subject_organisation_location_id_to__organisation_sku__model_version__forecast_components__loaded_timestamp__prod", "alias": "source_unique_combination_of_c_7afbad2c9d1d1e7780e987e40ffe6803", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_pln_mvt_storedaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/plans/src_fact_pln_mvt.yml/schema_test/source_unique_combination_of_c_7afbad2c9d1d1e7780e987e40ffe6803.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_unique_combination_of_c_7afbad2c9d1d1e7780e987e40ffe6803"}, "created_at": 1631703184, "compiled_sql": "\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": null}, "test.DSR.source_not_null_dsr_input_input_pln_mvt_storedaysku_base_forecast_date__prod.0af88c40af": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_b54eb110cd15ac9989b02536666a3c76\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "base_forecast_date", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_pln_mvt_storedaysku') }} where {{config.get('where')}}) input_pln_mvt_storedaysku{% else %}{{ source('dsr_input', 'input_pln_mvt_storedaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_pln_mvt_storedaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_b54eb110cd15ac9989b02536666a3c76", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_pln_mvt_storedaysku_base_forecast_date__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_pln_mvt_storedaysku_base_forecast_date__prod.0af88c40af", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_b54eb110cd15ac9989b02536666a3c76.sql", "original_file_path": "models/staging/facts/movements/plans/src_fact_pln_mvt.yml", "name": "source_not_null_dsr_input_input_pln_mvt_storedaysku_base_forecast_date__prod", "alias": "source_not_null_dsr_input_inpu_b54eb110cd15ac9989b02536666a3c76", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_pln_mvt_storedaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/plans/src_fact_pln_mvt.yml/schema_test/source_not_null_dsr_input_inpu_b54eb110cd15ac9989b02536666a3c76.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_b54eb110cd15ac9989b02536666a3c76"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "base_forecast_date"}, "test.DSR.source_not_null_dsr_input_input_pln_mvt_storedaysku_forecast_date__prod.3cdc011adb": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_8b0d315f7b2fa3acef3831f7b11660cb\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "forecast_date", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_pln_mvt_storedaysku') }} where {{config.get('where')}}) input_pln_mvt_storedaysku{% else %}{{ source('dsr_input', 'input_pln_mvt_storedaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_pln_mvt_storedaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_8b0d315f7b2fa3acef3831f7b11660cb", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_pln_mvt_storedaysku_forecast_date__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_pln_mvt_storedaysku_forecast_date__prod.3cdc011adb", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_8b0d315f7b2fa3acef3831f7b11660cb.sql", "original_file_path": "models/staging/facts/movements/plans/src_fact_pln_mvt.yml", "name": "source_not_null_dsr_input_input_pln_mvt_storedaysku_forecast_date__prod", "alias": "source_not_null_dsr_input_inpu_8b0d315f7b2fa3acef3831f7b11660cb", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_pln_mvt_storedaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/plans/src_fact_pln_mvt.yml/schema_test/source_not_null_dsr_input_inpu_8b0d315f7b2fa3acef3831f7b11660cb.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_8b0d315f7b2fa3acef3831f7b11660cb"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "forecast_date"}, "test.DSR.source_not_null_dsr_input_input_pln_mvt_storedaysku_model_version__prod.8ef7db2229": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_be061a45e9d4fc821d93ef207a5f21e2\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "model_version", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_pln_mvt_storedaysku') }} where {{config.get('where')}}) input_pln_mvt_storedaysku{% else %}{{ source('dsr_input', 'input_pln_mvt_storedaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_pln_mvt_storedaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_be061a45e9d4fc821d93ef207a5f21e2", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_pln_mvt_storedaysku_model_version__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_pln_mvt_storedaysku_model_version__prod.8ef7db2229", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_be061a45e9d4fc821d93ef207a5f21e2.sql", "original_file_path": "models/staging/facts/movements/plans/src_fact_pln_mvt.yml", "name": "source_not_null_dsr_input_input_pln_mvt_storedaysku_model_version__prod", "alias": "source_not_null_dsr_input_inpu_be061a45e9d4fc821d93ef207a5f21e2", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_pln_mvt_storedaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/plans/src_fact_pln_mvt.yml/schema_test/source_not_null_dsr_input_inpu_be061a45e9d4fc821d93ef207a5f21e2.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_be061a45e9d4fc821d93ef207a5f21e2"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "model_version"}, "test.DSR.source_not_null_dsr_input_input_pln_mvt_storedaysku_organisation_sku__prod.383ec86c07": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_2e0bef45218760e8eba1990ce95f81a4\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "organisation_sku", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_pln_mvt_storedaysku') }} where {{config.get('where')}}) input_pln_mvt_storedaysku{% else %}{{ source('dsr_input', 'input_pln_mvt_storedaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_pln_mvt_storedaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_2e0bef45218760e8eba1990ce95f81a4", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_pln_mvt_storedaysku_organisation_sku__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_pln_mvt_storedaysku_organisation_sku__prod.383ec86c07", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_2e0bef45218760e8eba1990ce95f81a4.sql", "original_file_path": "models/staging/facts/movements/plans/src_fact_pln_mvt.yml", "name": "source_not_null_dsr_input_input_pln_mvt_storedaysku_organisation_sku__prod", "alias": "source_not_null_dsr_input_inpu_2e0bef45218760e8eba1990ce95f81a4", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_pln_mvt_storedaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/plans/src_fact_pln_mvt.yml/schema_test/source_not_null_dsr_input_inpu_2e0bef45218760e8eba1990ce95f81a4.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_2e0bef45218760e8eba1990ce95f81a4"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "organisation_sku"}, "test.DSR.source_not_null_dsr_input_input_pln_mvt_storedaysku_source_db_id__prod.351d508b7d": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_cc0669bf909125a8c47a4f0313e4c994\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "source_db_id", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_pln_mvt_storedaysku') }} where {{config.get('where')}}) input_pln_mvt_storedaysku{% else %}{{ source('dsr_input', 'input_pln_mvt_storedaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_pln_mvt_storedaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_cc0669bf909125a8c47a4f0313e4c994", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_pln_mvt_storedaysku_source_db_id__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_pln_mvt_storedaysku_source_db_id__prod.351d508b7d", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_cc0669bf909125a8c47a4f0313e4c994.sql", "original_file_path": "models/staging/facts/movements/plans/src_fact_pln_mvt.yml", "name": "source_not_null_dsr_input_input_pln_mvt_storedaysku_source_db_id__prod", "alias": "source_not_null_dsr_input_inpu_cc0669bf909125a8c47a4f0313e4c994", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_pln_mvt_storedaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/plans/src_fact_pln_mvt.yml/schema_test/source_not_null_dsr_input_inpu_cc0669bf909125a8c47a4f0313e4c994.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_cc0669bf909125a8c47a4f0313e4c994"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "source_db_id"}, "test.DSR.source_not_null_dsr_input_input_pln_mvt_storedaysku_subject_business_organisation_number__prod.924db6cf7c": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_e8a90d0c84ff8327752a2db99467a569\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "subject_business_organisation_number", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_pln_mvt_storedaysku') }} where {{config.get('where')}}) input_pln_mvt_storedaysku{% else %}{{ source('dsr_input', 'input_pln_mvt_storedaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_pln_mvt_storedaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_e8a90d0c84ff8327752a2db99467a569", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_pln_mvt_storedaysku_subject_business_organisation_number__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_pln_mvt_storedaysku_subject_business_organisation_number__prod.924db6cf7c", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_e8a90d0c84ff8327752a2db99467a569.sql", "original_file_path": "models/staging/facts/movements/plans/src_fact_pln_mvt.yml", "name": "source_not_null_dsr_input_input_pln_mvt_storedaysku_subject_business_organisation_number__prod", "alias": "source_not_null_dsr_input_inpu_e8a90d0c84ff8327752a2db99467a569", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_pln_mvt_storedaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/plans/src_fact_pln_mvt.yml/schema_test/source_not_null_dsr_input_inpu_e8a90d0c84ff8327752a2db99467a569.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_e8a90d0c84ff8327752a2db99467a569"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "subject_business_organisation_number"}, "test.DSR.source_not_null_dsr_input_input_pln_mvt_storedaysku_subject_organisation_location_id_to__prod.28c7c6d059": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_2eb3ea3f2a8fbeb2b2ef88b28c6870bd\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "subject_organisation_location_id_to", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_pln_mvt_storedaysku') }} where {{config.get('where')}}) input_pln_mvt_storedaysku{% else %}{{ source('dsr_input', 'input_pln_mvt_storedaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_pln_mvt_storedaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_2eb3ea3f2a8fbeb2b2ef88b28c6870bd", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_pln_mvt_storedaysku_subject_organisation_location_id_to__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_pln_mvt_storedaysku_subject_organisation_location_id_to__prod.28c7c6d059", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_2eb3ea3f2a8fbeb2b2ef88b28c6870bd.sql", "original_file_path": "models/staging/facts/movements/plans/src_fact_pln_mvt.yml", "name": "source_not_null_dsr_input_input_pln_mvt_storedaysku_subject_organisation_location_id_to__prod", "alias": "source_not_null_dsr_input_inpu_2eb3ea3f2a8fbeb2b2ef88b28c6870bd", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_pln_mvt_storedaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/plans/src_fact_pln_mvt.yml/schema_test/source_not_null_dsr_input_inpu_2eb3ea3f2a8fbeb2b2ef88b28c6870bd.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_2eb3ea3f2a8fbeb2b2ef88b28c6870bd"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "subject_organisation_location_id_to"}, "test.DSR.source_unique_combination_of_columns_dsr_input_input_pln_mvt_orgdepotdaysku_base_forecast_date__forecast_date__source_db_id__subject_organisation_sku__subject_origin_organisation_number__subject_business_organisation_number_from__subject_business_organisation_number_to__subject_organisation_location_id_to__model_version__forecast_components__loaded_timestamp__prod.3e06f1370a": {"raw_sql": "{{ test_unique_combination_of_columns(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_unique_combination_of_c_f5e17014536c58b6cc7843923d19882d\") }}", "test_metadata": {"name": "unique_combination_of_columns", "kwargs": {"combination_of_columns": ["base_forecast_date", "forecast_date", "source_db_id", "subject_organisation_sku", "subject_origin_organisation_number", "subject_business_organisation_number_from", "subject_business_organisation_number_to", "subject_organisation_location_id_to", "model_version", "forecast_components", "loaded_timestamp"], "env": "prod", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_pln_mvt_orgdepotdaysku') }} where {{config.get('where')}}) input_pln_mvt_orgdepotdaysku{% else %}{{ source('dsr_input', 'input_pln_mvt_orgdepotdaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_unique_combination_of_columns"], "nodes": ["source.DSR.dsr_input.input_pln_mvt_orgdepotdaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_unique_combination_of_c_f5e17014536c58b6cc7843923d19882d", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_unique_combination_of_columns_dsr_input_input_pln_mvt_orgdepotdaysku_base_forecast_date__forecast_date__source_db_id__subject_organisation_sku__subject_origin_organisation_number__subject_business_organisation_number_from__subject_business_organisation_number_to__subject_organisation_location_id_to__model_version__forecast_components__loaded_timestamp__prod"], "unique_id": "test.DSR.source_unique_combination_of_columns_dsr_input_input_pln_mvt_orgdepotdaysku_base_forecast_date__forecast_date__source_db_id__subject_organisation_sku__subject_origin_organisation_number__subject_business_organisation_number_from__subject_business_organisation_number_to__subject_organisation_location_id_to__model_version__forecast_components__loaded_timestamp__prod.3e06f1370a", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_unique_combination_of_c_f5e17014536c58b6cc7843923d19882d.sql", "original_file_path": "models/staging/facts/movements/plans/src_fact_pln_mvt.yml", "name": "source_unique_combination_of_columns_dsr_input_input_pln_mvt_orgdepotdaysku_base_forecast_date__forecast_date__source_db_id__subject_organisation_sku__subject_origin_organisation_number__subject_business_organisation_number_from__subject_business_organisation_number_to__subject_organisation_location_id_to__model_version__forecast_components__loaded_timestamp__prod", "alias": "source_unique_combination_of_c_f5e17014536c58b6cc7843923d19882d", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_pln_mvt_orgdepotdaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/plans/src_fact_pln_mvt.yml/schema_test/source_unique_combination_of_c_f5e17014536c58b6cc7843923d19882d.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_unique_combination_of_c_f5e17014536c58b6cc7843923d19882d"}, "created_at": 1631703184, "compiled_sql": "\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": null}, "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_base_forecast_date__prod.77a0c710d3": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_2bd2ccd808366219f6c93f950a07cf2d\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "base_forecast_date", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_pln_mvt_orgdepotdaysku') }} where {{config.get('where')}}) input_pln_mvt_orgdepotdaysku{% else %}{{ source('dsr_input', 'input_pln_mvt_orgdepotdaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_pln_mvt_orgdepotdaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_2bd2ccd808366219f6c93f950a07cf2d", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_base_forecast_date__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_base_forecast_date__prod.77a0c710d3", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_2bd2ccd808366219f6c93f950a07cf2d.sql", "original_file_path": "models/staging/facts/movements/plans/src_fact_pln_mvt.yml", "name": "source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_base_forecast_date__prod", "alias": "source_not_null_dsr_input_inpu_2bd2ccd808366219f6c93f950a07cf2d", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_pln_mvt_orgdepotdaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/plans/src_fact_pln_mvt.yml/schema_test/source_not_null_dsr_input_inpu_2bd2ccd808366219f6c93f950a07cf2d.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_2bd2ccd808366219f6c93f950a07cf2d"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "base_forecast_date"}, "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_forecast_date__prod.805d5a60db": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_2370ec7acd03805f3604c0cb030db389\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "forecast_date", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_pln_mvt_orgdepotdaysku') }} where {{config.get('where')}}) input_pln_mvt_orgdepotdaysku{% else %}{{ source('dsr_input', 'input_pln_mvt_orgdepotdaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_pln_mvt_orgdepotdaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_2370ec7acd03805f3604c0cb030db389", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_forecast_date__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_forecast_date__prod.805d5a60db", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_2370ec7acd03805f3604c0cb030db389.sql", "original_file_path": "models/staging/facts/movements/plans/src_fact_pln_mvt.yml", "name": "source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_forecast_date__prod", "alias": "source_not_null_dsr_input_inpu_2370ec7acd03805f3604c0cb030db389", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_pln_mvt_orgdepotdaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/plans/src_fact_pln_mvt.yml/schema_test/source_not_null_dsr_input_inpu_2370ec7acd03805f3604c0cb030db389.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_2370ec7acd03805f3604c0cb030db389"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "forecast_date"}, "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_model_version__prod.0a6dffe4f9": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_47bc64ad36b527c4b61133f5ce26deea\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "model_version", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_pln_mvt_orgdepotdaysku') }} where {{config.get('where')}}) input_pln_mvt_orgdepotdaysku{% else %}{{ source('dsr_input', 'input_pln_mvt_orgdepotdaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_pln_mvt_orgdepotdaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_47bc64ad36b527c4b61133f5ce26deea", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_model_version__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_model_version__prod.0a6dffe4f9", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_47bc64ad36b527c4b61133f5ce26deea.sql", "original_file_path": "models/staging/facts/movements/plans/src_fact_pln_mvt.yml", "name": "source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_model_version__prod", "alias": "source_not_null_dsr_input_inpu_47bc64ad36b527c4b61133f5ce26deea", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_pln_mvt_orgdepotdaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/plans/src_fact_pln_mvt.yml/schema_test/source_not_null_dsr_input_inpu_47bc64ad36b527c4b61133f5ce26deea.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_47bc64ad36b527c4b61133f5ce26deea"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "model_version"}, "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_source_db_id__prod.a56e7107d8": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_043d2bbb9651f16955b5f330146bebdc\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "source_db_id", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_pln_mvt_orgdepotdaysku') }} where {{config.get('where')}}) input_pln_mvt_orgdepotdaysku{% else %}{{ source('dsr_input', 'input_pln_mvt_orgdepotdaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_pln_mvt_orgdepotdaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_043d2bbb9651f16955b5f330146bebdc", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_source_db_id__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_source_db_id__prod.a56e7107d8", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_043d2bbb9651f16955b5f330146bebdc.sql", "original_file_path": "models/staging/facts/movements/plans/src_fact_pln_mvt.yml", "name": "source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_source_db_id__prod", "alias": "source_not_null_dsr_input_inpu_043d2bbb9651f16955b5f330146bebdc", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_pln_mvt_orgdepotdaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/plans/src_fact_pln_mvt.yml/schema_test/source_not_null_dsr_input_inpu_043d2bbb9651f16955b5f330146bebdc.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_043d2bbb9651f16955b5f330146bebdc"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "source_db_id"}, "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_subject_business_organisation_number_from__prod.652d883ca0": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_62264fb303e7b6b0165a62f8d4394dad\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "subject_business_organisation_number_from", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_pln_mvt_orgdepotdaysku') }} where {{config.get('where')}}) input_pln_mvt_orgdepotdaysku{% else %}{{ source('dsr_input', 'input_pln_mvt_orgdepotdaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_pln_mvt_orgdepotdaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_62264fb303e7b6b0165a62f8d4394dad", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_subject_business_organisation_number_from__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_subject_business_organisation_number_from__prod.652d883ca0", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_62264fb303e7b6b0165a62f8d4394dad.sql", "original_file_path": "models/staging/facts/movements/plans/src_fact_pln_mvt.yml", "name": "source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_subject_business_organisation_number_from__prod", "alias": "source_not_null_dsr_input_inpu_62264fb303e7b6b0165a62f8d4394dad", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_pln_mvt_orgdepotdaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/plans/src_fact_pln_mvt.yml/schema_test/source_not_null_dsr_input_inpu_62264fb303e7b6b0165a62f8d4394dad.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_62264fb303e7b6b0165a62f8d4394dad"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "subject_business_organisation_number_from"}, "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_subject_business_organisation_number_to__prod.07c316e02a": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_0dc815c39c9454cc777ede0bc3f924ee\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "subject_business_organisation_number_to", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_pln_mvt_orgdepotdaysku') }} where {{config.get('where')}}) input_pln_mvt_orgdepotdaysku{% else %}{{ source('dsr_input', 'input_pln_mvt_orgdepotdaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_pln_mvt_orgdepotdaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_0dc815c39c9454cc777ede0bc3f924ee", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_subject_business_organisation_number_to__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_subject_business_organisation_number_to__prod.07c316e02a", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_0dc815c39c9454cc777ede0bc3f924ee.sql", "original_file_path": "models/staging/facts/movements/plans/src_fact_pln_mvt.yml", "name": "source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_subject_business_organisation_number_to__prod", "alias": "source_not_null_dsr_input_inpu_0dc815c39c9454cc777ede0bc3f924ee", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_pln_mvt_orgdepotdaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/plans/src_fact_pln_mvt.yml/schema_test/source_not_null_dsr_input_inpu_0dc815c39c9454cc777ede0bc3f924ee.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_0dc815c39c9454cc777ede0bc3f924ee"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "subject_business_organisation_number_to"}, "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_subject_organisation_location_id_to__prod.eb53f2153c": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_5cf6e69a5bffa471bfdc99789ec8c737\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "subject_organisation_location_id_to", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_pln_mvt_orgdepotdaysku') }} where {{config.get('where')}}) input_pln_mvt_orgdepotdaysku{% else %}{{ source('dsr_input', 'input_pln_mvt_orgdepotdaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_pln_mvt_orgdepotdaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_5cf6e69a5bffa471bfdc99789ec8c737", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_subject_organisation_location_id_to__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_subject_organisation_location_id_to__prod.eb53f2153c", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_5cf6e69a5bffa471bfdc99789ec8c737.sql", "original_file_path": "models/staging/facts/movements/plans/src_fact_pln_mvt.yml", "name": "source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_subject_organisation_location_id_to__prod", "alias": "source_not_null_dsr_input_inpu_5cf6e69a5bffa471bfdc99789ec8c737", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_pln_mvt_orgdepotdaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/plans/src_fact_pln_mvt.yml/schema_test/source_not_null_dsr_input_inpu_5cf6e69a5bffa471bfdc99789ec8c737.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_5cf6e69a5bffa471bfdc99789ec8c737"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "subject_organisation_location_id_to"}, "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_subject_organisation_sku__prod.73a0c522f5": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_a3f4545bfe239eec9b574d9213b901e0\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "subject_organisation_sku", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_pln_mvt_orgdepotdaysku') }} where {{config.get('where')}}) input_pln_mvt_orgdepotdaysku{% else %}{{ source('dsr_input', 'input_pln_mvt_orgdepotdaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_pln_mvt_orgdepotdaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_a3f4545bfe239eec9b574d9213b901e0", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_subject_organisation_sku__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_subject_organisation_sku__prod.73a0c522f5", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_a3f4545bfe239eec9b574d9213b901e0.sql", "original_file_path": "models/staging/facts/movements/plans/src_fact_pln_mvt.yml", "name": "source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_subject_organisation_sku__prod", "alias": "source_not_null_dsr_input_inpu_a3f4545bfe239eec9b574d9213b901e0", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_pln_mvt_orgdepotdaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/plans/src_fact_pln_mvt.yml/schema_test/source_not_null_dsr_input_inpu_a3f4545bfe239eec9b574d9213b901e0.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_a3f4545bfe239eec9b574d9213b901e0"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "subject_organisation_sku"}, "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_subject_origin_organisation_number__prod.16e5d6ccca": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_c8edc2f1a5de7424307bf4fe0424d7b1\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "subject_origin_organisation_number", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_pln_mvt_orgdepotdaysku') }} where {{config.get('where')}}) input_pln_mvt_orgdepotdaysku{% else %}{{ source('dsr_input', 'input_pln_mvt_orgdepotdaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_pln_mvt_orgdepotdaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_c8edc2f1a5de7424307bf4fe0424d7b1", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_subject_origin_organisation_number__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_subject_origin_organisation_number__prod.16e5d6ccca", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_c8edc2f1a5de7424307bf4fe0424d7b1.sql", "original_file_path": "models/staging/facts/movements/plans/src_fact_pln_mvt.yml", "name": "source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_subject_origin_organisation_number__prod", "alias": "source_not_null_dsr_input_inpu_c8edc2f1a5de7424307bf4fe0424d7b1", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_pln_mvt_orgdepotdaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/plans/src_fact_pln_mvt.yml/schema_test/source_not_null_dsr_input_inpu_c8edc2f1a5de7424307bf4fe0424d7b1.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_c8edc2f1a5de7424307bf4fe0424d7b1"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "subject_origin_organisation_number"}, "test.DSR.source_unique_combination_of_columns_dsr_input_input_pln_mvt_orgstoredaysku_base_forecast_date__forecast_date__source_db_id__organisation_sku__subject_origin_organisation_number__subject_organisation_location_id_to__model_version__forecast_components__loaded_timestamp__prod.a22153026e": {"raw_sql": "{{ test_unique_combination_of_columns(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_unique_combination_of_c_45fcb458770b849ae8ca023c076b4e1d\") }}", "test_metadata": {"name": "unique_combination_of_columns", "kwargs": {"combination_of_columns": ["base_forecast_date", "forecast_date", "source_db_id", "organisation_sku", "subject_origin_organisation_number", "subject_organisation_location_id_to", "model_version", "forecast_components", "loaded_timestamp"], "env": "prod", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_pln_mvt_orgstoredaysku') }} where {{config.get('where')}}) input_pln_mvt_orgstoredaysku{% else %}{{ source('dsr_input', 'input_pln_mvt_orgstoredaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_unique_combination_of_columns"], "nodes": ["source.DSR.dsr_input.input_pln_mvt_orgstoredaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_unique_combination_of_c_45fcb458770b849ae8ca023c076b4e1d", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_unique_combination_of_columns_dsr_input_input_pln_mvt_orgstoredaysku_base_forecast_date__forecast_date__source_db_id__organisation_sku__subject_origin_organisation_number__subject_organisation_location_id_to__model_version__forecast_components__loaded_timestamp__prod"], "unique_id": "test.DSR.source_unique_combination_of_columns_dsr_input_input_pln_mvt_orgstoredaysku_base_forecast_date__forecast_date__source_db_id__organisation_sku__subject_origin_organisation_number__subject_organisation_location_id_to__model_version__forecast_components__loaded_timestamp__prod.a22153026e", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_unique_combination_of_c_45fcb458770b849ae8ca023c076b4e1d.sql", "original_file_path": "models/staging/facts/movements/plans/src_fact_pln_mvt.yml", "name": "source_unique_combination_of_columns_dsr_input_input_pln_mvt_orgstoredaysku_base_forecast_date__forecast_date__source_db_id__organisation_sku__subject_origin_organisation_number__subject_organisation_location_id_to__model_version__forecast_components__loaded_timestamp__prod", "alias": "source_unique_combination_of_c_45fcb458770b849ae8ca023c076b4e1d", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_pln_mvt_orgstoredaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/plans/src_fact_pln_mvt.yml/schema_test/source_unique_combination_of_c_45fcb458770b849ae8ca023c076b4e1d.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_unique_combination_of_c_45fcb458770b849ae8ca023c076b4e1d"}, "created_at": 1631703184, "compiled_sql": "\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": null}, "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgstoredaysku_base_forecast_date__prod.49a12ae94d": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_b762adaab517587e6af519e8a8952100\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "base_forecast_date", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_pln_mvt_orgstoredaysku') }} where {{config.get('where')}}) input_pln_mvt_orgstoredaysku{% else %}{{ source('dsr_input', 'input_pln_mvt_orgstoredaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_pln_mvt_orgstoredaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_b762adaab517587e6af519e8a8952100", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_pln_mvt_orgstoredaysku_base_forecast_date__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgstoredaysku_base_forecast_date__prod.49a12ae94d", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_b762adaab517587e6af519e8a8952100.sql", "original_file_path": "models/staging/facts/movements/plans/src_fact_pln_mvt.yml", "name": "source_not_null_dsr_input_input_pln_mvt_orgstoredaysku_base_forecast_date__prod", "alias": "source_not_null_dsr_input_inpu_b762adaab517587e6af519e8a8952100", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_pln_mvt_orgstoredaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/plans/src_fact_pln_mvt.yml/schema_test/source_not_null_dsr_input_inpu_b762adaab517587e6af519e8a8952100.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_b762adaab517587e6af519e8a8952100"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "base_forecast_date"}, "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgstoredaysku_forecast_date__prod.b9de2cd052": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_a96e45a59d3cee1fdd266e18749e80b8\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "forecast_date", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_pln_mvt_orgstoredaysku') }} where {{config.get('where')}}) input_pln_mvt_orgstoredaysku{% else %}{{ source('dsr_input', 'input_pln_mvt_orgstoredaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_pln_mvt_orgstoredaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_a96e45a59d3cee1fdd266e18749e80b8", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_pln_mvt_orgstoredaysku_forecast_date__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgstoredaysku_forecast_date__prod.b9de2cd052", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_a96e45a59d3cee1fdd266e18749e80b8.sql", "original_file_path": "models/staging/facts/movements/plans/src_fact_pln_mvt.yml", "name": "source_not_null_dsr_input_input_pln_mvt_orgstoredaysku_forecast_date__prod", "alias": "source_not_null_dsr_input_inpu_a96e45a59d3cee1fdd266e18749e80b8", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_pln_mvt_orgstoredaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/plans/src_fact_pln_mvt.yml/schema_test/source_not_null_dsr_input_inpu_a96e45a59d3cee1fdd266e18749e80b8.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_a96e45a59d3cee1fdd266e18749e80b8"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "forecast_date"}, "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgstoredaysku_organisation_sku__prod.e1f5d6dd09": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_621a86b491b1070bf6e9e5abbc401954\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "organisation_sku", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_pln_mvt_orgstoredaysku') }} where {{config.get('where')}}) input_pln_mvt_orgstoredaysku{% else %}{{ source('dsr_input', 'input_pln_mvt_orgstoredaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_pln_mvt_orgstoredaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_621a86b491b1070bf6e9e5abbc401954", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_pln_mvt_orgstoredaysku_organisation_sku__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgstoredaysku_organisation_sku__prod.e1f5d6dd09", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_621a86b491b1070bf6e9e5abbc401954.sql", "original_file_path": "models/staging/facts/movements/plans/src_fact_pln_mvt.yml", "name": "source_not_null_dsr_input_input_pln_mvt_orgstoredaysku_organisation_sku__prod", "alias": "source_not_null_dsr_input_inpu_621a86b491b1070bf6e9e5abbc401954", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_pln_mvt_orgstoredaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/plans/src_fact_pln_mvt.yml/schema_test/source_not_null_dsr_input_inpu_621a86b491b1070bf6e9e5abbc401954.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_621a86b491b1070bf6e9e5abbc401954"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "organisation_sku"}, "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgstoredaysku_source_db_id__prod.8d432762d6": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_37282fce1c2215052cad2236f97513df\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "source_db_id", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_pln_mvt_orgstoredaysku') }} where {{config.get('where')}}) input_pln_mvt_orgstoredaysku{% else %}{{ source('dsr_input', 'input_pln_mvt_orgstoredaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_pln_mvt_orgstoredaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_37282fce1c2215052cad2236f97513df", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_pln_mvt_orgstoredaysku_source_db_id__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgstoredaysku_source_db_id__prod.8d432762d6", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_37282fce1c2215052cad2236f97513df.sql", "original_file_path": "models/staging/facts/movements/plans/src_fact_pln_mvt.yml", "name": "source_not_null_dsr_input_input_pln_mvt_orgstoredaysku_source_db_id__prod", "alias": "source_not_null_dsr_input_inpu_37282fce1c2215052cad2236f97513df", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_pln_mvt_orgstoredaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/plans/src_fact_pln_mvt.yml/schema_test/source_not_null_dsr_input_inpu_37282fce1c2215052cad2236f97513df.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_37282fce1c2215052cad2236f97513df"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "source_db_id"}, "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgstoredaysku_subject_business_organisation_number__prod.95bf8c693a": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_3c147047b18e68d94593efc837e0c666\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "subject_business_organisation_number", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_pln_mvt_orgstoredaysku') }} where {{config.get('where')}}) input_pln_mvt_orgstoredaysku{% else %}{{ source('dsr_input', 'input_pln_mvt_orgstoredaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_pln_mvt_orgstoredaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_3c147047b18e68d94593efc837e0c666", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_pln_mvt_orgstoredaysku_subject_business_organisation_number__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgstoredaysku_subject_business_organisation_number__prod.95bf8c693a", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_3c147047b18e68d94593efc837e0c666.sql", "original_file_path": "models/staging/facts/movements/plans/src_fact_pln_mvt.yml", "name": "source_not_null_dsr_input_input_pln_mvt_orgstoredaysku_subject_business_organisation_number__prod", "alias": "source_not_null_dsr_input_inpu_3c147047b18e68d94593efc837e0c666", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_pln_mvt_orgstoredaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/plans/src_fact_pln_mvt.yml/schema_test/source_not_null_dsr_input_inpu_3c147047b18e68d94593efc837e0c666.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_3c147047b18e68d94593efc837e0c666"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "subject_business_organisation_number"}, "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgstoredaysku_subject_organisation_location_id_to__prod.13d8784112": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_6ca144bca1c1d0243cfcf05fad9778b3\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "subject_organisation_location_id_to", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_pln_mvt_orgstoredaysku') }} where {{config.get('where')}}) input_pln_mvt_orgstoredaysku{% else %}{{ source('dsr_input', 'input_pln_mvt_orgstoredaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_pln_mvt_orgstoredaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_6ca144bca1c1d0243cfcf05fad9778b3", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_pln_mvt_orgstoredaysku_subject_organisation_location_id_to__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgstoredaysku_subject_organisation_location_id_to__prod.13d8784112", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_6ca144bca1c1d0243cfcf05fad9778b3.sql", "original_file_path": "models/staging/facts/movements/plans/src_fact_pln_mvt.yml", "name": "source_not_null_dsr_input_input_pln_mvt_orgstoredaysku_subject_organisation_location_id_to__prod", "alias": "source_not_null_dsr_input_inpu_6ca144bca1c1d0243cfcf05fad9778b3", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_pln_mvt_orgstoredaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/plans/src_fact_pln_mvt.yml/schema_test/source_not_null_dsr_input_inpu_6ca144bca1c1d0243cfcf05fad9778b3.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_6ca144bca1c1d0243cfcf05fad9778b3"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "subject_organisation_location_id_to"}, "test.DSR.source_unique_combination_of_columns_dsr_input_input_act_mvt_storedaysku_day_date__source_db_id__organisation_sku__organisation_location_id__loaded_timestamp__prod.945821c065": {"raw_sql": "{{ test_unique_combination_of_columns(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_unique_combination_of_c_c5e96903bb1457ca8b46eeab14d705bc\") }}", "test_metadata": {"name": "unique_combination_of_columns", "kwargs": {"combination_of_columns": ["day_date", "source_db_id", "organisation_sku", "organisation_location_id", "loaded_timestamp"], "env": "prod", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_act_mvt_storedaysku') }} where {{config.get('where')}}) input_act_mvt_storedaysku{% else %}{{ source('dsr_input', 'input_act_mvt_storedaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_unique_combination_of_columns"], "nodes": ["source.DSR.dsr_input.input_act_mvt_storedaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_unique_combination_of_c_c5e96903bb1457ca8b46eeab14d705bc", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_unique_combination_of_columns_dsr_input_input_act_mvt_storedaysku_day_date__source_db_id__organisation_sku__organisation_location_id__loaded_timestamp__prod"], "unique_id": "test.DSR.source_unique_combination_of_columns_dsr_input_input_act_mvt_storedaysku_day_date__source_db_id__organisation_sku__organisation_location_id__loaded_timestamp__prod.945821c065", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_unique_combination_of_c_c5e96903bb1457ca8b46eeab14d705bc.sql", "original_file_path": "models/staging/facts/movements/actuals/src_fact_act_mvt.yml", "name": "source_unique_combination_of_columns_dsr_input_input_act_mvt_storedaysku_day_date__source_db_id__organisation_sku__organisation_location_id__loaded_timestamp__prod", "alias": "source_unique_combination_of_c_c5e96903bb1457ca8b46eeab14d705bc", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_act_mvt_storedaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/actuals/src_fact_act_mvt.yml/schema_test/source_unique_combination_of_c_c5e96903bb1457ca8b46eeab14d705bc.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_unique_combination_of_c_c5e96903bb1457ca8b46eeab14d705bc"}, "created_at": 1631703184, "compiled_sql": "\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": null}, "test.DSR.source_not_null_dsr_input_input_act_mvt_storedaysku_day_date__prod.064d970468": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_eb25931641fea9047f0eed3719dcd456\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "day_date", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_act_mvt_storedaysku') }} where {{config.get('where')}}) input_act_mvt_storedaysku{% else %}{{ source('dsr_input', 'input_act_mvt_storedaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_act_mvt_storedaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_eb25931641fea9047f0eed3719dcd456", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_act_mvt_storedaysku_day_date__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_act_mvt_storedaysku_day_date__prod.064d970468", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_eb25931641fea9047f0eed3719dcd456.sql", "original_file_path": "models/staging/facts/movements/actuals/src_fact_act_mvt.yml", "name": "source_not_null_dsr_input_input_act_mvt_storedaysku_day_date__prod", "alias": "source_not_null_dsr_input_inpu_eb25931641fea9047f0eed3719dcd456", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_act_mvt_storedaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/actuals/src_fact_act_mvt.yml/schema_test/source_not_null_dsr_input_inpu_eb25931641fea9047f0eed3719dcd456.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_eb25931641fea9047f0eed3719dcd456"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "day_date"}, "test.DSR.source_not_null_dsr_input_input_act_mvt_storedaysku_organisation_location_id__prod.207cbbc934": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_1ef014def304d1542946ea11da5617a6\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "organisation_location_id", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_act_mvt_storedaysku') }} where {{config.get('where')}}) input_act_mvt_storedaysku{% else %}{{ source('dsr_input', 'input_act_mvt_storedaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_act_mvt_storedaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_1ef014def304d1542946ea11da5617a6", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_act_mvt_storedaysku_organisation_location_id__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_act_mvt_storedaysku_organisation_location_id__prod.207cbbc934", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_1ef014def304d1542946ea11da5617a6.sql", "original_file_path": "models/staging/facts/movements/actuals/src_fact_act_mvt.yml", "name": "source_not_null_dsr_input_input_act_mvt_storedaysku_organisation_location_id__prod", "alias": "source_not_null_dsr_input_inpu_1ef014def304d1542946ea11da5617a6", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_act_mvt_storedaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/actuals/src_fact_act_mvt.yml/schema_test/source_not_null_dsr_input_inpu_1ef014def304d1542946ea11da5617a6.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_1ef014def304d1542946ea11da5617a6"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "organisation_location_id"}, "test.DSR.source_not_null_dsr_input_input_act_mvt_storedaysku_organisation_sku__prod.78ff89c539": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_935a553a19daa054410c2177bfb076a5\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "organisation_sku", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_act_mvt_storedaysku') }} where {{config.get('where')}}) input_act_mvt_storedaysku{% else %}{{ source('dsr_input', 'input_act_mvt_storedaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_act_mvt_storedaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_935a553a19daa054410c2177bfb076a5", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_act_mvt_storedaysku_organisation_sku__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_act_mvt_storedaysku_organisation_sku__prod.78ff89c539", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_935a553a19daa054410c2177bfb076a5.sql", "original_file_path": "models/staging/facts/movements/actuals/src_fact_act_mvt.yml", "name": "source_not_null_dsr_input_input_act_mvt_storedaysku_organisation_sku__prod", "alias": "source_not_null_dsr_input_inpu_935a553a19daa054410c2177bfb076a5", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_act_mvt_storedaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/actuals/src_fact_act_mvt.yml/schema_test/source_not_null_dsr_input_inpu_935a553a19daa054410c2177bfb076a5.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_935a553a19daa054410c2177bfb076a5"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "organisation_sku"}, "test.DSR.source_not_null_dsr_input_input_act_mvt_storedaysku_source_db_id__prod.c0eec0eb1b": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_389a7651a9f62ee4ed26d348fce009c6\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "source_db_id", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_act_mvt_storedaysku') }} where {{config.get('where')}}) input_act_mvt_storedaysku{% else %}{{ source('dsr_input', 'input_act_mvt_storedaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_act_mvt_storedaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_389a7651a9f62ee4ed26d348fce009c6", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_act_mvt_storedaysku_source_db_id__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_act_mvt_storedaysku_source_db_id__prod.c0eec0eb1b", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_389a7651a9f62ee4ed26d348fce009c6.sql", "original_file_path": "models/staging/facts/movements/actuals/src_fact_act_mvt.yml", "name": "source_not_null_dsr_input_input_act_mvt_storedaysku_source_db_id__prod", "alias": "source_not_null_dsr_input_inpu_389a7651a9f62ee4ed26d348fce009c6", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_act_mvt_storedaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/actuals/src_fact_act_mvt.yml/schema_test/source_not_null_dsr_input_inpu_389a7651a9f62ee4ed26d348fce009c6.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_389a7651a9f62ee4ed26d348fce009c6"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "source_db_id"}, "test.DSR.source_unique_combination_of_columns_dsr_input_input_act_mvt_orgdepotdaycase_day_date__source_db_id__organisation_case__organisation_location_id__business_organisation_number_from__loaded_timestamp__prod.e3d31d8d7b": {"raw_sql": "{{ test_unique_combination_of_columns(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_unique_combination_of_c_a741b64a4d40882b285d2382fe7bbab5\") }}", "test_metadata": {"name": "unique_combination_of_columns", "kwargs": {"combination_of_columns": ["day_date", "source_db_id", "organisation_case", "organisation_location_id", "business_organisation_number_from", "loaded_timestamp"], "env": "prod", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_act_mvt_orgdepotdaycase') }} where {{config.get('where')}}) input_act_mvt_orgdepotdaycase{% else %}{{ source('dsr_input', 'input_act_mvt_orgdepotdaycase') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_unique_combination_of_columns"], "nodes": ["source.DSR.dsr_input.input_act_mvt_orgdepotdaycase"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_unique_combination_of_c_a741b64a4d40882b285d2382fe7bbab5", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_unique_combination_of_columns_dsr_input_input_act_mvt_orgdepotdaycase_day_date__source_db_id__organisation_case__organisation_location_id__business_organisation_number_from__loaded_timestamp__prod"], "unique_id": "test.DSR.source_unique_combination_of_columns_dsr_input_input_act_mvt_orgdepotdaycase_day_date__source_db_id__organisation_case__organisation_location_id__business_organisation_number_from__loaded_timestamp__prod.e3d31d8d7b", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_unique_combination_of_c_a741b64a4d40882b285d2382fe7bbab5.sql", "original_file_path": "models/staging/facts/movements/actuals/src_fact_act_mvt.yml", "name": "source_unique_combination_of_columns_dsr_input_input_act_mvt_orgdepotdaycase_day_date__source_db_id__organisation_case__organisation_location_id__business_organisation_number_from__loaded_timestamp__prod", "alias": "source_unique_combination_of_c_a741b64a4d40882b285d2382fe7bbab5", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_act_mvt_orgdepotdaycase"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/actuals/src_fact_act_mvt.yml/schema_test/source_unique_combination_of_c_a741b64a4d40882b285d2382fe7bbab5.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_unique_combination_of_c_a741b64a4d40882b285d2382fe7bbab5"}, "created_at": 1631703184, "compiled_sql": "\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": null}, "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdaycase_business_organisation_number_from__prod.689f866149": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_6330501d17dcde513b3c53e41fc82655\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "business_organisation_number_from", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_act_mvt_orgdepotdaycase') }} where {{config.get('where')}}) input_act_mvt_orgdepotdaycase{% else %}{{ source('dsr_input', 'input_act_mvt_orgdepotdaycase') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_act_mvt_orgdepotdaycase"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_6330501d17dcde513b3c53e41fc82655", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_act_mvt_orgdepotdaycase_business_organisation_number_from__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdaycase_business_organisation_number_from__prod.689f866149", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_6330501d17dcde513b3c53e41fc82655.sql", "original_file_path": "models/staging/facts/movements/actuals/src_fact_act_mvt.yml", "name": "source_not_null_dsr_input_input_act_mvt_orgdepotdaycase_business_organisation_number_from__prod", "alias": "source_not_null_dsr_input_inpu_6330501d17dcde513b3c53e41fc82655", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_act_mvt_orgdepotdaycase"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/actuals/src_fact_act_mvt.yml/schema_test/source_not_null_dsr_input_inpu_6330501d17dcde513b3c53e41fc82655.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_6330501d17dcde513b3c53e41fc82655"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "business_organisation_number_from"}, "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdaycase_day_date__prod.07ed6e117c": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_513fc761b9118b6148b8719c94e0a879\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "day_date", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_act_mvt_orgdepotdaycase') }} where {{config.get('where')}}) input_act_mvt_orgdepotdaycase{% else %}{{ source('dsr_input', 'input_act_mvt_orgdepotdaycase') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_act_mvt_orgdepotdaycase"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_513fc761b9118b6148b8719c94e0a879", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_act_mvt_orgdepotdaycase_day_date__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdaycase_day_date__prod.07ed6e117c", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_513fc761b9118b6148b8719c94e0a879.sql", "original_file_path": "models/staging/facts/movements/actuals/src_fact_act_mvt.yml", "name": "source_not_null_dsr_input_input_act_mvt_orgdepotdaycase_day_date__prod", "alias": "source_not_null_dsr_input_inpu_513fc761b9118b6148b8719c94e0a879", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_act_mvt_orgdepotdaycase"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/actuals/src_fact_act_mvt.yml/schema_test/source_not_null_dsr_input_inpu_513fc761b9118b6148b8719c94e0a879.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_513fc761b9118b6148b8719c94e0a879"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "day_date"}, "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdaycase_organisation_case__prod.5386c84bbb": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_e218352077edf6a8929289c37e5f680c\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "organisation_case", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_act_mvt_orgdepotdaycase') }} where {{config.get('where')}}) input_act_mvt_orgdepotdaycase{% else %}{{ source('dsr_input', 'input_act_mvt_orgdepotdaycase') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_act_mvt_orgdepotdaycase"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_e218352077edf6a8929289c37e5f680c", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_act_mvt_orgdepotdaycase_organisation_case__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdaycase_organisation_case__prod.5386c84bbb", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_e218352077edf6a8929289c37e5f680c.sql", "original_file_path": "models/staging/facts/movements/actuals/src_fact_act_mvt.yml", "name": "source_not_null_dsr_input_input_act_mvt_orgdepotdaycase_organisation_case__prod", "alias": "source_not_null_dsr_input_inpu_e218352077edf6a8929289c37e5f680c", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_act_mvt_orgdepotdaycase"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/actuals/src_fact_act_mvt.yml/schema_test/source_not_null_dsr_input_inpu_e218352077edf6a8929289c37e5f680c.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_e218352077edf6a8929289c37e5f680c"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "organisation_case"}, "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdaycase_organisation_location_id__prod.415bd39b94": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_a37bed0240e2eee2b3f1640d760b901a\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "organisation_location_id", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_act_mvt_orgdepotdaycase') }} where {{config.get('where')}}) input_act_mvt_orgdepotdaycase{% else %}{{ source('dsr_input', 'input_act_mvt_orgdepotdaycase') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_act_mvt_orgdepotdaycase"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_a37bed0240e2eee2b3f1640d760b901a", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_act_mvt_orgdepotdaycase_organisation_location_id__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdaycase_organisation_location_id__prod.415bd39b94", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_a37bed0240e2eee2b3f1640d760b901a.sql", "original_file_path": "models/staging/facts/movements/actuals/src_fact_act_mvt.yml", "name": "source_not_null_dsr_input_input_act_mvt_orgdepotdaycase_organisation_location_id__prod", "alias": "source_not_null_dsr_input_inpu_a37bed0240e2eee2b3f1640d760b901a", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_act_mvt_orgdepotdaycase"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/actuals/src_fact_act_mvt.yml/schema_test/source_not_null_dsr_input_inpu_a37bed0240e2eee2b3f1640d760b901a.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_a37bed0240e2eee2b3f1640d760b901a"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "organisation_location_id"}, "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdaycase_source_db_id__prod.73ae8a12ac": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_7291c194712419e083b49d5c61e581fd\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "source_db_id", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_act_mvt_orgdepotdaycase') }} where {{config.get('where')}}) input_act_mvt_orgdepotdaycase{% else %}{{ source('dsr_input', 'input_act_mvt_orgdepotdaycase') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_act_mvt_orgdepotdaycase"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_7291c194712419e083b49d5c61e581fd", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_act_mvt_orgdepotdaycase_source_db_id__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdaycase_source_db_id__prod.73ae8a12ac", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_7291c194712419e083b49d5c61e581fd.sql", "original_file_path": "models/staging/facts/movements/actuals/src_fact_act_mvt.yml", "name": "source_not_null_dsr_input_input_act_mvt_orgdepotdaycase_source_db_id__prod", "alias": "source_not_null_dsr_input_inpu_7291c194712419e083b49d5c61e581fd", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_act_mvt_orgdepotdaycase"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/actuals/src_fact_act_mvt.yml/schema_test/source_not_null_dsr_input_inpu_7291c194712419e083b49d5c61e581fd.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_7291c194712419e083b49d5c61e581fd"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "source_db_id"}, "test.DSR.source_unique_combination_of_columns_dsr_input_input_act_mvt_orgdepotdayordercase_day_date__source_db_id__organisation_case__organisation_location_id__order_code__business_organisation_number_from__loaded_timestamp__prod.cce3ee2674": {"raw_sql": "{{ test_unique_combination_of_columns(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_unique_combination_of_c_a6498ab06126e82e52130aeb6093e2fb\") }}", "test_metadata": {"name": "unique_combination_of_columns", "kwargs": {"combination_of_columns": ["day_date", "source_db_id", "organisation_case", "organisation_location_id", "order_code", "business_organisation_number_from", "loaded_timestamp"], "env": "prod", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_act_mvt_orgdepotdayordercase') }} where {{config.get('where')}}) input_act_mvt_orgdepotdayordercase{% else %}{{ source('dsr_input', 'input_act_mvt_orgdepotdayordercase') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_unique_combination_of_columns"], "nodes": ["source.DSR.dsr_input.input_act_mvt_orgdepotdayordercase"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_unique_combination_of_c_a6498ab06126e82e52130aeb6093e2fb", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_unique_combination_of_columns_dsr_input_input_act_mvt_orgdepotdayordercase_day_date__source_db_id__organisation_case__organisation_location_id__order_code__business_organisation_number_from__loaded_timestamp__prod"], "unique_id": "test.DSR.source_unique_combination_of_columns_dsr_input_input_act_mvt_orgdepotdayordercase_day_date__source_db_id__organisation_case__organisation_location_id__order_code__business_organisation_number_from__loaded_timestamp__prod.cce3ee2674", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_unique_combination_of_c_a6498ab06126e82e52130aeb6093e2fb.sql", "original_file_path": "models/staging/facts/movements/actuals/src_fact_act_mvt.yml", "name": "source_unique_combination_of_columns_dsr_input_input_act_mvt_orgdepotdayordercase_day_date__source_db_id__organisation_case__organisation_location_id__order_code__business_organisation_number_from__loaded_timestamp__prod", "alias": "source_unique_combination_of_c_a6498ab06126e82e52130aeb6093e2fb", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_act_mvt_orgdepotdayordercase"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/actuals/src_fact_act_mvt.yml/schema_test/source_unique_combination_of_c_a6498ab06126e82e52130aeb6093e2fb.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_unique_combination_of_c_a6498ab06126e82e52130aeb6093e2fb"}, "created_at": 1631703184, "compiled_sql": "\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": null}, "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdayordercase_business_organisation_number_from__prod.5480634156": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_0f04def9b270d62518b14067b192b61d\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "business_organisation_number_from", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_act_mvt_orgdepotdayordercase') }} where {{config.get('where')}}) input_act_mvt_orgdepotdayordercase{% else %}{{ source('dsr_input', 'input_act_mvt_orgdepotdayordercase') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_act_mvt_orgdepotdayordercase"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_0f04def9b270d62518b14067b192b61d", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_act_mvt_orgdepotdayordercase_business_organisation_number_from__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdayordercase_business_organisation_number_from__prod.5480634156", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_0f04def9b270d62518b14067b192b61d.sql", "original_file_path": "models/staging/facts/movements/actuals/src_fact_act_mvt.yml", "name": "source_not_null_dsr_input_input_act_mvt_orgdepotdayordercase_business_organisation_number_from__prod", "alias": "source_not_null_dsr_input_inpu_0f04def9b270d62518b14067b192b61d", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_act_mvt_orgdepotdayordercase"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/actuals/src_fact_act_mvt.yml/schema_test/source_not_null_dsr_input_inpu_0f04def9b270d62518b14067b192b61d.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_0f04def9b270d62518b14067b192b61d"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "business_organisation_number_from"}, "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdayordercase_day_date__prod.fd84cbd0e6": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_11d376b3bfdedf07b9e60fc9ebe2bc43\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "day_date", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_act_mvt_orgdepotdayordercase') }} where {{config.get('where')}}) input_act_mvt_orgdepotdayordercase{% else %}{{ source('dsr_input', 'input_act_mvt_orgdepotdayordercase') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_act_mvt_orgdepotdayordercase"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_11d376b3bfdedf07b9e60fc9ebe2bc43", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_act_mvt_orgdepotdayordercase_day_date__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdayordercase_day_date__prod.fd84cbd0e6", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_11d376b3bfdedf07b9e60fc9ebe2bc43.sql", "original_file_path": "models/staging/facts/movements/actuals/src_fact_act_mvt.yml", "name": "source_not_null_dsr_input_input_act_mvt_orgdepotdayordercase_day_date__prod", "alias": "source_not_null_dsr_input_inpu_11d376b3bfdedf07b9e60fc9ebe2bc43", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_act_mvt_orgdepotdayordercase"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/actuals/src_fact_act_mvt.yml/schema_test/source_not_null_dsr_input_inpu_11d376b3bfdedf07b9e60fc9ebe2bc43.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_11d376b3bfdedf07b9e60fc9ebe2bc43"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "day_date"}, "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdayordercase_order_code__prod.0ec5bad996": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_c6442bbd904704db053b58f24b458335\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "order_code", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_act_mvt_orgdepotdayordercase') }} where {{config.get('where')}}) input_act_mvt_orgdepotdayordercase{% else %}{{ source('dsr_input', 'input_act_mvt_orgdepotdayordercase') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_act_mvt_orgdepotdayordercase"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_c6442bbd904704db053b58f24b458335", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_act_mvt_orgdepotdayordercase_order_code__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdayordercase_order_code__prod.0ec5bad996", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_c6442bbd904704db053b58f24b458335.sql", "original_file_path": "models/staging/facts/movements/actuals/src_fact_act_mvt.yml", "name": "source_not_null_dsr_input_input_act_mvt_orgdepotdayordercase_order_code__prod", "alias": "source_not_null_dsr_input_inpu_c6442bbd904704db053b58f24b458335", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_act_mvt_orgdepotdayordercase"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/actuals/src_fact_act_mvt.yml/schema_test/source_not_null_dsr_input_inpu_c6442bbd904704db053b58f24b458335.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_c6442bbd904704db053b58f24b458335"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "order_code"}, "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdayordercase_organisation_case__prod.324fe411d9": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_d2a355845f57e4b89e2c2988fe895a9d\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "organisation_case", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_act_mvt_orgdepotdayordercase') }} where {{config.get('where')}}) input_act_mvt_orgdepotdayordercase{% else %}{{ source('dsr_input', 'input_act_mvt_orgdepotdayordercase') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_act_mvt_orgdepotdayordercase"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_d2a355845f57e4b89e2c2988fe895a9d", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_act_mvt_orgdepotdayordercase_organisation_case__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdayordercase_organisation_case__prod.324fe411d9", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_d2a355845f57e4b89e2c2988fe895a9d.sql", "original_file_path": "models/staging/facts/movements/actuals/src_fact_act_mvt.yml", "name": "source_not_null_dsr_input_input_act_mvt_orgdepotdayordercase_organisation_case__prod", "alias": "source_not_null_dsr_input_inpu_d2a355845f57e4b89e2c2988fe895a9d", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_act_mvt_orgdepotdayordercase"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/actuals/src_fact_act_mvt.yml/schema_test/source_not_null_dsr_input_inpu_d2a355845f57e4b89e2c2988fe895a9d.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_d2a355845f57e4b89e2c2988fe895a9d"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "organisation_case"}, "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdayordercase_organisation_location_id__prod.9e498a71fd": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_0e796ee4fbd38d83ed0629d4c0283b03\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "organisation_location_id", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_act_mvt_orgdepotdayordercase') }} where {{config.get('where')}}) input_act_mvt_orgdepotdayordercase{% else %}{{ source('dsr_input', 'input_act_mvt_orgdepotdayordercase') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_act_mvt_orgdepotdayordercase"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_0e796ee4fbd38d83ed0629d4c0283b03", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_act_mvt_orgdepotdayordercase_organisation_location_id__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdayordercase_organisation_location_id__prod.9e498a71fd", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_0e796ee4fbd38d83ed0629d4c0283b03.sql", "original_file_path": "models/staging/facts/movements/actuals/src_fact_act_mvt.yml", "name": "source_not_null_dsr_input_input_act_mvt_orgdepotdayordercase_organisation_location_id__prod", "alias": "source_not_null_dsr_input_inpu_0e796ee4fbd38d83ed0629d4c0283b03", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_act_mvt_orgdepotdayordercase"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/actuals/src_fact_act_mvt.yml/schema_test/source_not_null_dsr_input_inpu_0e796ee4fbd38d83ed0629d4c0283b03.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_0e796ee4fbd38d83ed0629d4c0283b03"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "organisation_location_id"}, "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdayordercase_source_db_id__prod.cc2f587dc6": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_a201d8cb322eb68e4beba18866b59cdb\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "source_db_id", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_act_mvt_orgdepotdayordercase') }} where {{config.get('where')}}) input_act_mvt_orgdepotdayordercase{% else %}{{ source('dsr_input', 'input_act_mvt_orgdepotdayordercase') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_act_mvt_orgdepotdayordercase"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_a201d8cb322eb68e4beba18866b59cdb", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_act_mvt_orgdepotdayordercase_source_db_id__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdayordercase_source_db_id__prod.cc2f587dc6", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_a201d8cb322eb68e4beba18866b59cdb.sql", "original_file_path": "models/staging/facts/movements/actuals/src_fact_act_mvt.yml", "name": "source_not_null_dsr_input_input_act_mvt_orgdepotdayordercase_source_db_id__prod", "alias": "source_not_null_dsr_input_inpu_a201d8cb322eb68e4beba18866b59cdb", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_act_mvt_orgdepotdayordercase"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/actuals/src_fact_act_mvt.yml/schema_test/source_not_null_dsr_input_inpu_a201d8cb322eb68e4beba18866b59cdb.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_a201d8cb322eb68e4beba18866b59cdb"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "source_db_id"}, "test.DSR.source_unique_combination_of_columns_dsr_input_input_act_mvt_depotstoredaysku_day_date__source_db_id__organisation_sku__organisation_location_id_from__organisation_location_id_to__loaded_timestamp__prod.a3b7676652": {"raw_sql": "{{ test_unique_combination_of_columns(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_unique_combination_of_c_8c49f252831f5b529666bf9c23e0b39a\") }}", "test_metadata": {"name": "unique_combination_of_columns", "kwargs": {"combination_of_columns": ["day_date", "source_db_id", "organisation_sku", "organisation_location_id_from", "organisation_location_id_to", "loaded_timestamp"], "env": "prod", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_act_mvt_depotstoredaysku') }} where {{config.get('where')}}) input_act_mvt_depotstoredaysku{% else %}{{ source('dsr_input', 'input_act_mvt_depotstoredaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_unique_combination_of_columns"], "nodes": ["source.DSR.dsr_input.input_act_mvt_depotstoredaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_unique_combination_of_c_8c49f252831f5b529666bf9c23e0b39a", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_unique_combination_of_columns_dsr_input_input_act_mvt_depotstoredaysku_day_date__source_db_id__organisation_sku__organisation_location_id_from__organisation_location_id_to__loaded_timestamp__prod"], "unique_id": "test.DSR.source_unique_combination_of_columns_dsr_input_input_act_mvt_depotstoredaysku_day_date__source_db_id__organisation_sku__organisation_location_id_from__organisation_location_id_to__loaded_timestamp__prod.a3b7676652", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_unique_combination_of_c_8c49f252831f5b529666bf9c23e0b39a.sql", "original_file_path": "models/staging/facts/movements/actuals/src_fact_act_mvt.yml", "name": "source_unique_combination_of_columns_dsr_input_input_act_mvt_depotstoredaysku_day_date__source_db_id__organisation_sku__organisation_location_id_from__organisation_location_id_to__loaded_timestamp__prod", "alias": "source_unique_combination_of_c_8c49f252831f5b529666bf9c23e0b39a", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_act_mvt_depotstoredaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/actuals/src_fact_act_mvt.yml/schema_test/source_unique_combination_of_c_8c49f252831f5b529666bf9c23e0b39a.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_unique_combination_of_c_8c49f252831f5b529666bf9c23e0b39a"}, "created_at": 1631703184, "compiled_sql": "\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": null}, "test.DSR.source_not_null_dsr_input_input_act_mvt_depotstoredaysku_day_date__prod.85e761b8bf": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_7a87c10dc37cc47e662cb5278ba88538\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "day_date", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_act_mvt_depotstoredaysku') }} where {{config.get('where')}}) input_act_mvt_depotstoredaysku{% else %}{{ source('dsr_input', 'input_act_mvt_depotstoredaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_act_mvt_depotstoredaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_7a87c10dc37cc47e662cb5278ba88538", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_act_mvt_depotstoredaysku_day_date__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_act_mvt_depotstoredaysku_day_date__prod.85e761b8bf", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_7a87c10dc37cc47e662cb5278ba88538.sql", "original_file_path": "models/staging/facts/movements/actuals/src_fact_act_mvt.yml", "name": "source_not_null_dsr_input_input_act_mvt_depotstoredaysku_day_date__prod", "alias": "source_not_null_dsr_input_inpu_7a87c10dc37cc47e662cb5278ba88538", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_act_mvt_depotstoredaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/actuals/src_fact_act_mvt.yml/schema_test/source_not_null_dsr_input_inpu_7a87c10dc37cc47e662cb5278ba88538.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_7a87c10dc37cc47e662cb5278ba88538"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "day_date"}, "test.DSR.source_not_null_dsr_input_input_act_mvt_depotstoredaysku_organisation_location_id_from__prod.37c0656e44": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_aece1ed3a7c9ff35d4e89907e8c0cf61\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "organisation_location_id_from", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_act_mvt_depotstoredaysku') }} where {{config.get('where')}}) input_act_mvt_depotstoredaysku{% else %}{{ source('dsr_input', 'input_act_mvt_depotstoredaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_act_mvt_depotstoredaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_aece1ed3a7c9ff35d4e89907e8c0cf61", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_act_mvt_depotstoredaysku_organisation_location_id_from__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_act_mvt_depotstoredaysku_organisation_location_id_from__prod.37c0656e44", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_aece1ed3a7c9ff35d4e89907e8c0cf61.sql", "original_file_path": "models/staging/facts/movements/actuals/src_fact_act_mvt.yml", "name": "source_not_null_dsr_input_input_act_mvt_depotstoredaysku_organisation_location_id_from__prod", "alias": "source_not_null_dsr_input_inpu_aece1ed3a7c9ff35d4e89907e8c0cf61", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_act_mvt_depotstoredaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/actuals/src_fact_act_mvt.yml/schema_test/source_not_null_dsr_input_inpu_aece1ed3a7c9ff35d4e89907e8c0cf61.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_aece1ed3a7c9ff35d4e89907e8c0cf61"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "organisation_location_id_from"}, "test.DSR.source_not_null_dsr_input_input_act_mvt_depotstoredaysku_organisation_location_id_to__prod.a8adf607ef": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_a9b7145d655f8311cb115fcae90dfe10\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "organisation_location_id_to", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_act_mvt_depotstoredaysku') }} where {{config.get('where')}}) input_act_mvt_depotstoredaysku{% else %}{{ source('dsr_input', 'input_act_mvt_depotstoredaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_act_mvt_depotstoredaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_a9b7145d655f8311cb115fcae90dfe10", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_act_mvt_depotstoredaysku_organisation_location_id_to__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_act_mvt_depotstoredaysku_organisation_location_id_to__prod.a8adf607ef", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_a9b7145d655f8311cb115fcae90dfe10.sql", "original_file_path": "models/staging/facts/movements/actuals/src_fact_act_mvt.yml", "name": "source_not_null_dsr_input_input_act_mvt_depotstoredaysku_organisation_location_id_to__prod", "alias": "source_not_null_dsr_input_inpu_a9b7145d655f8311cb115fcae90dfe10", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_act_mvt_depotstoredaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/actuals/src_fact_act_mvt.yml/schema_test/source_not_null_dsr_input_inpu_a9b7145d655f8311cb115fcae90dfe10.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_a9b7145d655f8311cb115fcae90dfe10"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "organisation_location_id_to"}, "test.DSR.source_not_null_dsr_input_input_act_mvt_depotstoredaysku_organisation_sku__prod.4df8d8320b": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_24334d727295bf4b7ba7bdfcb2ddb809\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "organisation_sku", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_act_mvt_depotstoredaysku') }} where {{config.get('where')}}) input_act_mvt_depotstoredaysku{% else %}{{ source('dsr_input', 'input_act_mvt_depotstoredaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_act_mvt_depotstoredaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_24334d727295bf4b7ba7bdfcb2ddb809", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_act_mvt_depotstoredaysku_organisation_sku__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_act_mvt_depotstoredaysku_organisation_sku__prod.4df8d8320b", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_24334d727295bf4b7ba7bdfcb2ddb809.sql", "original_file_path": "models/staging/facts/movements/actuals/src_fact_act_mvt.yml", "name": "source_not_null_dsr_input_input_act_mvt_depotstoredaysku_organisation_sku__prod", "alias": "source_not_null_dsr_input_inpu_24334d727295bf4b7ba7bdfcb2ddb809", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_act_mvt_depotstoredaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/actuals/src_fact_act_mvt.yml/schema_test/source_not_null_dsr_input_inpu_24334d727295bf4b7ba7bdfcb2ddb809.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_24334d727295bf4b7ba7bdfcb2ddb809"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "organisation_sku"}, "test.DSR.source_not_null_dsr_input_input_act_mvt_depotstoredaysku_source_db_id__prod.3b595ecc7b": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_cfef6e582f14efee5fe4b7934d22c663\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "source_db_id", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_act_mvt_depotstoredaysku') }} where {{config.get('where')}}) input_act_mvt_depotstoredaysku{% else %}{{ source('dsr_input', 'input_act_mvt_depotstoredaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_act_mvt_depotstoredaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_cfef6e582f14efee5fe4b7934d22c663", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_act_mvt_depotstoredaysku_source_db_id__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_act_mvt_depotstoredaysku_source_db_id__prod.3b595ecc7b", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_cfef6e582f14efee5fe4b7934d22c663.sql", "original_file_path": "models/staging/facts/movements/actuals/src_fact_act_mvt.yml", "name": "source_not_null_dsr_input_input_act_mvt_depotstoredaysku_source_db_id__prod", "alias": "source_not_null_dsr_input_inpu_cfef6e582f14efee5fe4b7934d22c663", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_act_mvt_depotstoredaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/movements/actuals/src_fact_act_mvt.yml/schema_test/source_not_null_dsr_input_inpu_cfef6e582f14efee5fe4b7934d22c663.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_cfef6e582f14efee5fe4b7934d22c663"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "source_db_id"}, "test.DSR.source_unique_combination_of_columns_dsr_input_input_pln_inv_storedaysku_day_date__source_db_id__organisation_sku__ranged__organisation_location_id__loaded_timestamp__prod.b581e49b08": {"raw_sql": "{{ test_unique_combination_of_columns(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_unique_combination_of_c_2efe770653ef2d0c98263c89f94f8d16\") }}", "test_metadata": {"name": "unique_combination_of_columns", "kwargs": {"combination_of_columns": ["day_date", "source_db_id", "organisation_sku", "ranged", "organisation_location_id", "loaded_timestamp"], "env": "prod", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_pln_inv_storedaysku') }} where {{config.get('where')}}) input_pln_inv_storedaysku{% else %}{{ source('dsr_input', 'input_pln_inv_storedaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_unique_combination_of_columns"], "nodes": ["source.DSR.dsr_input.input_pln_inv_storedaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_unique_combination_of_c_2efe770653ef2d0c98263c89f94f8d16", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_unique_combination_of_columns_dsr_input_input_pln_inv_storedaysku_day_date__source_db_id__organisation_sku__ranged__organisation_location_id__loaded_timestamp__prod"], "unique_id": "test.DSR.source_unique_combination_of_columns_dsr_input_input_pln_inv_storedaysku_day_date__source_db_id__organisation_sku__ranged__organisation_location_id__loaded_timestamp__prod.b581e49b08", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_unique_combination_of_c_2efe770653ef2d0c98263c89f94f8d16.sql", "original_file_path": "models/staging/facts/inventory/plans/src_fact_pln_inv.yml", "name": "source_unique_combination_of_columns_dsr_input_input_pln_inv_storedaysku_day_date__source_db_id__organisation_sku__ranged__organisation_location_id__loaded_timestamp__prod", "alias": "source_unique_combination_of_c_2efe770653ef2d0c98263c89f94f8d16", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_pln_inv_storedaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/inventory/plans/src_fact_pln_inv.yml/schema_test/source_unique_combination_of_c_2efe770653ef2d0c98263c89f94f8d16.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_unique_combination_of_c_2efe770653ef2d0c98263c89f94f8d16"}, "created_at": 1631703184, "compiled_sql": "\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": null}, "test.DSR.source_not_null_dsr_input_input_pln_inv_storedaysku_day_date__prod.58e4cb82c5": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_1693e5fe60847db92309da2aa8764cb4\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "day_date", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_pln_inv_storedaysku') }} where {{config.get('where')}}) input_pln_inv_storedaysku{% else %}{{ source('dsr_input', 'input_pln_inv_storedaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_pln_inv_storedaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_1693e5fe60847db92309da2aa8764cb4", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_pln_inv_storedaysku_day_date__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_pln_inv_storedaysku_day_date__prod.58e4cb82c5", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_1693e5fe60847db92309da2aa8764cb4.sql", "original_file_path": "models/staging/facts/inventory/plans/src_fact_pln_inv.yml", "name": "source_not_null_dsr_input_input_pln_inv_storedaysku_day_date__prod", "alias": "source_not_null_dsr_input_inpu_1693e5fe60847db92309da2aa8764cb4", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_pln_inv_storedaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/inventory/plans/src_fact_pln_inv.yml/schema_test/source_not_null_dsr_input_inpu_1693e5fe60847db92309da2aa8764cb4.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_1693e5fe60847db92309da2aa8764cb4"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "day_date"}, "test.DSR.source_not_null_dsr_input_input_pln_inv_storedaysku_organisation_location_id__prod.e1afdc8980": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_984a5af12e16219457e254ece31717b9\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "organisation_location_id", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_pln_inv_storedaysku') }} where {{config.get('where')}}) input_pln_inv_storedaysku{% else %}{{ source('dsr_input', 'input_pln_inv_storedaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_pln_inv_storedaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_984a5af12e16219457e254ece31717b9", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_pln_inv_storedaysku_organisation_location_id__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_pln_inv_storedaysku_organisation_location_id__prod.e1afdc8980", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_984a5af12e16219457e254ece31717b9.sql", "original_file_path": "models/staging/facts/inventory/plans/src_fact_pln_inv.yml", "name": "source_not_null_dsr_input_input_pln_inv_storedaysku_organisation_location_id__prod", "alias": "source_not_null_dsr_input_inpu_984a5af12e16219457e254ece31717b9", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_pln_inv_storedaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/inventory/plans/src_fact_pln_inv.yml/schema_test/source_not_null_dsr_input_inpu_984a5af12e16219457e254ece31717b9.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_984a5af12e16219457e254ece31717b9"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "organisation_location_id"}, "test.DSR.source_not_null_dsr_input_input_pln_inv_storedaysku_organisation_sku__prod.1532465672": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_e735d31f69232235146ac2962f692e16\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "organisation_sku", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_pln_inv_storedaysku') }} where {{config.get('where')}}) input_pln_inv_storedaysku{% else %}{{ source('dsr_input', 'input_pln_inv_storedaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_pln_inv_storedaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_e735d31f69232235146ac2962f692e16", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_pln_inv_storedaysku_organisation_sku__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_pln_inv_storedaysku_organisation_sku__prod.1532465672", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_e735d31f69232235146ac2962f692e16.sql", "original_file_path": "models/staging/facts/inventory/plans/src_fact_pln_inv.yml", "name": "source_not_null_dsr_input_input_pln_inv_storedaysku_organisation_sku__prod", "alias": "source_not_null_dsr_input_inpu_e735d31f69232235146ac2962f692e16", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_pln_inv_storedaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/inventory/plans/src_fact_pln_inv.yml/schema_test/source_not_null_dsr_input_inpu_e735d31f69232235146ac2962f692e16.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_e735d31f69232235146ac2962f692e16"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "organisation_sku"}, "test.DSR.source_not_null_dsr_input_input_pln_inv_storedaysku_ranged__prod.7d2c424a06": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_39dbdda14d216879967c822af3b3dbd4\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "ranged", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_pln_inv_storedaysku') }} where {{config.get('where')}}) input_pln_inv_storedaysku{% else %}{{ source('dsr_input', 'input_pln_inv_storedaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_pln_inv_storedaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_39dbdda14d216879967c822af3b3dbd4", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_pln_inv_storedaysku_ranged__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_pln_inv_storedaysku_ranged__prod.7d2c424a06", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_39dbdda14d216879967c822af3b3dbd4.sql", "original_file_path": "models/staging/facts/inventory/plans/src_fact_pln_inv.yml", "name": "source_not_null_dsr_input_input_pln_inv_storedaysku_ranged__prod", "alias": "source_not_null_dsr_input_inpu_39dbdda14d216879967c822af3b3dbd4", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_pln_inv_storedaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/inventory/plans/src_fact_pln_inv.yml/schema_test/source_not_null_dsr_input_inpu_39dbdda14d216879967c822af3b3dbd4.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_39dbdda14d216879967c822af3b3dbd4"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "ranged"}, "test.DSR.source_not_null_dsr_input_input_pln_inv_storedaysku_source_db_id__prod.c8794953fe": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_74a7b8d63a52ebbb23b9d52cd74d8822\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "source_db_id", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_pln_inv_storedaysku') }} where {{config.get('where')}}) input_pln_inv_storedaysku{% else %}{{ source('dsr_input', 'input_pln_inv_storedaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_pln_inv_storedaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_74a7b8d63a52ebbb23b9d52cd74d8822", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_pln_inv_storedaysku_source_db_id__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_pln_inv_storedaysku_source_db_id__prod.c8794953fe", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_74a7b8d63a52ebbb23b9d52cd74d8822.sql", "original_file_path": "models/staging/facts/inventory/plans/src_fact_pln_inv.yml", "name": "source_not_null_dsr_input_input_pln_inv_storedaysku_source_db_id__prod", "alias": "source_not_null_dsr_input_inpu_74a7b8d63a52ebbb23b9d52cd74d8822", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_pln_inv_storedaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/inventory/plans/src_fact_pln_inv.yml/schema_test/source_not_null_dsr_input_inpu_74a7b8d63a52ebbb23b9d52cd74d8822.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_74a7b8d63a52ebbb23b9d52cd74d8822"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "source_db_id"}, "test.DSR.source_unique_combination_of_columns_dsr_input_input_act_inv_locationdaysku_day_date__source_db_id__organisation_sku__stock_units__location_function__organisation_location_id__loaded_timestamp__prod.5577c95d06": {"raw_sql": "{{ test_unique_combination_of_columns(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_unique_combination_of_c_ccd1c29c331dd1118df9bf0c3d9cbfb9\") }}", "test_metadata": {"name": "unique_combination_of_columns", "kwargs": {"combination_of_columns": ["day_date", "source_db_id", "organisation_sku", "stock_units", "location_function", "organisation_location_id", "loaded_timestamp"], "env": "prod", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_act_inv_locationdaysku') }} where {{config.get('where')}}) input_act_inv_locationdaysku{% else %}{{ source('dsr_input', 'input_act_inv_locationdaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_unique_combination_of_columns"], "nodes": ["source.DSR.dsr_input.input_act_inv_locationdaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_unique_combination_of_c_ccd1c29c331dd1118df9bf0c3d9cbfb9", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_unique_combination_of_columns_dsr_input_input_act_inv_locationdaysku_day_date__source_db_id__organisation_sku__stock_units__location_function__organisation_location_id__loaded_timestamp__prod"], "unique_id": "test.DSR.source_unique_combination_of_columns_dsr_input_input_act_inv_locationdaysku_day_date__source_db_id__organisation_sku__stock_units__location_function__organisation_location_id__loaded_timestamp__prod.5577c95d06", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_unique_combination_of_c_ccd1c29c331dd1118df9bf0c3d9cbfb9.sql", "original_file_path": "models/staging/facts/inventory/actuals/src_fact_act_inv.yml", "name": "source_unique_combination_of_columns_dsr_input_input_act_inv_locationdaysku_day_date__source_db_id__organisation_sku__stock_units__location_function__organisation_location_id__loaded_timestamp__prod", "alias": "source_unique_combination_of_c_ccd1c29c331dd1118df9bf0c3d9cbfb9", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_act_inv_locationdaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/inventory/actuals/src_fact_act_inv.yml/schema_test/source_unique_combination_of_c_ccd1c29c331dd1118df9bf0c3d9cbfb9.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_unique_combination_of_c_ccd1c29c331dd1118df9bf0c3d9cbfb9"}, "created_at": 1631703184, "compiled_sql": "\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": null}, "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaysku_day_date__prod.8e602c2390": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_4def7817f3a1614b4527b40026c87a76\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "day_date", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_act_inv_locationdaysku') }} where {{config.get('where')}}) input_act_inv_locationdaysku{% else %}{{ source('dsr_input', 'input_act_inv_locationdaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_act_inv_locationdaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_4def7817f3a1614b4527b40026c87a76", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_act_inv_locationdaysku_day_date__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaysku_day_date__prod.8e602c2390", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_4def7817f3a1614b4527b40026c87a76.sql", "original_file_path": "models/staging/facts/inventory/actuals/src_fact_act_inv.yml", "name": "source_not_null_dsr_input_input_act_inv_locationdaysku_day_date__prod", "alias": "source_not_null_dsr_input_inpu_4def7817f3a1614b4527b40026c87a76", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_act_inv_locationdaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/inventory/actuals/src_fact_act_inv.yml/schema_test/source_not_null_dsr_input_inpu_4def7817f3a1614b4527b40026c87a76.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_4def7817f3a1614b4527b40026c87a76"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "day_date"}, "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaysku_location_function__prod.32ab7100b7": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_c644866329bd607fdfc60055a08d9c8b\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "location_function", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_act_inv_locationdaysku') }} where {{config.get('where')}}) input_act_inv_locationdaysku{% else %}{{ source('dsr_input', 'input_act_inv_locationdaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_act_inv_locationdaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_c644866329bd607fdfc60055a08d9c8b", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_act_inv_locationdaysku_location_function__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaysku_location_function__prod.32ab7100b7", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_c644866329bd607fdfc60055a08d9c8b.sql", "original_file_path": "models/staging/facts/inventory/actuals/src_fact_act_inv.yml", "name": "source_not_null_dsr_input_input_act_inv_locationdaysku_location_function__prod", "alias": "source_not_null_dsr_input_inpu_c644866329bd607fdfc60055a08d9c8b", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_act_inv_locationdaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/inventory/actuals/src_fact_act_inv.yml/schema_test/source_not_null_dsr_input_inpu_c644866329bd607fdfc60055a08d9c8b.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_c644866329bd607fdfc60055a08d9c8b"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "location_function"}, "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaysku_organisation_location_id__prod.c8aadcdef7": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_52824894a3f55d5b608fdb64ad0fc1b7\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "organisation_location_id", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_act_inv_locationdaysku') }} where {{config.get('where')}}) input_act_inv_locationdaysku{% else %}{{ source('dsr_input', 'input_act_inv_locationdaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_act_inv_locationdaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_52824894a3f55d5b608fdb64ad0fc1b7", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_act_inv_locationdaysku_organisation_location_id__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaysku_organisation_location_id__prod.c8aadcdef7", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_52824894a3f55d5b608fdb64ad0fc1b7.sql", "original_file_path": "models/staging/facts/inventory/actuals/src_fact_act_inv.yml", "name": "source_not_null_dsr_input_input_act_inv_locationdaysku_organisation_location_id__prod", "alias": "source_not_null_dsr_input_inpu_52824894a3f55d5b608fdb64ad0fc1b7", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_act_inv_locationdaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/inventory/actuals/src_fact_act_inv.yml/schema_test/source_not_null_dsr_input_inpu_52824894a3f55d5b608fdb64ad0fc1b7.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_52824894a3f55d5b608fdb64ad0fc1b7"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "organisation_location_id"}, "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaysku_organisation_sku__prod.4ee0cc2d6c": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_3d6efaf29f8d177c9350a26e8076071d\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "organisation_sku", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_act_inv_locationdaysku') }} where {{config.get('where')}}) input_act_inv_locationdaysku{% else %}{{ source('dsr_input', 'input_act_inv_locationdaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_act_inv_locationdaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_3d6efaf29f8d177c9350a26e8076071d", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_act_inv_locationdaysku_organisation_sku__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaysku_organisation_sku__prod.4ee0cc2d6c", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_3d6efaf29f8d177c9350a26e8076071d.sql", "original_file_path": "models/staging/facts/inventory/actuals/src_fact_act_inv.yml", "name": "source_not_null_dsr_input_input_act_inv_locationdaysku_organisation_sku__prod", "alias": "source_not_null_dsr_input_inpu_3d6efaf29f8d177c9350a26e8076071d", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_act_inv_locationdaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/inventory/actuals/src_fact_act_inv.yml/schema_test/source_not_null_dsr_input_inpu_3d6efaf29f8d177c9350a26e8076071d.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_3d6efaf29f8d177c9350a26e8076071d"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "organisation_sku"}, "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaysku_source_db_id__prod.b867ccf4fd": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_2c9dd0d59cc888510b516b7fcc542e9e\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "source_db_id", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_act_inv_locationdaysku') }} where {{config.get('where')}}) input_act_inv_locationdaysku{% else %}{{ source('dsr_input', 'input_act_inv_locationdaysku') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_act_inv_locationdaysku"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_2c9dd0d59cc888510b516b7fcc542e9e", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_act_inv_locationdaysku_source_db_id__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaysku_source_db_id__prod.b867ccf4fd", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_2c9dd0d59cc888510b516b7fcc542e9e.sql", "original_file_path": "models/staging/facts/inventory/actuals/src_fact_act_inv.yml", "name": "source_not_null_dsr_input_input_act_inv_locationdaysku_source_db_id__prod", "alias": "source_not_null_dsr_input_inpu_2c9dd0d59cc888510b516b7fcc542e9e", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_act_inv_locationdaysku"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/inventory/actuals/src_fact_act_inv.yml/schema_test/source_not_null_dsr_input_inpu_2c9dd0d59cc888510b516b7fcc542e9e.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_2c9dd0d59cc888510b516b7fcc542e9e"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "source_db_id"}, "test.DSR.source_unique_combination_of_columns_dsr_input_input_act_inv_locationdaycase_day_date__source_db_id__organisation_case__stock_units__location_function__organisation_location_id__loaded_timestamp__prod.1d7645aa0b": {"raw_sql": "{{ test_unique_combination_of_columns(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_unique_combination_of_c_b6ecbc4a78e8f3eecbed0a7aadb39127\") }}", "test_metadata": {"name": "unique_combination_of_columns", "kwargs": {"combination_of_columns": ["day_date", "source_db_id", "organisation_case", "stock_units", "location_function", "organisation_location_id", "loaded_timestamp"], "env": "prod", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_act_inv_locationdaycase') }} where {{config.get('where')}}) input_act_inv_locationdaycase{% else %}{{ source('dsr_input', 'input_act_inv_locationdaycase') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_unique_combination_of_columns"], "nodes": ["source.DSR.dsr_input.input_act_inv_locationdaycase"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_unique_combination_of_c_b6ecbc4a78e8f3eecbed0a7aadb39127", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_unique_combination_of_columns_dsr_input_input_act_inv_locationdaycase_day_date__source_db_id__organisation_case__stock_units__location_function__organisation_location_id__loaded_timestamp__prod"], "unique_id": "test.DSR.source_unique_combination_of_columns_dsr_input_input_act_inv_locationdaycase_day_date__source_db_id__organisation_case__stock_units__location_function__organisation_location_id__loaded_timestamp__prod.1d7645aa0b", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_unique_combination_of_c_b6ecbc4a78e8f3eecbed0a7aadb39127.sql", "original_file_path": "models/staging/facts/inventory/actuals/src_fact_act_inv.yml", "name": "source_unique_combination_of_columns_dsr_input_input_act_inv_locationdaycase_day_date__source_db_id__organisation_case__stock_units__location_function__organisation_location_id__loaded_timestamp__prod", "alias": "source_unique_combination_of_c_b6ecbc4a78e8f3eecbed0a7aadb39127", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_act_inv_locationdaycase"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/inventory/actuals/src_fact_act_inv.yml/schema_test/source_unique_combination_of_c_b6ecbc4a78e8f3eecbed0a7aadb39127.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_unique_combination_of_c_b6ecbc4a78e8f3eecbed0a7aadb39127"}, "created_at": 1631703184, "compiled_sql": "\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": null}, "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaycase_day_date__prod.9c300e2a03": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_65833b449134f8a754f6181a1726ea6a\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "day_date", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_act_inv_locationdaycase') }} where {{config.get('where')}}) input_act_inv_locationdaycase{% else %}{{ source('dsr_input', 'input_act_inv_locationdaycase') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_act_inv_locationdaycase"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_65833b449134f8a754f6181a1726ea6a", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_act_inv_locationdaycase_day_date__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaycase_day_date__prod.9c300e2a03", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_65833b449134f8a754f6181a1726ea6a.sql", "original_file_path": "models/staging/facts/inventory/actuals/src_fact_act_inv.yml", "name": "source_not_null_dsr_input_input_act_inv_locationdaycase_day_date__prod", "alias": "source_not_null_dsr_input_inpu_65833b449134f8a754f6181a1726ea6a", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_act_inv_locationdaycase"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/inventory/actuals/src_fact_act_inv.yml/schema_test/source_not_null_dsr_input_inpu_65833b449134f8a754f6181a1726ea6a.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_65833b449134f8a754f6181a1726ea6a"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "day_date"}, "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaycase_location_function__prod.e88646e3f0": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_d438aeb6813c4436d8325ed9790f8521\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "location_function", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_act_inv_locationdaycase') }} where {{config.get('where')}}) input_act_inv_locationdaycase{% else %}{{ source('dsr_input', 'input_act_inv_locationdaycase') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_act_inv_locationdaycase"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_d438aeb6813c4436d8325ed9790f8521", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_act_inv_locationdaycase_location_function__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaycase_location_function__prod.e88646e3f0", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_d438aeb6813c4436d8325ed9790f8521.sql", "original_file_path": "models/staging/facts/inventory/actuals/src_fact_act_inv.yml", "name": "source_not_null_dsr_input_input_act_inv_locationdaycase_location_function__prod", "alias": "source_not_null_dsr_input_inpu_d438aeb6813c4436d8325ed9790f8521", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_act_inv_locationdaycase"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/inventory/actuals/src_fact_act_inv.yml/schema_test/source_not_null_dsr_input_inpu_d438aeb6813c4436d8325ed9790f8521.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_d438aeb6813c4436d8325ed9790f8521"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "location_function"}, "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaycase_organisation_case__prod.2f60dfc49c": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_8e5876e1d97e95e5ced23c4583aabbd5\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "organisation_case", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_act_inv_locationdaycase') }} where {{config.get('where')}}) input_act_inv_locationdaycase{% else %}{{ source('dsr_input', 'input_act_inv_locationdaycase') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_act_inv_locationdaycase"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_8e5876e1d97e95e5ced23c4583aabbd5", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_act_inv_locationdaycase_organisation_case__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaycase_organisation_case__prod.2f60dfc49c", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_8e5876e1d97e95e5ced23c4583aabbd5.sql", "original_file_path": "models/staging/facts/inventory/actuals/src_fact_act_inv.yml", "name": "source_not_null_dsr_input_input_act_inv_locationdaycase_organisation_case__prod", "alias": "source_not_null_dsr_input_inpu_8e5876e1d97e95e5ced23c4583aabbd5", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_act_inv_locationdaycase"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/inventory/actuals/src_fact_act_inv.yml/schema_test/source_not_null_dsr_input_inpu_8e5876e1d97e95e5ced23c4583aabbd5.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_8e5876e1d97e95e5ced23c4583aabbd5"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "organisation_case"}, "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaycase_organisation_location_id__prod.1a84575dfd": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_d9be32d80f25591dae41baa5ccf0ed86\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "organisation_location_id", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_act_inv_locationdaycase') }} where {{config.get('where')}}) input_act_inv_locationdaycase{% else %}{{ source('dsr_input', 'input_act_inv_locationdaycase') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_act_inv_locationdaycase"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_d9be32d80f25591dae41baa5ccf0ed86", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_act_inv_locationdaycase_organisation_location_id__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaycase_organisation_location_id__prod.1a84575dfd", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_d9be32d80f25591dae41baa5ccf0ed86.sql", "original_file_path": "models/staging/facts/inventory/actuals/src_fact_act_inv.yml", "name": "source_not_null_dsr_input_input_act_inv_locationdaycase_organisation_location_id__prod", "alias": "source_not_null_dsr_input_inpu_d9be32d80f25591dae41baa5ccf0ed86", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_act_inv_locationdaycase"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/inventory/actuals/src_fact_act_inv.yml/schema_test/source_not_null_dsr_input_inpu_d9be32d80f25591dae41baa5ccf0ed86.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_d9be32d80f25591dae41baa5ccf0ed86"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "organisation_location_id"}, "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaycase_source_db_id__prod.99da0db65a": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_2617dec3384678215df9a850cbae45a7\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "source_db_id", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_act_inv_locationdaycase') }} where {{config.get('where')}}) input_act_inv_locationdaycase{% else %}{{ source('dsr_input', 'input_act_inv_locationdaycase') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_act_inv_locationdaycase"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_2617dec3384678215df9a850cbae45a7", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_act_inv_locationdaycase_source_db_id__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaycase_source_db_id__prod.99da0db65a", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_2617dec3384678215df9a850cbae45a7.sql", "original_file_path": "models/staging/facts/inventory/actuals/src_fact_act_inv.yml", "name": "source_not_null_dsr_input_input_act_inv_locationdaycase_source_db_id__prod", "alias": "source_not_null_dsr_input_inpu_2617dec3384678215df9a850cbae45a7", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_act_inv_locationdaycase"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/inventory/actuals/src_fact_act_inv.yml/schema_test/source_not_null_dsr_input_inpu_2617dec3384678215df9a850cbae45a7.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_2617dec3384678215df9a850cbae45a7"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "source_db_id"}, "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaycase_stock_units__prod.93ff225059": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_not_null_dsr_input_inpu_1ff8a4df99ce5df53884e89a629bb794\") }}", "test_metadata": {"name": "not_null", "kwargs": {"env": "prod", "column_name": "stock_units", "model": "{% if config.get('where') %}(select * from {{ source('dsr_input', 'input_act_inv_locationdaycase') }} where {{config.get('where')}}) input_act_inv_locationdaycase{% else %}{{ source('dsr_input', 'input_act_inv_locationdaycase') }}{% endif %}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.DSR.test_not_null"], "nodes": ["source.DSR.dsr_input.input_act_inv_locationdaycase"]}, "config": {"enabled": true, "materialized": "test", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": "source_not_null_dsr_input_inpu_1ff8a4df99ce5df53884e89a629bb794", "schema": "dbt_test__audit", "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0", "post-hook": [], "pre-hook": []}, "database": "AA_DSR_ANALYTICS", "schema": "DBT_DSR_STAGING_dbt_test__audit", "fqn": ["DSR", "schema_test", "source_not_null_dsr_input_input_act_inv_locationdaycase_stock_units__prod"], "unique_id": "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaycase_stock_units__prod.93ff225059", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "schema_test/source_not_null_dsr_input_inpu_1ff8a4df99ce5df53884e89a629bb794.sql", "original_file_path": "models/staging/facts/inventory/actuals/src_fact_act_inv.yml", "name": "source_not_null_dsr_input_input_act_inv_locationdaycase_stock_units__prod", "alias": "source_not_null_dsr_input_inpu_1ff8a4df99ce5df53884e89a629bb794", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["dsr_input", "input_act_inv_locationdaycase"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/DSR/models/staging/facts/inventory/actuals/src_fact_act_inv.yml/schema_test/source_not_null_dsr_input_inpu_1ff8a4df99ce5df53884e89a629bb794.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_not_null_dsr_input_inpu_1ff8a4df99ce5df53884e89a629bb794"}, "created_at": 1631703184, "compiled_sql": "\n\n  \n\n  select 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "stock_units"}}, "sources": {"source.DSR.dsr_input.input_promotion": {"fqn": ["DSR", "staging", "dimensions", "promotion", "dsr_input", "input_promotion"], "database": "AA_DSR_RAW", "schema": "dsr_input", "unique_id": "source.DSR.dsr_input.input_promotion", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "models/staging/dimensions/promotion/src_dim_promotion.yml", "original_file_path": "models/staging/dimensions/promotion/src_dim_promotion.yml", "name": "input_promotion", "source_name": "dsr_input", "source_description": "Standard input tables for all inbound DSR data.", "loader": "", "identifier": "input_promotion", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "**Description**\n\nContains distinct promotion defined for an organisation. A promotion is defined as an organisationally defined promotion with a promotion number , start and end date. Promotions are scoped to the creator organisation for a subject organisation.\n\n\n**Grain**\nOne record per promotion per subject organisation per sku.\n\n**Purpose**\nUsed to distinctly identify and store promotion details for an organisation. It details all the attributes for promotion like start date, end date, promotion number and sku.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain", "columns": {"attributes": {"name": "attributes", "description": "Extra attributes\\values that defines the product\\locations\\promotion.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "Timestamp when the records was entered into the input table and feeded to DSR.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "creator_business_organisation_number": {"name": "creator_business_organisation_number", "description": "Organisation number for the organisation who created this entry. This would be morrisons in case when Morrison will create this entry", "meta": {}, "data_type": null, "quote": null, "tags": []}, "creator_origin_organisation_number": {"name": "creator_origin_organisation_number", "description": "Origin organisation number of the row entry creator. It represent who created this organisation. It will be NULL as atheon does not have an origin Organisation number for the organisation who created this entry.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "end_date": {"name": "end_date", "description": "Promotion end date.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "loaded_timestamp": {"name": "loaded_timestamp", "description": "Timestamp when the data was loaded into the input tables to DSR.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "organisation_sku": {"name": "organisation_sku", "description": "SKU(Stock keeping unit) specified by the retailer for a product.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "promotion_number": {"name": "promotion_number", "description": "Promotion number as assigned by the retailer.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "start_date": {"name": "start_date", "description": "Date when the promotion was started.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "subject_business_organisation_number": {"name": "subject_business_organisation_number", "description": "Business organisation number of the subject organization. It represent the organisation for which this entry is created. Eg It will be morrisons which is morrisons organisation number", "meta": {}, "data_type": null, "quote": null, "tags": []}, "subject_origin_organisation_number": {"name": "subject_origin_organisation_number", "description": "Origin organisation number of the subject organization.It represent who created this subject organisation. It can be 1 as Morrisons organization is created by athoen", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "AA_DSR_RAW.dsr_input.input_promotion", "created_at": 1631703183}, "source.DSR.dsr_input.input_date": {"fqn": ["DSR", "staging", "dimensions", "calendar", "dsr_input", "input_date"], "database": "AA_DSR_RAW", "schema": "dsr_input", "unique_id": "source.DSR.dsr_input.input_date", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "models/staging/dimensions/calendar/src_dim_calendar.yml", "original_file_path": "models/staging/dimensions/calendar/src_dim_calendar.yml", "name": "input_date", "source_name": "dsr_input", "source_description": "Standard  input tables for all inbound DSR data.", "loader": "", "identifier": "input_date", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "**Description**\nContains distinct list of all days with standardised attributes such as month, month_name, date_of_week etc. \n\n**Grain**\nOne record per day_date in YYYY-MM-DD format.\n\n**Purpose**\nThe Day_date describes the days that facts occur on\n\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain", "columns": {"created_timestamp": {"name": "created_timestamp", "description": "Timestamp when the records was entered into the input table and feeded to DSR.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "day_date": {"name": "day_date", "description": "Unique full date of the day in YYYY-MM-DD format.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "day_of_month": {"name": "day_of_month", "description": "Current day of the month. Starting from 1st of every month.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "day_of_week": {"name": "day_of_week", "description": "Current day of the week. Starting from start of every week.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "day_of_year": {"name": "day_of_year", "description": "Current day of the year. Starting from 1st January.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "loaded_timestamp": {"name": "loaded_timestamp", "description": "Timestamp when the data was loaded into the input tables to DSR.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "month": {"name": "month", "description": "Specific calendar Month in numeric representation", "meta": {}, "data_type": null, "quote": null, "tags": []}, "month_name": {"name": "month_name", "description": "Specific calendar Month in 3 initial letters", "meta": {}, "data_type": null, "quote": null, "tags": []}, "week_of_year": {"name": "week_of_year", "description": "Current week of the year. Starting from 1st week of January.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "year": {"name": "year", "description": "Year in YYYY format.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "AA_DSR_RAW.dsr_input.input_date", "created_at": 1631703183}, "source.DSR.dsr_input.input_calendar": {"fqn": ["DSR", "staging", "dimensions", "calendar", "dsr_input", "input_calendar"], "database": "AA_DSR_RAW", "schema": "dsr_input", "unique_id": "source.DSR.dsr_input.input_calendar", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "models/staging/dimensions/calendar/src_dim_calendar.yml", "original_file_path": "models/staging/dimensions/calendar/src_dim_calendar.yml", "name": "input_calendar", "source_name": "dsr_input", "source_description": "Standard  input tables for all inbound DSR data.", "loader": "", "identifier": "input_calendar", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "**Description**\nContains distinct list of days which is defined for specific organisation\n\n**Grain**\nOne records per day_date in YYYY-MM-DD format.\n\n**Purpose**\nThe Day_date describes the days that facts occur on.\n\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain", "columns": {"business_organisation_number": {"name": "business_organisation_number", "description": "Business organisation number", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "Timestamp when the records was entered into the input table and feeded to DSR.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "day_date": {"name": "day_date", "description": "Unique full date of the day in YYYY-MM-DD format.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "loaded_timestamp": {"name": "loaded_timestamp", "description": "Timestamp when the data was loaded into the input tables to DSR.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "origin_organisation_number": {"name": "origin_organisation_number", "description": "Number of the organisation which created the subject organisation", "meta": {}, "data_type": null, "quote": null, "tags": []}, "week_id": {"name": "week_id", "description": "Current week of the year. Starting from 1st week of January.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "year_id": {"name": "year_id", "description": "Year in YYYY format.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "AA_DSR_RAW.dsr_input.input_calendar", "created_at": 1631703183}, "source.DSR.dsr_input.input_location": {"fqn": ["DSR", "staging", "dimensions", "location", "dsr_input", "input_location"], "database": "AA_DSR_RAW", "schema": "dsr_input", "unique_id": "source.DSR.dsr_input.input_location", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "models/staging/dimensions/location/src_dim_location.yml", "original_file_path": "models/staging/dimensions/location/src_dim_location.yml", "name": "input_location", "source_name": "dsr_input", "source_description": "Standard input tables for all inbound DSR data.", "loader": "", "identifier": "input_location", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "**Description**\n\nContains details such as longitude, latitudes etc for all physical entities (depot, store, etc) .\n\n**Grain**\nOne record per physical location describing its immutable attributes as stated by the organisation\n\n**Purpose**\nTo store attributes of the location in one place and have a large number of attributes assigned to them. We add organisation to allow multiple \"opinions\" to be accepted (and grouped later)\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain", "columns": {"attributes": {"name": "attributes", "description": "Extra attributes\\values that defines the product\\locations\\promotion.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "business_organisation_number": {"name": "business_organisation_number", "description": "Business organisation number", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "Timestamp when the records was entered into the input table and feeded to DSR.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "geographic_location": {"name": "geographic_location", "description": "Geographic coordinates of the location. It comprises of longitutde and latitude.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "loaded_timestamp": {"name": "loaded_timestamp", "description": "Timestamp when the data was loaded into the input tables to DSR.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "location_function": {"name": "location_function", "description": "Defines whether the location is a Depot or a store. It is represented by point of sale and distribution location", "meta": {}, "data_type": null, "quote": null, "tags": []}, "organisation_location_id": {"name": "organisation_location_id", "description": "An unique ID for every location of a organisation. It generated using origin and business org number along with location number.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "origin_organisation_number": {"name": "origin_organisation_number", "description": "Number of the organisation which created the subject organisation", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "AA_DSR_RAW.dsr_input.input_location", "created_at": 1631703183}, "source.DSR.dsr_input.input_location_group": {"fqn": ["DSR", "staging", "dimensions", "location", "dsr_input", "input_location_group"], "database": "AA_DSR_RAW", "schema": "dsr_input", "unique_id": "source.DSR.dsr_input.input_location_group", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "models/staging/dimensions/location/src_dim_location.yml", "original_file_path": "models/staging/dimensions/location/src_dim_location.yml", "name": "input_location_group", "source_name": "dsr_input", "source_description": "Standard input tables for all inbound DSR data.", "loader": "", "identifier": "input_location_group", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "**Description**\nContains groups of location defined on certain attributes and with a group name along with value\n\n**Grain**\nOne record per location group id for creator organisation, subject organisation, location function and group name\n\n**Purpose**\nGroups can be defined for locations which can share similar attributes.\nCreator such as atheon can create its own group with a unique group name and assign a group value to all group locations\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain", "columns": {"attributes": {"name": "attributes", "description": "Extra attributes\\values that defines the product\\locations\\promotion.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "Timestamp when the records was entered into the input table and feeded to DSR.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "creator_business_organisation_number": {"name": "creator_business_organisation_number", "description": "Organisation number for the organisation who created this entry. This would be morrisons in case when Morrison will create this entry", "meta": {}, "data_type": null, "quote": null, "tags": []}, "creator_origin_organisation_number": {"name": "creator_origin_organisation_number", "description": "Origin organisation number of the row entry creator. It represent who created this organisation. It will be NULL as atheon does not have an origin Organisation number for the organisation who created this entry.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "group_name": {"name": "group_name", "description": "Name of the group. Eg. It can be NUTS1", "meta": {}, "data_type": null, "quote": null, "tags": []}, "group_value": {"name": "group_value", "description": "Actual group value which defines the group for the respective entry. Eg. It can be London etc.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "loaded_timestamp": {"name": "loaded_timestamp", "description": "Timestamp when the data was loaded into the input tables to DSR.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "location_function": {"name": "location_function", "description": "Defines whether the location is a Depot or a store. It is represented by point of sale and distribution location", "meta": {}, "data_type": null, "quote": null, "tags": []}, "location_group_name": {"name": "location_group_name", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "organisation_location_id": {"name": "organisation_location_id", "description": "An unique ID for every location of a organisation. It generated using origin and business org number along with location number.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "subject_business_organisation_number": {"name": "subject_business_organisation_number", "description": "Business organisation number of the subject organization. It represent the organisation for which this entry is created. Eg It will be morrisons which is morrisons organisation number", "meta": {}, "data_type": null, "quote": null, "tags": []}, "subject_origin_organisation_number": {"name": "subject_origin_organisation_number", "description": "Origin organisation number of the subject organization.It represent who created this subject organisation. It can be 1 as Morrisons organization is created by athoen", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "AA_DSR_RAW.dsr_input.input_location_group", "created_at": 1631703183}, "source.DSR.dsr_input.input_location_parentage": {"fqn": ["DSR", "staging", "dimensions", "location", "dsr_input", "input_location_parentage"], "database": "AA_DSR_RAW", "schema": "dsr_input", "unique_id": "source.DSR.dsr_input.input_location_parentage", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "models/staging/dimensions/location/src_dim_location.yml", "original_file_path": "models/staging/dimensions/location/src_dim_location.yml", "name": "input_location_parentage", "source_name": "dsr_input", "source_description": "Standard input tables for all inbound DSR data.", "loader": "", "identifier": "input_location_parentage", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "**Description**\nContains parentage for locations. It defines parents location for a subject organisation created by the creator organisation.\n\n**Grain**\nOne record defines parent location for a subject location.\n\n**Purpose**\nUsed to define parentage for physical location. The parentage can be defined by creator organisation for a subject organisation which will allow multiple parentage for same location and priority can be given on the basis of creator org ID while retrieving the information\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain", "columns": {"created_timestamp": {"name": "created_timestamp", "description": "Timestamp when the records was entered into the input table and feeded to DSR.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "creator_business_organisation_number": {"name": "creator_business_organisation_number", "description": "Organisation number for the organisation who created this entry. This would be morrisons in case when Morrison will create this entry", "meta": {}, "data_type": null, "quote": null, "tags": []}, "creator_origin_organisation_number": {"name": "creator_origin_organisation_number", "description": "Origin organisation number of the row entry creator. It represent who created this organisation. It will be NULL as atheon does not have an origin Organisation number for the organisation who created this entry.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "loaded_timestamp": {"name": "loaded_timestamp", "description": "Timestamp when the data was loaded into the input tables to DSR.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "parent_business_organisation_number": {"name": "parent_business_organisation_number", "description": "Number of the organisation which created the child organisation.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "parent_location_function": {"name": "parent_location_function", "description": "It specifies the whether the parent location is a point of sale or distribution center. It is used to generate parent location ID.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "parent_organisation_location_id": {"name": "parent_organisation_location_id", "description": "Location ID of the parent organisation.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "parent_origin_organisation_number": {"name": "parent_origin_organisation_number", "description": "Number of the organisation who created the parent organisation.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "subject_business_organisation_number": {"name": "subject_business_organisation_number", "description": "Business organisation number of the subject organization. It represent the organisation for which this entry is created. Eg It will be morrisons which is morrisons organisation number", "meta": {}, "data_type": null, "quote": null, "tags": []}, "subject_location_function": {"name": "subject_location_function", "description": "Identifies whether the location for which the entry is created is point of sale or distribution center.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "subject_organisation_location_id": {"name": "subject_organisation_location_id", "description": "Location ID for the organisation for which this row is created.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "subject_origin_organisation_number": {"name": "subject_origin_organisation_number", "description": "Origin organisation number of the subject organization.It represent who created this subject organisation. It can be 1 as Morrisons organization is created by athoen", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "AA_DSR_RAW.dsr_input.input_location_parentage", "created_at": 1631703183}, "source.DSR.dsr_input.input_case": {"fqn": ["DSR", "staging", "dimensions", "logistic_item", "dsr_input", "input_case"], "database": "AA_DSR_RAW", "schema": "dsr_input", "unique_id": "source.DSR.dsr_input.input_case", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "models/staging/dimensions/logistic_item/src_dim_logistic_item.yml", "original_file_path": "models/staging/dimensions/logistic_item/src_dim_logistic_item.yml", "name": "input_case", "source_name": "dsr_input", "source_description": "Standard input tables for all inbound DSR data.", "loader": "", "identifier": "input_case", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "**Description**\nContains distinct cases. It contains organisationally defined casewhich is scoped to the creator organisation.\n\n**Grain**\nOne record per case along with the creator organization ID.\n\n**Purpose**\nUsed to distinctly identify and store cases with respect to creator organisation\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain", "columns": {"business_organisation_number": {"name": "business_organisation_number", "description": "Business organisation number", "meta": {}, "data_type": null, "quote": null, "tags": []}, "case_size": {"name": "case_size", "description": "Size of the case.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "Timestamp when the records was entered into the input table and feeded to DSR.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "gtin": {"name": "gtin", "description": "A Global Trade Item Number (GTIN) is a unique and internationally recognised identifier for a product.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "loaded_timestamp": {"name": "loaded_timestamp", "description": "Timestamp when the data was loaded into the input tables to DSR.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "organisation_case": {"name": "organisation_case", "description": "Case number received from the input feeder to dsr.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "organisation_sku": {"name": "organisation_sku", "description": "SKU(Stock keeping unit) specified by the retailer for a product.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "origin_organisation_number": {"name": "origin_organisation_number", "description": "Number of the organisation which created the subject organisation", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "AA_DSR_RAW.dsr_input.input_case", "created_at": 1631703183}, "source.DSR.dsr_input.input_case_grouping": {"fqn": ["DSR", "staging", "dimensions", "logistic_item", "dsr_input", "input_case_grouping"], "database": "AA_DSR_RAW", "schema": "dsr_input", "unique_id": "source.DSR.dsr_input.input_case_grouping", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "models/staging/dimensions/logistic_item/src_dim_logistic_item.yml", "original_file_path": "models/staging/dimensions/logistic_item/src_dim_logistic_item.yml", "name": "input_case_grouping", "source_name": "dsr_input", "source_description": "Standard input tables for all inbound DSR data.", "loader": "", "identifier": "input_case_grouping", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "**Description**\n\n\n**Grain**\n\n\n**Purpose**\n\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain", "columns": {"created_timestamp": {"name": "created_timestamp", "description": "Timestamp when the records was entered into the input table and feeded to DSR.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "creator_business_organisation_number": {"name": "creator_business_organisation_number", "description": "Organisation number for the organisation who created this entry. This would be morrisons in case when Morrison will create this entry", "meta": {}, "data_type": null, "quote": null, "tags": []}, "creator_origin_organisation_number": {"name": "creator_origin_organisation_number", "description": "Origin organisation number of the row entry creator. It represent who created this organisation. It will be NULL as atheon does not have an origin Organisation number for the organisation who created this entry.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "grouping_key": {"name": "grouping_key", "description": "An unique id which define similar cases together.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "loaded_timestamp": {"name": "loaded_timestamp", "description": "Timestamp when the data was loaded into the input tables to DSR.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "organisation_case": {"name": "organisation_case", "description": "Case number received from the input feeder to dsr.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "subject_business_organisation_number": {"name": "subject_business_organisation_number", "description": "Business organisation number of the subject organization. It represent the organisation for which this entry is created. Eg It will be morrisons which is morrisons organisation number", "meta": {}, "data_type": null, "quote": null, "tags": []}, "subject_origin_organisation_number": {"name": "subject_origin_organisation_number", "description": "Origin organisation number of the subject organization.It represent who created this subject organisation. It can be 1 as Morrisons organization is created by athoen", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "AA_DSR_RAW.dsr_input.input_case_grouping", "created_at": 1631703183}, "source.DSR.dsr_input.input_sku": {"fqn": ["DSR", "staging", "dimensions", "product", "dsr_input", "input_sku"], "database": "AA_DSR_RAW", "schema": "dsr_input", "unique_id": "source.DSR.dsr_input.input_sku", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "models/staging/dimensions/product/src_dim_product.yml", "original_file_path": "models/staging/dimensions/product/src_dim_product.yml", "name": "input_sku", "source_name": "dsr_input", "source_description": "Standard input tables for all inbound DSR data.", "loader": "", "identifier": "input_sku", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "**Description**\n\nContains distinct sku. A product sku are organisationally defined and are scoped to the creator organisation.\nModel Operation :- Incrementally adds data.\n\n**Grain**\nOne record per sku along with the creator organization ID.\n\n**Purpose**\nUsed to distinctly identify and store sku with respect to creator organisation\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain", "columns": {"attributes": {"name": "attributes", "description": "Extra attributes\\values that defines the product\\locations\\promotion.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "base_unit": {"name": "base_unit", "description": "Base unit for specific sku\\product", "meta": {}, "data_type": null, "quote": null, "tags": []}, "brand": {"name": "brand", "description": "Brand of the product", "meta": {}, "data_type": null, "quote": null, "tags": []}, "business_organisation_number": {"name": "business_organisation_number", "description": "Business organisation number", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "Timestamp when the records was entered into the input table and feeded to DSR.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "description": {"name": "description", "description": "Full name\\short description of the product.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "gtin": {"name": "gtin", "description": "A Global Trade Item Number (GTIN) is a unique and internationally recognised identifier for a product.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "individual_units": {"name": "individual_units", "description": "Number of individual units that comprises the SKU", "meta": {}, "data_type": null, "quote": null, "tags": []}, "loaded_timestamp": {"name": "loaded_timestamp", "description": "Timestamp when the data was loaded into the input tables to DSR.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "net_quantity": {"name": "net_quantity", "description": "Total quantity of sku eg 100ml, 250g", "meta": {}, "data_type": null, "quote": null, "tags": []}, "organisation_sku": {"name": "organisation_sku", "description": "SKU(Stock keeping unit) specified by the retailer for a product.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "origin_organisation_number": {"name": "origin_organisation_number", "description": "Number of the organisation which created the subject organisation", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "AA_DSR_RAW.dsr_input.input_sku", "created_at": 1631703184}, "source.DSR.dsr_input.input_sku_grouping": {"fqn": ["DSR", "staging", "dimensions", "product", "dsr_input", "input_sku_grouping"], "database": "AA_DSR_RAW", "schema": "dsr_input", "unique_id": "source.DSR.dsr_input.input_sku_grouping", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "models/staging/dimensions/product/src_dim_product.yml", "original_file_path": "models/staging/dimensions/product/src_dim_product.yml", "name": "input_sku_grouping", "source_name": "dsr_input", "source_description": "Standard input tables for all inbound DSR data.", "loader": "", "identifier": "input_sku_grouping", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "**Description**\n\nContains groups of sku defined on certain attributes and with a group name along with value. This means there could be multiple sku which share similar products attribute and an creator organisation can match them together.\n\n\n**Grain**\nOne record per sku id for creator organisation, subject organisation and group name\n\n**Purpose**\nGroups can be defined for sku which can share similar attributes.\nCreator such as atheon can create its own group with a unique group name and assign a group value to all group sku\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain", "columns": {"created_timestamp": {"name": "created_timestamp", "description": "Timestamp when the records was entered into the input table and feeded to DSR.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "creator_business_organisation_number": {"name": "creator_business_organisation_number", "description": "Organisation number for the organisation who created this entry. This would be morrisons in case when Morrison will create this entry", "meta": {}, "data_type": null, "quote": null, "tags": []}, "creator_origin_organisation_number": {"name": "creator_origin_organisation_number", "description": "Origin organisation number of the row entry creator. It represent who created this organisation. It will be NULL as atheon does not have an origin Organisation number for the organisation who created this entry.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "group_name": {"name": "group_name", "description": "Name of the group. Eg. It can be NUTS1", "meta": {}, "data_type": null, "quote": null, "tags": []}, "group_value": {"name": "group_value", "description": "Actual group value which defines the group for the respective entry. Eg. It can be London etc.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "loaded_timestamp": {"name": "loaded_timestamp", "description": "Timestamp when the data was loaded into the input tables to DSR.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "organisation_sku": {"name": "organisation_sku", "description": "SKU(Stock keeping unit) specified by the retailer for a product.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "subject_business_organisation_number": {"name": "subject_business_organisation_number", "description": "Business organisation number of the subject organization. It represent the organisation for which this entry is created. Eg It will be morrisons which is morrisons organisation number", "meta": {}, "data_type": null, "quote": null, "tags": []}, "subject_origin_organisation_number": {"name": "subject_origin_organisation_number", "description": "Origin organisation number of the subject organization.It represent who created this subject organisation. It can be 1 as Morrisons organization is created by athoen", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "AA_DSR_RAW.dsr_input.input_sku_grouping", "created_at": 1631703184}, "source.DSR.dsr_input.input_organisation_mapping": {"fqn": ["DSR", "staging", "dimensions", "organisation", "dsr_input", "input_organisation_mapping"], "database": "AA_DSR_RAW", "schema": "dsr_input", "unique_id": "source.DSR.dsr_input.input_organisation_mapping", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "models/staging/dimensions/organisation/src_dim_org.yml", "original_file_path": "models/staging/dimensions/organisation/src_dim_org.yml", "name": "input_organisation_mapping", "source_name": "dsr_input", "source_description": "Standard input tables for all inbound DSR data.", "loader": "", "identifier": "input_organisation_mapping", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "**Description**\nContains distinct organization. A unique organisation Id is defined by the organisation number and Id of the organisation which creates it.\n\n**Grain**\nOne record per organization.\n\n**Purpose**\nUsed to define mapping for the organisation. It allows a same organisation differentiated on the basis of the creator organisation.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain", "columns": {"business_organisation_name": {"name": "business_organisation_name", "description": "Business organisation name", "meta": {}, "data_type": null, "quote": null, "tags": []}, "business_organisation_number": {"name": "business_organisation_number", "description": "Business organisation number", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "Timestamp when the records was entered into the input table and feeded to DSR.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "loaded_timestamp": {"name": "loaded_timestamp", "description": "Timestamp when the data was loaded into the input tables to DSR.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "origin_organisation_number": {"name": "origin_organisation_number", "description": "Number of the organisation which created the subject organisation", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "AA_DSR_RAW.dsr_input.input_organisation_mapping", "created_at": 1631703184}, "source.DSR.dsr_input.input_organisation": {"fqn": ["DSR", "staging", "dimensions", "organisation", "dsr_input", "input_organisation"], "database": "AA_DSR_RAW", "schema": "dsr_input", "unique_id": "source.DSR.dsr_input.input_organisation", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "models/staging/dimensions/organisation/src_dim_org.yml", "original_file_path": "models/staging/dimensions/organisation/src_dim_org.yml", "name": "input_organisation", "source_name": "dsr_input", "source_description": "Standard input tables for all inbound DSR data.", "loader": "", "identifier": "input_organisation", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "**Description**\nContains list of all organization. Creator can defines attributes for an organisation.I\n\n**Grain**\nOne record per organization.\n\n**Purpose**\nUsed to distinctly identify and store organisation.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain", "columns": {"attributes": {"name": "attributes", "description": "Extra attributes\\values that defines the product\\locations\\promotion.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "business_organisation_number": {"name": "business_organisation_number", "description": "Business organisation number", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "Timestamp when the records was entered into the input table and feeded to DSR.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "loaded_timestamp": {"name": "loaded_timestamp", "description": "Timestamp when the data was loaded into the input tables to DSR.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "origin_organisation_number": {"name": "origin_organisation_number", "description": "Number of the organisation which created the subject organisation", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "AA_DSR_RAW.dsr_input.input_organisation", "created_at": 1631703184}, "source.DSR.dsr_input.input_organisation_parentage": {"fqn": ["DSR", "staging", "dimensions", "organisation", "dsr_input", "input_organisation_parentage"], "database": "AA_DSR_RAW", "schema": "dsr_input", "unique_id": "source.DSR.dsr_input.input_organisation_parentage", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "models/staging/dimensions/organisation/src_dim_org.yml", "original_file_path": "models/staging/dimensions/organisation/src_dim_org.yml", "name": "input_organisation_parentage", "source_name": "dsr_input", "source_description": "Standard input tables for all inbound DSR data.", "loader": "", "identifier": "input_organisation_parentage", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "**Description**\n\nContains list of organisation and defines the parent organisation for them which can be entered by a creator organisation\n\n\n**Grain**\nOne record per organization per creator organisation\n\n**Purpose**\nUsed to define parentage for an organisation. A creator organsaition can define the parentage for any organsaition.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain", "columns": {"business_organisation_number": {"name": "business_organisation_number", "description": "Business organisation number", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "Timestamp when the records was entered into the input table and feeded to DSR.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "creator_business_organisation_number": {"name": "creator_business_organisation_number", "description": "Organisation number for the organisation who created this entry. This would be morrisons in case when Morrison will create this entry", "meta": {}, "data_type": null, "quote": null, "tags": []}, "loaded_timestamp": {"name": "loaded_timestamp", "description": "Timestamp when the data was loaded into the input tables to DSR.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "origin_organisation_number": {"name": "origin_organisation_number", "description": "Number of the organisation which created the subject organisation", "meta": {}, "data_type": null, "quote": null, "tags": []}, "parent_business_organisation_number": {"name": "parent_business_organisation_number", "description": "Number of the organisation which created the child organisation.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "parent_origin_organisation_number": {"name": "parent_origin_organisation_number", "description": "Number of the organisation who created the parent organisation.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "AA_DSR_RAW.dsr_input.input_organisation_parentage", "created_at": 1631703184}, "source.DSR.dsr_input.input_delegated_visibility": {"fqn": ["DSR", "staging", "facts", "visibility", "dsr_input", "input_delegated_visibility"], "database": "AA_DSR_RAW", "schema": "dsr_input", "unique_id": "source.DSR.dsr_input.input_delegated_visibility", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "models/staging/facts/visibility/src_visibility.yml", "original_file_path": "models/staging/facts/visibility/src_visibility.yml", "name": "input_delegated_visibility", "source_name": "dsr_input", "source_description": "Standard input tables for all inbound DSR data.", "loader": "", "identifier": "input_delegated_visibility", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "Delegation instruction from one organisation to another to inherit sku level visibility", "columns": {"created_timestamp": {"name": "created_timestamp", "description": "Timestamp when the records was entered into the input table and feeded to DSR.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "delegated_status": {"name": "delegated_status", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "delegatee_organisation_number": {"name": "delegatee_organisation_number", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "delegatee_origin_organisation_number": {"name": "delegatee_origin_organisation_number", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "delegator_organisation_number": {"name": "delegator_organisation_number", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "delegator_origin_organisation_number": {"name": "delegator_origin_organisation_number", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "loaded_timestamp": {"name": "loaded_timestamp", "description": "Timestamp when the data was loaded into the input tables to DSR.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "organisation_product": {"name": "organisation_product", "description": "SKU(Stock keeping unit) specified by the retailer for a product.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "product_type": {"name": "product_type", "description": "Indicates whether this record pertains to a SKU or Case", "meta": {}, "data_type": null, "quote": null, "tags": []}, "subject_organisation_number": {"name": "subject_organisation_number", "description": "Business organisation number of the subject organization. It represent the organisation for which this entry is created. It will be morrisons which is morrisons organisation number", "meta": {}, "data_type": null, "quote": null, "tags": []}, "subject_origin_organisation_number": {"name": "subject_origin_organisation_number", "description": "Origin organisation number of the subject organization.It represent who created this subject organisation. It can be 1 as Morrisons organization is created by athoen", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "AA_DSR_RAW.dsr_input.input_delegated_visibility", "created_at": 1631703184}, "source.DSR.dsr_input.input_pln_mvt_depotstoredaysku": {"fqn": ["DSR", "staging", "facts", "movements", "plans", "dsr_input", "input_pln_mvt_depotstoredaysku"], "database": "AA_DSR_RAW", "schema": "dsr_input", "unique_id": "source.DSR.dsr_input.input_pln_mvt_depotstoredaysku", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "models/staging/facts/movements/plans/src_fact_pln_mvt.yml", "original_file_path": "models/staging/facts/movements/plans/src_fact_pln_mvt.yml", "name": "input_pln_mvt_depotstoredaysku", "source_name": "dsr_input", "source_description": "Standard input tables for all inbound DSR data.", "loader": "", "identifier": "input_pln_mvt_depotstoredaysku", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "**Description**\n\nData Category: Plan\n\nData Representation: Movement\n\nContents: Contains plan movement recorded between a depot and a store on a day at sku level. This is measured at a point in time defined by the retailer to be representative of that day.\n\n\n**Grain**\nOne record per sku movement per organisation location from to organisation location id to per day.\n\n**Purpose**\nUsed to provide planned movement information of a sku from depot to store for a day. \n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain", "columns": {"base_forecast_date": {"name": "base_forecast_date", "description": "Date when forecast was created", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_at": {"name": "created_at", "description": "Date when forecast was created", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "Timestamp when the records was entered into the input table and feeded to DSR.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "forecast_components": {"name": "forecast_components", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "forecast_date": {"name": "forecast_date", "description": "Date when the forecast was published.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "loaded_timestamp": {"name": "loaded_timestamp", "description": "Timestamp when the data was loaded into the input tables to DSR.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "model_version": {"name": "model_version", "description": "Model version used to generate the forecast.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "organisation_location_id_from": {"name": "organisation_location_id_from", "description": "Specifies the depot location id from where product\\case is supplied to the store.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "organisation_location_id_to": {"name": "organisation_location_id_to", "description": "Specifies the store location ID where product\\cases is being supplied by the depot.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "organisation_sku": {"name": "organisation_sku", "description": "SKU(Stock keeping unit) specified by the retailer for a product.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "origin_file": {"name": "origin_file", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "source_db_id": {"name": "source_db_id", "description": "organisation number\\code of the data provider. Eg it will be morrions if the record was provided morrisons.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "status": {"name": "status", "description": "check with farah", "meta": {}, "data_type": null, "quote": null, "tags": []}, "units_required": {"name": "units_required", "description": "Units planned to be ordered by the depot to the supplier", "meta": {}, "data_type": null, "quote": null, "tags": []}, "units_required_lower": {"name": "units_required_lower", "description": "Lower limit of units planned to be ordered by the depot to the supplier", "meta": {}, "data_type": null, "quote": null, "tags": []}, "units_required_upper": {"name": "units_required_upper", "description": "upper limit of units planned to be ordered by the depot to the supplier", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "AA_DSR_RAW.dsr_input.input_pln_mvt_depotstoredaysku", "created_at": 1631703184}, "source.DSR.dsr_input.input_pln_mvt_daysku": {"fqn": ["DSR", "staging", "facts", "movements", "plans", "dsr_input", "input_pln_mvt_daysku"], "database": "AA_DSR_RAW", "schema": "dsr_input", "unique_id": "source.DSR.dsr_input.input_pln_mvt_daysku", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "models/staging/facts/movements/plans/src_fact_pln_mvt.yml", "original_file_path": "models/staging/facts/movements/plans/src_fact_pln_mvt.yml", "name": "input_pln_mvt_daysku", "source_name": "dsr_input", "source_description": "Standard input tables for all inbound DSR data.", "loader": "", "identifier": "input_pln_mvt_daysku", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "**Description**\n\n\n**Grain**\n\n\n**Purpose**\n\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain", "columns": {"base_forecast_date": {"name": "base_forecast_date", "description": "Date when forecast was created", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_at": {"name": "created_at", "description": "Date when forecast was created", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "Timestamp when the records was entered into the input table and feeded to DSR.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "forecast_components": {"name": "forecast_components", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "forecast_date": {"name": "forecast_date", "description": "Date when the forecast was published.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "loaded_timestamp": {"name": "loaded_timestamp", "description": "Timestamp when the data was loaded into the input tables to DSR.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "model_version": {"name": "model_version", "description": "Model version used to generate the forecast.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "organisation_sku": {"name": "organisation_sku", "description": "SKU(Stock keeping unit) specified by the retailer for a product.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "origin_file": {"name": "origin_file", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "source_db_id": {"name": "source_db_id", "description": "organisation number\\code of the data provider. Eg it will be morrions if the record was provided morrisons.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "subject_business_organisation_number": {"name": "subject_business_organisation_number", "description": "Business organisation number of the subject organization. It represent the organisation for which this entry is created. Eg It will be morrisons which is morrisons organisation number", "meta": {}, "data_type": null, "quote": null, "tags": []}, "units_required": {"name": "units_required", "description": "Units planned to be ordered by the depot to the supplier", "meta": {}, "data_type": null, "quote": null, "tags": []}, "units_required_lower": {"name": "units_required_lower", "description": "Lower limit of units planned to be ordered by the depot to the supplier", "meta": {}, "data_type": null, "quote": null, "tags": []}, "units_required_upper": {"name": "units_required_upper", "description": "upper limit of units planned to be ordered by the depot to the supplier", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "AA_DSR_RAW.dsr_input.input_pln_mvt_daysku", "created_at": 1631703184}, "source.DSR.dsr_input.input_pln_mvt_storedaysku": {"fqn": ["DSR", "staging", "facts", "movements", "plans", "dsr_input", "input_pln_mvt_storedaysku"], "database": "AA_DSR_RAW", "schema": "dsr_input", "unique_id": "source.DSR.dsr_input.input_pln_mvt_storedaysku", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "models/staging/facts/movements/plans/src_fact_pln_mvt.yml", "original_file_path": "models/staging/facts/movements/plans/src_fact_pln_mvt.yml", "name": "input_pln_mvt_storedaysku", "source_name": "dsr_input", "source_description": "Standard input tables for all inbound DSR data.", "loader": "", "identifier": "input_pln_mvt_storedaysku", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "**Description**\n\nData Category: Plan\n\nData Representation: Movement\n\nContents: Contains planned movement recorded for a store on a day at sku level. This is measured at a point in time defined by the organization(Identified by creator organisation ID) to be representative of that day.\n\n\n**Grain**\nOne record per sku per store per day.\n\n**Purpose**\nUsed to provide planned movement information of a sku of a store for a day. \n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain", "columns": {"base_forecast_date": {"name": "base_forecast_date", "description": "Date when forecast was created", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_at": {"name": "created_at", "description": "Date when forecast was created", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "Timestamp when the records was entered into the input table and feeded to DSR.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "forecast_components": {"name": "forecast_components", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "forecast_date": {"name": "forecast_date", "description": "Date when the forecast was published.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "loaded_timestamp": {"name": "loaded_timestamp", "description": "Timestamp when the data was loaded into the input tables to DSR.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "model_version": {"name": "model_version", "description": "Model version used to generate the forecast.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "organisation_sku": {"name": "organisation_sku", "description": "SKU(Stock keeping unit) specified by the retailer for a product.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "origin_file": {"name": "origin_file", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "source_db_id": {"name": "source_db_id", "description": "organisation number\\code of the data provider. Eg it will be morrions if the record was provided morrisons.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "subject_business_organisation_number": {"name": "subject_business_organisation_number", "description": "Business organisation number of the subject organization. It represent the organisation for which this entry is created. Eg It will be morrisons which is morrisons organisation number", "meta": {}, "data_type": null, "quote": null, "tags": []}, "subject_organisation_location_id_to": {"name": "subject_organisation_location_id_to", "description": "Location ID of the organisation where the product is forecated to be received. It is usually the depot\\store ID.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "units_required": {"name": "units_required", "description": "Units planned to be ordered by the depot to the supplier", "meta": {}, "data_type": null, "quote": null, "tags": []}, "units_required_lower": {"name": "units_required_lower", "description": "Lower limit of units planned to be ordered by the depot to the supplier", "meta": {}, "data_type": null, "quote": null, "tags": []}, "units_required_upper": {"name": "units_required_upper", "description": "upper limit of units planned to be ordered by the depot to the supplier", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "AA_DSR_RAW.dsr_input.input_pln_mvt_storedaysku", "created_at": 1631703184}, "source.DSR.dsr_input.input_pln_mvt_orgdepotdaysku": {"fqn": ["DSR", "staging", "facts", "movements", "plans", "dsr_input", "input_pln_mvt_orgdepotdaysku"], "database": "AA_DSR_RAW", "schema": "dsr_input", "unique_id": "source.DSR.dsr_input.input_pln_mvt_orgdepotdaysku", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "models/staging/facts/movements/plans/src_fact_pln_mvt.yml", "original_file_path": "models/staging/facts/movements/plans/src_fact_pln_mvt.yml", "name": "input_pln_mvt_orgdepotdaysku", "source_name": "dsr_input", "source_description": "Standard input tables for all inbound DSR data.", "loader": "", "identifier": "input_pln_mvt_orgdepotdaysku", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "**Description**\n\nData Category: Plan\n\nData Representation: Movement\n\nContents: Contains planned movement recorded between a organisation\\supplier and a depot on a day at sku level. This is measured at a point in time defined by the retailer(Identified by creator organisation ID) to be representative of that day.\n\n**Grain**\nOne record per case movement per supplier to depot per day.\n\n**Purpose**\nUsed to provide planned movement information of a sku from supplier organisation to depot for a day. \n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain", "columns": {"base_forecast_date": {"name": "base_forecast_date", "description": "Date when forecast was created", "meta": {}, "data_type": null, "quote": null, "tags": []}, "cases_required": {"name": "cases_required", "description": "cases planned to be ordered by the depot to the supplier", "meta": {}, "data_type": null, "quote": null, "tags": []}, "cases_required_lower": {"name": "cases_required_lower", "description": "Lower limit of cases planned to be ordered by the depot to the supplier", "meta": {}, "data_type": null, "quote": null, "tags": []}, "cases_required_upper": {"name": "cases_required_upper", "description": "upper limit of cases planned to be ordered by the depot to the supplier", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_at": {"name": "created_at", "description": "Date when forecast was created", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "Timestamp when the records was entered into the input table and feeded to DSR.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "forecast_components": {"name": "forecast_components", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "forecast_date": {"name": "forecast_date", "description": "Date when the forecast was published.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "loaded_timestamp": {"name": "loaded_timestamp", "description": "Timestamp when the data was loaded into the input tables to DSR.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "model_version": {"name": "model_version", "description": "Model version used to generate the forecast.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "origin_file": {"name": "origin_file", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "source_db_id": {"name": "source_db_id", "description": "organisation number\\code of the data provider. Eg it will be morrions if the record was provided morrisons.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "subject_business_organisation_number_from": {"name": "subject_business_organisation_number_from", "description": "Business organisation number of the organisation\\supplier from where the sku is supplied.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "subject_business_organisation_number_to": {"name": "subject_business_organisation_number_to", "description": "Business organisation number of the organisation to which the sku is supplied.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "subject_organisation_location_id_to": {"name": "subject_organisation_location_id_to", "description": "Location ID of the organisation where the product is forecated to be received. It is usually the depot\\store ID.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "subject_organisation_sku": {"name": "subject_organisation_sku", "description": "sku of subject organization.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "subject_origin_organisation_number": {"name": "subject_origin_organisation_number", "description": "Origin organisation number of the subject organization.It represent who created this subject organisation. It can be 1 as Morrisons organization is created by athoen", "meta": {}, "data_type": null, "quote": null, "tags": []}, "units_required": {"name": "units_required", "description": "Units planned to be ordered by the depot to the supplier", "meta": {}, "data_type": null, "quote": null, "tags": []}, "units_required_lower": {"name": "units_required_lower", "description": "Lower limit of units planned to be ordered by the depot to the supplier", "meta": {}, "data_type": null, "quote": null, "tags": []}, "units_required_upper": {"name": "units_required_upper", "description": "upper limit of units planned to be ordered by the depot to the supplier", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "AA_DSR_RAW.dsr_input.input_pln_mvt_orgdepotdaysku", "created_at": 1631703184}, "source.DSR.dsr_input.input_pln_mvt_orgstoredaysku": {"fqn": ["DSR", "staging", "facts", "movements", "plans", "dsr_input", "input_pln_mvt_orgstoredaysku"], "database": "AA_DSR_RAW", "schema": "dsr_input", "unique_id": "source.DSR.dsr_input.input_pln_mvt_orgstoredaysku", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "models/staging/facts/movements/plans/src_fact_pln_mvt.yml", "original_file_path": "models/staging/facts/movements/plans/src_fact_pln_mvt.yml", "name": "input_pln_mvt_orgstoredaysku", "source_name": "dsr_input", "source_description": "Standard input tables for all inbound DSR data.", "loader": "", "identifier": "input_pln_mvt_orgstoredaysku", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "**Description**\n\nData Category: Plan\n\nData Representation: Movement\n\nContents: Contains planned movement recorded between a organisation\\supplier and a store on a day at sku level. This is measured at a point in time defined by the retailer(Identified by creator organisation ID) to be representative of that day.\n\n**Grain**\nOne record per case movement per supplier to store per day.\n\n**Purpose**\nUsed to provide planned movement information of a sku from supplier organisation to store for a day. \n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain", "columns": {"base_forecast_date": {"name": "base_forecast_date", "description": "Date when forecast was created", "meta": {}, "data_type": null, "quote": null, "tags": []}, "cases_required": {"name": "cases_required", "description": "cases planned to be ordered by the depot to the supplier", "meta": {}, "data_type": null, "quote": null, "tags": []}, "cases_required_lower": {"name": "cases_required_lower", "description": "Lower limit of cases planned to be ordered by the depot to the supplier", "meta": {}, "data_type": null, "quote": null, "tags": []}, "cases_required_upper": {"name": "cases_required_upper", "description": "upper limit of cases planned to be ordered by the depot to the supplier", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_at": {"name": "created_at", "description": "Date when forecast was created", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "Timestamp when the records was entered into the input table and feeded to DSR.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "forecast_components": {"name": "forecast_components", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "forecast_date": {"name": "forecast_date", "description": "Date when the forecast was published.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "loaded_timestamp": {"name": "loaded_timestamp", "description": "Timestamp when the data was loaded into the input tables to DSR.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "model_version": {"name": "model_version", "description": "Model version used to generate the forecast.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "organisation_sku": {"name": "organisation_sku", "description": "SKU(Stock keeping unit) specified by the retailer for a product.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "origin_file": {"name": "origin_file", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "source_db_id": {"name": "source_db_id", "description": "organisation number\\code of the data provider. Eg it will be morrions if the record was provided morrisons.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "subject_business_organisation_number": {"name": "subject_business_organisation_number", "description": "Business organisation number of the subject organization. It represent the organisation for which this entry is created. Eg It will be morrisons which is morrisons organisation number", "meta": {}, "data_type": null, "quote": null, "tags": []}, "subject_organisation_location_id_to": {"name": "subject_organisation_location_id_to", "description": "Location ID of the organisation where the product is forecated to be received. It is usually the depot\\store ID.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "units_required": {"name": "units_required", "description": "Units planned to be ordered by the depot to the supplier", "meta": {}, "data_type": null, "quote": null, "tags": []}, "units_required_lower": {"name": "units_required_lower", "description": "Lower limit of units planned to be ordered by the depot to the supplier", "meta": {}, "data_type": null, "quote": null, "tags": []}, "units_required_upper": {"name": "units_required_upper", "description": "upper limit of units planned to be ordered by the depot to the supplier", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "AA_DSR_RAW.dsr_input.input_pln_mvt_orgstoredaysku", "created_at": 1631703184}, "source.DSR.dsr_input.input_act_mvt_storedaysku": {"fqn": ["DSR", "staging", "facts", "movements", "actuals", "dsr_input", "input_act_mvt_storedaysku"], "database": "AA_DSR_RAW", "schema": "dsr_input", "unique_id": "source.DSR.dsr_input.input_act_mvt_storedaysku", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "models/staging/facts/movements/actuals/src_fact_act_mvt.yml", "original_file_path": "models/staging/facts/movements/actuals/src_fact_act_mvt.yml", "name": "input_act_mvt_storedaysku", "source_name": "dsr_input", "source_description": "Standard input tables for all inbound DSR data.", "loader": "", "identifier": "input_act_mvt_storedaysku", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "**Description**\n\nData Category: Actual\n\nData Representation: Movement\n\nContents: Contains actual movement recorded for a store at sku level. This is measured at a point in time defined by the retailer to be representative of that day.\n\n**Grain**\nOne record per store, per day, per sku. \n\n**Purpose**\nUsed to provide movement information for a SKU at specific store over time. \n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain", "columns": {"bin_waste_eaches": {"name": "bin_waste_eaches", "description": "Number of eaches that have been thrown into the bin entirely unsold and classed as waste.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "bin_waste_value": {"name": "bin_waste_value", "description": "Value of product that has been thrown into the bin entirely unsold and classed as waste.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "Timestamp when the records was entered into the input table and feeded to DSR.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "day_date": {"name": "day_date", "description": "Unique full date of the day in YYYY-MM-DD format.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "epos_eaches": {"name": "epos_eaches", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "epos_value": {"name": "epos_value", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "loaded_timestamp": {"name": "loaded_timestamp", "description": "Timestamp when the data was loaded into the input tables to DSR.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "organisation_location_id": {"name": "organisation_location_id", "description": "An unique ID for every location of a organisation. It generated using origin and business org number along with location number.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "organisation_sku": {"name": "organisation_sku", "description": "SKU(Stock keeping unit) specified by the retailer for a product.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "rtc_epos_eaches": {"name": "rtc_epos_eaches", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "rtc_epos_value": {"name": "rtc_epos_value", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "rtc_reduction_value": {"name": "rtc_reduction_value", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "source_db_id": {"name": "source_db_id", "description": "organisation number\\code of the data provider. Eg it will be morrions if the record was provided morrisons.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_waste_eaches": {"name": "total_waste_eaches", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_waste_value": {"name": "total_waste_value", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "AA_DSR_RAW.dsr_input.input_act_mvt_storedaysku", "created_at": 1631703184}, "source.DSR.dsr_input.input_act_mvt_orgdepotdaycase": {"fqn": ["DSR", "staging", "facts", "movements", "actuals", "dsr_input", "input_act_mvt_orgdepotdaycase"], "database": "AA_DSR_RAW", "schema": "dsr_input", "unique_id": "source.DSR.dsr_input.input_act_mvt_orgdepotdaycase", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "models/staging/facts/movements/actuals/src_fact_act_mvt.yml", "original_file_path": "models/staging/facts/movements/actuals/src_fact_act_mvt.yml", "name": "input_act_mvt_orgdepotdaycase", "source_name": "dsr_input", "source_description": "Standard input tables for all inbound DSR data.", "loader": "", "identifier": "input_act_mvt_orgdepotdaycase", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "**Description**\n\nData Category: Actual\n\nData Representation: Movement\n\nContents: Contains actual movement recorded between a organisation\\supplier and a depot on a day at case level. This is measured at a point in time defined by the retailer to be representative of that day.\n\n**Grain**\nOne record per case movement per supplier to depot per day.\n\n**Purpose**\nUsed to provide movement information of a case from supplier organisation to depot for a day. The data is aggregated to provide information on actual case ordered by a retailer and unites fulfilled by the supplier to retailers depot.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain", "columns": {"business_organisation_number_from": {"name": "business_organisation_number_from", "description": "Business organisation number of the supplier from which the case\\sku is coming from", "meta": {}, "data_type": null, "quote": null, "tags": []}, "cases_fulfilled_in": {"name": "cases_fulfilled_in", "description": "Number of cases fulfilled by the supplier.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "cases_ordered_in": {"name": "cases_ordered_in", "description": "Number of cases ordered by the retailer to the supplier.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "Timestamp when the records was entered into the input table and feeded to DSR.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "day_date": {"name": "day_date", "description": "Unique full date of the day in YYYY-MM-DD format.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "loaded_timestamp": {"name": "loaded_timestamp", "description": "Timestamp when the data was loaded into the input tables to DSR.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "organisation_case": {"name": "organisation_case", "description": "Case number received from the input feeder to dsr.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "organisation_location_id": {"name": "organisation_location_id", "description": "An unique ID for every location of a organisation. It generated using origin and business org number along with location number.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "source_db_id": {"name": "source_db_id", "description": "organisation number\\code of the data provider. Eg it will be morrions if the record was provided morrisons.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "AA_DSR_RAW.dsr_input.input_act_mvt_orgdepotdaycase", "created_at": 1631703184}, "source.DSR.dsr_input.input_act_mvt_orgdepotdayordercase": {"fqn": ["DSR", "staging", "facts", "movements", "actuals", "dsr_input", "input_act_mvt_orgdepotdayordercase"], "database": "AA_DSR_RAW", "schema": "dsr_input", "unique_id": "source.DSR.dsr_input.input_act_mvt_orgdepotdayordercase", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "models/staging/facts/movements/actuals/src_fact_act_mvt.yml", "original_file_path": "models/staging/facts/movements/actuals/src_fact_act_mvt.yml", "name": "input_act_mvt_orgdepotdayordercase", "source_name": "dsr_input", "source_description": "Standard input tables for all inbound DSR data.", "loader": "", "identifier": "input_act_mvt_orgdepotdayordercase", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "**Description**\n\nData Category: Actual\n\nData Representation: Movement\n\nContents: Contains actual movement recorded between a organisation\\supplier and a depot on a day at case level for every order. This is measured at a point in time defined by the retailer to be representative of that day.\n\n**Grain**\nOne record per case movement per supplier to depot per day.\n\n**Purpose**\nUsed to provide movement information of a case from supplier organisation to depot for a day per order. The data is aggregated to provide information on actual case ordered by a retailer and unites fulfilled by the supplier to retailers depot.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain", "columns": {"business_organisation_number_from": {"name": "business_organisation_number_from", "description": "Business organisation number of the supplier from which the case\\sku is coming from", "meta": {}, "data_type": null, "quote": null, "tags": []}, "cases_fulfilled_in": {"name": "cases_fulfilled_in", "description": "Number of cases fulfilled by the supplier.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "cases_ordered_in": {"name": "cases_ordered_in", "description": "Number of cases ordered by the retailer to the supplier.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "Timestamp when the records was entered into the input table and feeded to DSR.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "day_date": {"name": "day_date", "description": "Unique full date of the day in YYYY-MM-DD format.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "loaded_timestamp": {"name": "loaded_timestamp", "description": "Timestamp when the data was loaded into the input tables to DSR.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "order_code": {"name": "order_code", "description": "Actual Order number used to place the order.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "organisation_case": {"name": "organisation_case", "description": "Case number received from the input feeder to dsr.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "organisation_location_id": {"name": "organisation_location_id", "description": "An unique ID for every location of a organisation. It generated using origin and business org number along with location number.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "source_db_id": {"name": "source_db_id", "description": "organisation number\\code of the data provider. Eg it will be morrions if the record was provided morrisons.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "AA_DSR_RAW.dsr_input.input_act_mvt_orgdepotdayordercase", "created_at": 1631703184}, "source.DSR.dsr_input.input_act_mvt_depotstoredaysku": {"fqn": ["DSR", "staging", "facts", "movements", "actuals", "dsr_input", "input_act_mvt_depotstoredaysku"], "database": "AA_DSR_RAW", "schema": "dsr_input", "unique_id": "source.DSR.dsr_input.input_act_mvt_depotstoredaysku", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "models/staging/facts/movements/actuals/src_fact_act_mvt.yml", "original_file_path": "models/staging/facts/movements/actuals/src_fact_act_mvt.yml", "name": "input_act_mvt_depotstoredaysku", "source_name": "dsr_input", "source_description": "Standard input tables for all inbound DSR data.", "loader": "", "identifier": "input_act_mvt_depotstoredaysku", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "**Description**\n\nData Category: Actual\n\nData Representation: Movement\n\nContents: Contains actual movement recorded between a depot and a store on a day at sku level. This is measured at a point in time defined by the retailer to be representative of that day.\n\n**Grain**\nOne record per sku movement per organisation location from to organisation location id to per day.\n\n**Purpose**\nUsed to provide movement information of a sku from depot to store for a day. The data is aggregated to provide information on actual units ordered by a store and unites fulfilled by the depot.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain", "columns": {"created_timestamp": {"name": "created_timestamp", "description": "Timestamp when the records was entered into the input table and feeded to DSR.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "day_date": {"name": "day_date", "description": "Unique full date of the day in YYYY-MM-DD format.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "loaded_timestamp": {"name": "loaded_timestamp", "description": "Timestamp when the data was loaded into the input tables to DSR.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "organisation_location_id_from": {"name": "organisation_location_id_from", "description": "Specifies the depot location id from where product\\case is supplied to the store.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "organisation_location_id_to": {"name": "organisation_location_id_to", "description": "Specifies the store location ID where product\\cases is being supplied by the depot.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "organisation_sku": {"name": "organisation_sku", "description": "SKU(Stock keeping unit) specified by the retailer for a product.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "source_db_id": {"name": "source_db_id", "description": "organisation number\\code of the data provider. Eg it will be morrions if the record was provided morrisons.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "units_fulfilled": {"name": "units_fulfilled", "description": "Number of units of sku fulfilled by the supplier.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "units_ordered": {"name": "units_ordered", "description": "Number of units ordered by the retailer to the supplier.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "AA_DSR_RAW.dsr_input.input_act_mvt_depotstoredaysku", "created_at": 1631703184}, "source.DSR.dsr_input.input_pln_inv_storedaysku": {"fqn": ["DSR", "staging", "facts", "inventory", "plans", "dsr_input", "input_pln_inv_storedaysku"], "database": "AA_DSR_RAW", "schema": "dsr_input", "unique_id": "source.DSR.dsr_input.input_pln_inv_storedaysku", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "models/staging/facts/inventory/plans/src_fact_pln_inv.yml", "original_file_path": "models/staging/facts/inventory/plans/src_fact_pln_inv.yml", "name": "input_pln_inv_storedaysku", "source_name": "dsr_input", "source_description": "Standard input tables for all inbound DSR data.", "loader": "", "identifier": "input_pln_inv_storedaysku", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "**Description**\n\nData Category: Plan\n\nData Representation: Inventory\n\nContents: Contains planned inventory recorded for a store at sku level. This is measured at a point in time defined by the retailer to be representative of that day.\n\n\n**Grain**\nOne record per store, per day, per sku.\n\n**Purpose**\nUsed to provide ranging information for a sku to a store for a day.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain", "columns": {"created_timestamp": {"name": "created_timestamp", "description": "Timestamp when the records was entered into the input table and feeded to DSR.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "day_date": {"name": "day_date", "description": "Unique full date of the day in YYYY-MM-DD format.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "loaded_timestamp": {"name": "loaded_timestamp", "description": "Timestamp when the data was loaded into the input tables to DSR.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "organisation_location_id": {"name": "organisation_location_id", "description": "An unique ID for every location of a organisation. It generated using origin and business org number along with location number.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "organisation_sku": {"name": "organisation_sku", "description": "SKU(Stock keeping unit) specified by the retailer for a product.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "ranged": {"name": "ranged", "description": "Specifies whether the sku is ranged for for a store. It indicates range using boolean flags.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "source_db_id": {"name": "source_db_id", "description": "organisation number\\code of the data provider. Eg it will be morrions if the record was provided morrisons.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "AA_DSR_RAW.dsr_input.input_pln_inv_storedaysku", "created_at": 1631703184}, "source.DSR.dsr_input.input_act_inv_locationdaysku": {"fqn": ["DSR", "staging", "facts", "inventory", "actuals", "dsr_input", "input_act_inv_locationdaysku"], "database": "AA_DSR_RAW", "schema": "dsr_input", "unique_id": "source.DSR.dsr_input.input_act_inv_locationdaysku", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "models/staging/facts/inventory/actuals/src_fact_act_inv.yml", "original_file_path": "models/staging/facts/inventory/actuals/src_fact_act_inv.yml", "name": "input_act_inv_locationdaysku", "source_name": "dsr_input", "source_description": "Standard input tables for all inbound DSR data.", "loader": "", "identifier": "input_act_inv_locationdaysku", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "**Description**\nData Category: Actual\n\nData Representation: Inventory\n\nContents: Contains actual inventory recorded at a location on a day at sku level. This is measured at a point in time defined by the retailer to be representative of that day.\nThe table contains both depot and store inventory information, but only where sku level information is available.\n\n\n**Grain**\nOne record per location, per day, per sku. \n\nRecords only where source data submitted, therefore there may be \"zero\" inventory records, but the data is not densified for NULL records.\n\n**Purpose**\nUsed to provide stock information at specific locations over time. The data is aggregated to the SKU level by joining the logistic item with this table to provide a consistent stock picture where stock measures are inconsistent.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain", "columns": {"created_timestamp": {"name": "created_timestamp", "description": "Timestamp when the records was entered into the input table and feeded to DSR.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "day_date": {"name": "day_date", "description": "Unique full date of the day in YYYY-MM-DD format.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "loaded_timestamp": {"name": "loaded_timestamp", "description": "Timestamp when the data was loaded into the input tables to DSR.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "location_function": {"name": "location_function", "description": "Defines whether the location is a Depot or a store. It is represented by point of sale and distribution location", "meta": {}, "data_type": null, "quote": null, "tags": []}, "organisation_location_id": {"name": "organisation_location_id", "description": "An unique ID for every location of a organisation. It generated using origin and business org number along with location number.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "organisation_sku": {"name": "organisation_sku", "description": "SKU(Stock keeping unit) specified by the retailer for a product.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "source_db_id": {"name": "source_db_id", "description": "organisation number\\code of the data provider. Eg it will be morrions if the record was provided morrisons.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "stock_units": {"name": "stock_units", "description": "Number of units for a given sku.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "stock_value": {"name": "stock_value", "description": "Value of the current stock for a given sku", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "AA_DSR_RAW.dsr_input.input_act_inv_locationdaysku", "created_at": 1631703184}, "source.DSR.dsr_input.input_act_inv_locationdaycase": {"fqn": ["DSR", "staging", "facts", "inventory", "actuals", "dsr_input", "input_act_inv_locationdaycase"], "database": "AA_DSR_RAW", "schema": "dsr_input", "unique_id": "source.DSR.dsr_input.input_act_inv_locationdaycase", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "models/staging/facts/inventory/actuals/src_fact_act_inv.yml", "original_file_path": "models/staging/facts/inventory/actuals/src_fact_act_inv.yml", "name": "input_act_inv_locationdaycase", "source_name": "dsr_input", "source_description": "Standard input tables for all inbound DSR data.", "loader": "", "identifier": "input_act_inv_locationdaycase", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "**Description**\nData category: Actual\n\nData Representation: Inventory\n\nContents: Contains actual inventory recorded at a location on a day at case level. This is measured at a point in time defined by the retailer to be representative of that day.\nThe table contains both depot and store inventory information, but only where case level information is available.\n\n**Grain**\nOne record per location, per day, per case. \n\nRecords only where source data submitted, therefore there may be \"zero\" inventory records, but the data is not densified for NULL records.\n\n**Purpose**\nUsed to provide stock information at specific locations over time. This data can be aggregated to the SKU level by joining the logistic item to provide a consistent stock picture where stock measures are inconsistent\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain", "columns": {"created_timestamp": {"name": "created_timestamp", "description": "Timestamp when the records was entered into the input table and feeded to DSR.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "day_date": {"name": "day_date", "description": "Unique full date of the day in YYYY-MM-DD format.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "loaded_timestamp": {"name": "loaded_timestamp", "description": "Timestamp when the data was loaded into the input tables to DSR.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "location_function": {"name": "location_function", "description": "Defines whether the location is a Depot or a store. It is represented by point of sale and distribution location", "meta": {}, "data_type": null, "quote": null, "tags": []}, "organisation_case": {"name": "organisation_case", "description": "Case number received from the input feeder to dsr.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "organisation_location_id": {"name": "organisation_location_id", "description": "An unique ID for every location of a organisation. It generated using origin and business org number along with location number.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "source_db_id": {"name": "source_db_id", "description": "organisation number\\code of the data provider. Eg it will be morrions if the record was provided morrisons.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "stock_units": {"name": "stock_units", "description": "Number of units for a given sku.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "stock_value": {"name": "stock_value", "description": "Value of the current stock for a given sku", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "AA_DSR_RAW.dsr_input.input_act_inv_locationdaycase", "created_at": 1631703184}}, "macros": {"macro.DSR.test_check_distinct_sku_fetched": {"unique_id": "macro.DSR.test_check_distinct_sku_fetched", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "macros/test_check_distinct_sku_fetched.sql", "original_file_path": "macros/test_check_distinct_sku_fetched.sql", "name": "test_check_distinct_sku_fetched", "macro_sql": "{% macro test_check_distinct_sku_fetched(model, column_name) %}\n{% set test_in_env = kwargs.get('env') %}\n  {#-\n  We should run this test when:\n  * the environment has not been specified OR,\n  * we are in the specified environment\n  -#}\n  {%- if test_in_env is none or target.name == test_in_env -%}\n        with validation_errors as (\n\n            select\n                {{ column_name }} as unique_id,\n                count(1) count_load_data\n            from {{ model }}\n             group by 1\n             having count_load_data>1\n        )\n\n        select count(*)\n        from validation_errors\n    {%- else -%}\n\n        select 0\n\n    {%- endif -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.DSR.test_check_all_sku_fetched": {"unique_id": "macro.DSR.test_check_all_sku_fetched", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "macros/test_check_all_sku_fetched.sql", "original_file_path": "macros/test_check_all_sku_fetched.sql", "name": "test_check_all_sku_fetched", "macro_sql": "{% macro test_check_all_sku_fetched(model, column_name,columnlist) %}\n\n{%- set ci =  model ~ \"_ci\" -%}\n{% set test_in_env = kwargs.get('env') %}\n  {#-\n  We should run this test when:\n  * the environment has not been specified OR,\n  * we are in the specified environment\n  -#}\n  {%- if test_in_env is none or target.name == test_in_env -%}\n        {%- set fields = [] -%}\n\n        with validation_errors as\n        (\n            (select\n                {% for field in columnlist -%}\n                    {%- set _ = fields.append(\"coalesce(cast(\" ~ field ~ \" as \" ~ dbt_utils.type_string() ~ \"), '')\") -%}\n                    {%- if not loop.last %} {%- set _ = fields.append(\"'-'\") -%} {%- endif -%}\n                {%- endfor -%}\n                {{dbt_utils.hash(dbt_utils.concat(fields))}} as unique_key\n\n            from {{ci}}\n            )\n            minus\n            (\n                select {{column_name}} as unique_key\n                from {{ model }}\n            )\n        )\n\n        select count(*)\n        from validation_errors\n    {%- else -%}\n\n        select 0\n\n    {%- endif -%}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.DSR.test_not_null": {"unique_id": "macro.DSR.test_not_null", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "macros/test_not_null.sql", "original_file_path": "macros/test_not_null.sql", "name": "test_not_null", "macro_sql": "{% macro test_not_null(model) %}\n\n  {% set column_name = kwargs.get('column_name', kwargs.get('arg')) %}\n\n  {% set test_in_env = kwargs.get('env') %}\n\n  {#-\n  We should run this test when:\n  * the environment has not been specified OR,\n  * we are in the specified environment\n  -#}\n  {%- if test_in_env is none or target.name == test_in_env -%}\n\n    select count(*)\n    from {{ model }}\n    where {{ column_name }} is null\n\n  {#-\n  We should skip this test otherwise, which we do by returning 0\n  -#}\n  {%- else -%}\n\n    select 0\n\n  {%- endif -%}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.DSR.test_unique_combination_of_columns": {"unique_id": "macro.DSR.test_unique_combination_of_columns", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "macros/test_unique_combination_of_columns.sql", "original_file_path": "macros/test_unique_combination_of_columns.sql", "name": "test_unique_combination_of_columns", "macro_sql": "{% macro test_unique_combination_of_columns(model, quote_columns = false) %}\n\n  {%- set columns = kwargs.get('combination_of_columns', kwargs.get('arg')) %}\n  {% set test_in_env = kwargs.get('env') %}\n\n  {#-\n  We should run this test when:\n  * the environment has not been specified OR,\n  * we are in the specified environment\n  -#}\n  {%- if test_in_env is none or target.name == test_in_env -%}\n    {% if not quote_columns %}\n        {%- set column_list=columns %}\n    {% elif quote_columns %}\n        {%- set column_list=[] %}\n            {% for column in columns -%}\n                {% set column_list = column_list.append( adapter.quote(column) ) %}\n            {%- endfor %}\n    {% else %}\n        {{ exceptions.raise_compiler_error(\n            \"`quote_columns` argument for unique_combination_of_columns test must be one of [True, False] Got: '\" ~ quote ~\"'.'\"\n        ) }}\n    {% endif %}\n\n    {%- set columns_csv=column_list | join(', ') %}\n\n\n    with validation_errors as (\n\n        select\n            {{ columns_csv }}\n        from {{ model }}\n\n        group by {{ columns_csv }}\n        having count(1) > 1\n\n    )\n\n    select count(*)\n    from validation_errors\n\n  {#-\n  We should skip this test otherwise, which we do by returning 0\n  -#}\n  {%- else -%}\n\n    select 0\n\n  {%- endif -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.DSR.test_check_latest_sku_fetched": {"unique_id": "macro.DSR.test_check_latest_sku_fetched", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "macros/test_check_latest_sku_fetched.sql", "original_file_path": "macros/test_check_latest_sku_fetched.sql", "name": "test_check_latest_sku_fetched", "macro_sql": "{% macro test_check_latest_sku_fetched(model, column_name,columnlist) %}\n\n{%- set ci =  model ~ \"_ci\" -%}\n{% set test_in_env = kwargs.get('env') %}\n{#-\n  We should run this test when:\n  * the environment has not been specified OR,\n  * we are in the specified environment\n  -#}\n  {%- if test_in_env is none or target.name == test_in_env -%}\n\n        {%- set fields = [] -%}\n\n        with validation_errors as\n        (\n            (   select\n                    {% for field in columnlist -%}\n                        {%- set _ = fields.append(\"coalesce(cast(\" ~ field ~ \" as \" ~ dbt_utils.type_string() ~ \"), '')\") -%}\n                        {%- if not loop.last %} {%- set _ = fields.append(\"'-'\") -%} {%- endif -%}\n                    {%- endfor -%}\n                    {{dbt_utils.hash(dbt_utils.concat(fields))}} as unique_key,\n                    max(to_timestamp(loaded_timestamp))\n                from {{ci}}\n                group by unique_key\n            )\n            minus\n            (\n                select {{column_name}} as unique_key,\n                        to_timestamp(loaded_timestamp)\n                from {{ model }}\n            )\n        )\n\n        select count(*)\n        from validation_errors\n    {%- else -%}\n\n        select 0\n\n    {%- endif -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.DSR.test_unique": {"unique_id": "macro.DSR.test_unique", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "macros/test_unique.sql", "original_file_path": "macros/test_unique.sql", "name": "test_unique", "macro_sql": "{% macro test_unique(model) %}\n\n  {% set column_name = kwargs.get('column_name', kwargs.get('arg')) %}\n  {% set test_in_env = kwargs.get('env') %}\n\n  {#-\n  We should run this test when:\n  * the environment has not been specified OR,\n  * we are in the specified environment\n  -#}\n  {%- if test_in_env is none or target.name == test_in_env -%}\n    select count(*)\n    from (\n        select\n            {{ column_name }}\n        from {{ model }}\n        where {{ column_name }} is not null\n        group by {{ column_name }}\n        having count(*) > 1\n\n    ) validation_errors\n  {#-\n  We should skip this test otherwise, which we do by returning 0\n  -#}\n  {%- else -%}\n\n    select 0\n\n  {%- endif -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt_snowflake.snowflake__get_catalog": {"unique_id": "macro.dbt_snowflake.snowflake__get_catalog", "package_name": "dbt_snowflake", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/snowflake", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "name": "snowflake__get_catalog", "macro_sql": "{% macro snowflake__get_catalog(information_schema, schemas) -%}\n  {% set query %}\n      with tables as (\n\n          select\n              table_catalog as \"table_database\",\n              table_schema as \"table_schema\",\n              table_name as \"table_name\",\n              table_type as \"table_type\",\n              comment as \"table_comment\",\n\n              -- note: this is the _role_ that owns the table\n              table_owner as \"table_owner\",\n\n              'Clustering Key' as \"stats:clustering_key:label\",\n              clustering_key as \"stats:clustering_key:value\",\n              'The key used to cluster this table' as \"stats:clustering_key:description\",\n              (clustering_key is not null) as \"stats:clustering_key:include\",\n\n              'Row Count' as \"stats:row_count:label\",\n              row_count as \"stats:row_count:value\",\n              'An approximate count of rows in this table' as \"stats:row_count:description\",\n              (row_count is not null) as \"stats:row_count:include\",\n\n              'Approximate Size' as \"stats:bytes:label\",\n              bytes as \"stats:bytes:value\",\n              'Approximate size of the table as reported by Snowflake' as \"stats:bytes:description\",\n              (bytes is not null) as \"stats:bytes:include\",\n\n              'Last Modified' as \"stats:last_modified:label\",\n              to_varchar(convert_timezone('UTC', last_altered), 'yyyy-mm-dd HH24:MI'||'UTC') as \"stats:last_modified:value\",\n              'The timestamp for last update/change' as \"stats:last_modified:description\",\n              (last_altered is not null and table_type='BASE TABLE') as \"stats:last_modified:include\"\n\n          from {{ information_schema }}.tables\n\n      ),\n\n      columns as (\n\n          select\n              table_catalog as \"table_database\",\n              table_schema as \"table_schema\",\n              table_name as \"table_name\",\n\n              column_name as \"column_name\",\n              ordinal_position as \"column_index\",\n              data_type as \"column_type\",\n              comment as \"column_comment\"\n\n          from {{ information_schema }}.columns\n      )\n\n      select *\n      from tables\n      join columns using (\"table_database\", \"table_schema\", \"table_name\")\n      where (\n        {%- for schema in schemas -%}\n          upper(\"table_schema\") = upper('{{ schema }}'){%- if not loop.last %} or {% endif -%}\n        {%- endfor -%}\n      )\n      order by \"column_index\"\n    {%- endset -%}\n\n  {{ return(run_query(query)) }}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt_snowflake.snowflake__create_table_as": {"unique_id": "macro.dbt_snowflake.snowflake__create_table_as", "package_name": "dbt_snowflake", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "snowflake__create_table_as", "macro_sql": "{% macro snowflake__create_table_as(temporary, relation, sql) -%}\n  {%- set transient = config.get('transient', default=true) -%}\n  {%- set cluster_by_keys = config.get('cluster_by', default=none) -%}\n  {%- set enable_automatic_clustering = config.get('automatic_clustering', default=false) -%}\n  {%- set copy_grants = config.get('copy_grants', default=false) -%}\n\n  {%- if cluster_by_keys is not none and cluster_by_keys is string -%}\n    {%- set cluster_by_keys = [cluster_by_keys] -%}\n  {%- endif -%}\n  {%- if cluster_by_keys is not none -%}\n    {%- set cluster_by_string = cluster_by_keys|join(\", \")-%}\n  {% else %}\n    {%- set cluster_by_string = none -%}\n  {%- endif -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n\n      create or replace {% if temporary -%}\n        temporary\n      {%- elif transient -%}\n        transient\n      {%- endif %} table {{ relation }} {% if copy_grants and not temporary -%} copy grants {%- endif %} as\n      (\n        {%- if cluster_by_string is not none -%}\n          select * from(\n            {{ sql }}\n            ) order by ({{ cluster_by_string }})\n        {%- else -%}\n          {{ sql }}\n        {%- endif %}\n      );\n    {% if cluster_by_string is not none and not temporary -%}\n      alter table {{relation}} cluster by ({{cluster_by_string}});\n    {%- endif -%}\n    {% if enable_automatic_clustering and cluster_by_string is not none and not temporary  -%}\n      alter table {{relation}} resume recluster;\n    {%- endif -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt_snowflake.snowflake__create_view_as": {"unique_id": "macro.dbt_snowflake.snowflake__create_view_as", "package_name": "dbt_snowflake", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "snowflake__create_view_as", "macro_sql": "{% macro snowflake__create_view_as(relation, sql) -%}\n  {%- set secure = config.get('secure', default=false) -%}\n  {%- set copy_grants = config.get('copy_grants', default=false) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n  create or replace {% if secure -%}\n    secure\n  {%- endif %} view {{ relation }} {% if copy_grants -%} copy grants {%- endif %} as (\n    {{ sql }}\n  );\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt_snowflake.snowflake__get_columns_in_relation": {"unique_id": "macro.dbt_snowflake.snowflake__get_columns_in_relation", "package_name": "dbt_snowflake", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "snowflake__get_columns_in_relation", "macro_sql": "{% macro snowflake__get_columns_in_relation(relation) -%}\n  {%- set sql -%}\n    describe table {{ relation }}\n  {%- endset -%}\n  {%- set result = run_query(sql) -%}\n\n  {% set maximum = 10000 %}\n  {% if (result | length) >= maximum %}\n    {% set msg %}\n      Too many columns in relation {{ relation }}! dbt can only get\n      information about relations with fewer than {{ maximum }} columns.\n    {% endset %}\n    {% do exceptions.raise_compiler_error(msg) %}\n  {% endif %}\n\n  {% set columns = [] %}\n  {% for row in result %}\n    {% do columns.append(api.Column.from_description(row['name'], row['type'])) %}\n  {% endfor %}\n  {% do return(columns) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt_snowflake.snowflake__list_schemas": {"unique_id": "macro.dbt_snowflake.snowflake__list_schemas", "package_name": "dbt_snowflake", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "snowflake__list_schemas", "macro_sql": "{% macro snowflake__list_schemas(database) -%}\n  {# 10k limit from here: https://docs.snowflake.net/manuals/sql-reference/sql/show-schemas.html#usage-notes #}\n  {% set maximum = 10000 %}\n  {% set sql -%}\n    show terse schemas in database {{ database }}\n    limit {{ maximum }}\n  {%- endset %}\n  {% set result = run_query(sql) %}\n  {% if (result | length) >= maximum %}\n    {% set msg %}\n      Too many schemas in database {{ database }}! dbt can only get\n      information about databases with fewer than {{ maximum }} schemas.\n    {% endset %}\n    {% do exceptions.raise_compiler_error(msg) %}\n  {% endif %}\n  {{ return(result) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt_snowflake.snowflake__list_relations_without_caching": {"unique_id": "macro.dbt_snowflake.snowflake__list_relations_without_caching", "package_name": "dbt_snowflake", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "snowflake__list_relations_without_caching", "macro_sql": "{% macro snowflake__list_relations_without_caching(schema_relation) %}\n  {%- set sql -%}\n    show terse objects in {{ schema_relation }}\n  {%- endset -%}\n\n  {%- set result = run_query(sql) -%}\n  {% set maximum = 10000 %}\n  {% if (result | length) >= maximum %}\n    {% set msg %}\n      Too many schemas in schema  {{ schema_relation }}! dbt can only get\n      information about schemas with fewer than {{ maximum }} objects.\n    {% endset %}\n    {% do exceptions.raise_compiler_error(msg) %}\n  {% endif %}\n  {%- do return(result) -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt_snowflake.snowflake__check_schema_exists": {"unique_id": "macro.dbt_snowflake.snowflake__check_schema_exists", "package_name": "dbt_snowflake", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "snowflake__check_schema_exists", "macro_sql": "{% macro snowflake__check_schema_exists(information_schema, schema) -%}\n  {% call statement('check_schema_exists', fetch_result=True) -%}\n        select count(*)\n        from {{ information_schema }}.schemata\n        where upper(schema_name) = upper('{{ schema }}')\n            and upper(catalog_name) = upper('{{ information_schema.database }}')\n  {%- endcall %}\n  {{ return(load_result('check_schema_exists').table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt_snowflake.snowflake__current_timestamp": {"unique_id": "macro.dbt_snowflake.snowflake__current_timestamp", "package_name": "dbt_snowflake", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "snowflake__current_timestamp", "macro_sql": "{% macro snowflake__current_timestamp() -%}\n  convert_timezone('UTC', current_timestamp())\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt_snowflake.snowflake__snapshot_string_as_time": {"unique_id": "macro.dbt_snowflake.snowflake__snapshot_string_as_time", "package_name": "dbt_snowflake", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "snowflake__snapshot_string_as_time", "macro_sql": "{% macro snowflake__snapshot_string_as_time(timestamp) -%}\n    {%- set result = \"to_timestamp_ntz('\" ~ timestamp ~ \"')\" -%}\n    {{ return(result) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt_snowflake.snowflake__snapshot_get_time": {"unique_id": "macro.dbt_snowflake.snowflake__snapshot_get_time", "package_name": "dbt_snowflake", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "snowflake__snapshot_get_time", "macro_sql": "{% macro snowflake__snapshot_get_time() -%}\n  to_timestamp_ntz({{ current_timestamp() }})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt_snowflake.snowflake__rename_relation": {"unique_id": "macro.dbt_snowflake.snowflake__rename_relation", "package_name": "dbt_snowflake", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "snowflake__rename_relation", "macro_sql": "{% macro snowflake__rename_relation(from_relation, to_relation) -%}\n  {% call statement('rename_relation') -%}\n    alter table {{ from_relation }} rename to {{ to_relation }}\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt_snowflake.snowflake__alter_column_type": {"unique_id": "macro.dbt_snowflake.snowflake__alter_column_type", "package_name": "dbt_snowflake", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "snowflake__alter_column_type", "macro_sql": "{% macro snowflake__alter_column_type(relation, column_name, new_column_type) -%}\n  {% call statement('alter_column_type') %}\n    alter table {{ relation }} alter {{ adapter.quote(column_name) }} set data type {{ new_column_type }};\n  {% endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt_snowflake.snowflake__alter_relation_comment": {"unique_id": "macro.dbt_snowflake.snowflake__alter_relation_comment", "package_name": "dbt_snowflake", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "snowflake__alter_relation_comment", "macro_sql": "{% macro snowflake__alter_relation_comment(relation, relation_comment) -%}\n  comment on {{ relation.type }} {{ relation }} IS $${{ relation_comment | replace('$', '[$]') }}$$;\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt_snowflake.snowflake__alter_column_comment": {"unique_id": "macro.dbt_snowflake.snowflake__alter_column_comment", "package_name": "dbt_snowflake", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "snowflake__alter_column_comment", "macro_sql": "{% macro snowflake__alter_column_comment(relation, column_dict) -%}\n    {% set existing_columns = adapter.get_columns_in_relation(relation) | map(attribute=\"name\") | list %}\n    alter {{ relation.type }} {{ relation }} alter\n    {% for column_name in column_dict if (column_name in existing_columns) or (column_name|upper in existing_columns) %}\n        {{ adapter.quote(column_name) if column_dict[column_name]['quote'] else column_name }} COMMENT $${{ column_dict[column_name]['description'] | replace('$', '[$]') }}$$ {{ ',' if not loop.last else ';' }}\n    {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt_snowflake.get_current_query_tag": {"unique_id": "macro.dbt_snowflake.get_current_query_tag", "package_name": "dbt_snowflake", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "get_current_query_tag", "macro_sql": "{% macro get_current_query_tag() -%}\n  {{ return(run_query(\"show parameters like 'query_tag' in session\").rows[0]['value']) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt_snowflake.set_query_tag": {"unique_id": "macro.dbt_snowflake.set_query_tag", "package_name": "dbt_snowflake", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "set_query_tag", "macro_sql": "{% macro set_query_tag() -%}\n  {% set new_query_tag = config.get('query_tag') %}\n  {% if new_query_tag %}\n    {% set original_query_tag = get_current_query_tag() %}\n    {{ log(\"Setting query_tag to '\" ~ new_query_tag ~ \"'. Will reset to '\" ~ original_query_tag ~ \"' after materialization.\") }}\n    {% do run_query(\"alter session set query_tag = '{}'\".format(new_query_tag)) %}\n    {{ return(original_query_tag)}}\n  {% endif %}\n  {{ return(none)}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_snowflake.get_current_query_tag", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt_snowflake.unset_query_tag": {"unique_id": "macro.dbt_snowflake.unset_query_tag", "package_name": "dbt_snowflake", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "unset_query_tag", "macro_sql": "{% macro unset_query_tag(original_query_tag) -%}\n  {% set new_query_tag = config.get('query_tag') %}\n  {% if new_query_tag %}\n    {% if original_query_tag %}\n      {{ log(\"Resetting query_tag to '\" ~ original_query_tag ~ \"'.\") }}\n      {% do run_query(\"alter session set query_tag = '{}'\".format(original_query_tag)) %}\n    {% else %}\n      {{ log(\"No original query_tag, unsetting parameter.\") }}\n      {% do run_query(\"alter session unset query_tag\") %}\n    {% endif %}\n  {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt_snowflake.snowflake__get_merge_sql": {"unique_id": "macro.dbt_snowflake.snowflake__get_merge_sql", "package_name": "dbt_snowflake", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/snowflake", "path": "macros/materializations/merge.sql", "original_file_path": "macros/materializations/merge.sql", "name": "snowflake__get_merge_sql", "macro_sql": "{% macro snowflake__get_merge_sql(target, source_sql, unique_key, dest_columns, predicates) -%}\n\n    {#\n       Workaround for Snowflake not being happy with a merge on a constant-false predicate.\n       When no unique_key is provided, this macro will do a regular insert. If a unique_key\n       is provided, then this macro will do a proper merge instead.\n    #}\n\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute='name')) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {%- if unique_key is none -%}\n\n        {{ sql_header if sql_header is not none }}\n\n        insert into {{ target }} ({{ dest_cols_csv }})\n        (\n            select {{ dest_cols_csv }}\n            from {{ source_sql }}\n        );\n\n    {%- else -%}\n\n        {{ default__get_merge_sql(target, source_sql, unique_key, dest_columns, predicates) }}\n\n    {%- endif -%}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_quoted_csv", "macro.dbt.default__get_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt_snowflake.materialization_view_snowflake": {"unique_id": "macro.dbt_snowflake.materialization_view_snowflake", "package_name": "dbt_snowflake", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/snowflake", "path": "macros/materializations/view.sql", "original_file_path": "macros/materializations/view.sql", "name": "materialization_view_snowflake", "macro_sql": "{% materialization view, adapter='snowflake' -%}\n\n    {% set original_query_tag = set_query_tag() %}\n    {% set to_return = create_or_replace_view() %}\n\n    {% set target_relation = this.incorporate(type='view') %}\n    {% do persist_docs(target_relation, model, for_columns=false) %}\n\n    {% do return(to_return) %}\n\n    {% do unset_query_tag(original_query_tag) %}\n\n{%- endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt_snowflake.materialization_table_snowflake": {"unique_id": "macro.dbt_snowflake.materialization_table_snowflake", "package_name": "dbt_snowflake", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/snowflake", "path": "macros/materializations/table.sql", "original_file_path": "macros/materializations/table.sql", "name": "materialization_table_snowflake", "macro_sql": "{% materialization table, adapter='snowflake' %}\n\n  {% set original_query_tag = set_query_tag() %}\n\n  {%- set identifier = model['alias'] -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set target_relation = api.Relation.create(identifier=identifier,\n                                                schema=schema,\n                                                database=database, type='table') -%}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {#-- Drop the relation if it was a view to \"convert\" it in a table. This may lead to\n    -- downtime, but it should be a relatively infrequent occurrence  #}\n  {% if old_relation is not none and not old_relation.is_table %}\n    {{ log(\"Dropping relation \" ~ old_relation ~ \" because it is of type \" ~ old_relation.type) }}\n    {{ drop_relation_if_exists(old_relation) }}\n  {% endif %}\n\n  --build model\n  {% call statement('main') -%}\n    {{ create_table_as(false, target_relation, sql) }}\n  {%- endcall %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% do unset_query_tag(original_query_tag) %}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.drop_relation_if_exists", "macro.dbt.statement", "macro.dbt.create_table_as", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt_snowflake.dbt_snowflake_validate_get_incremental_strategy": {"unique_id": "macro.dbt_snowflake.dbt_snowflake_validate_get_incremental_strategy", "package_name": "dbt_snowflake", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/snowflake", "path": "macros/materializations/incremental.sql", "original_file_path": "macros/materializations/incremental.sql", "name": "dbt_snowflake_validate_get_incremental_strategy", "macro_sql": "{% macro dbt_snowflake_validate_get_incremental_strategy(config) %}\n  {#-- Find and validate the incremental strategy #}\n  {%- set strategy = config.get(\"incremental_strategy\", default=\"merge\") -%}\n\n  {% set invalid_strategy_msg -%}\n    Invalid incremental strategy provided: {{ strategy }}\n    Expected one of: 'merge', 'delete+insert'\n  {%- endset %}\n  {% if strategy not in ['merge', 'delete+insert'] %}\n    {% do exceptions.raise_compiler_error(invalid_strategy_msg) %}\n  {% endif %}\n\n  {% do return(strategy) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt_snowflake.dbt_snowflake_get_incremental_sql": {"unique_id": "macro.dbt_snowflake.dbt_snowflake_get_incremental_sql", "package_name": "dbt_snowflake", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/snowflake", "path": "macros/materializations/incremental.sql", "original_file_path": "macros/materializations/incremental.sql", "name": "dbt_snowflake_get_incremental_sql", "macro_sql": "{% macro dbt_snowflake_get_incremental_sql(strategy, tmp_relation, target_relation, unique_key, dest_columns) %}\n  {% if strategy == 'merge' %}\n    {% do return(get_merge_sql(target_relation, tmp_relation, unique_key, dest_columns)) %}\n  {% elif strategy == 'delete+insert' %}\n    {% do return(get_delete_insert_merge_sql(target_relation, tmp_relation, unique_key, dest_columns)) %}\n  {% else %}\n    {% do exceptions.raise_compiler_error('invalid strategy: ' ~ strategy) %}\n  {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_merge_sql", "macro.dbt.get_delete_insert_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt_snowflake.materialization_incremental_snowflake": {"unique_id": "macro.dbt_snowflake.materialization_incremental_snowflake", "package_name": "dbt_snowflake", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/snowflake", "path": "macros/materializations/incremental.sql", "original_file_path": "macros/materializations/incremental.sql", "name": "materialization_incremental_snowflake", "macro_sql": "{% materialization incremental, adapter='snowflake' -%}\n\n  {% set original_query_tag = set_query_tag() %}\n\n  {%- set unique_key = config.get('unique_key') -%}\n  {%- set full_refresh_mode = (should_full_refresh()) -%}\n\n  {% set target_relation = this %}\n  {% set existing_relation = load_relation(this) %}\n  {% set tmp_relation = make_temp_relation(this) %}\n\n  {#-- Validate early so we don't run SQL if the strategy is invalid --#}\n  {% set strategy = dbt_snowflake_validate_get_incremental_strategy(config) -%}\n\n  -- setup\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% if existing_relation is none %}\n    {% set build_sql = create_table_as(False, target_relation, sql) %}\n  {% elif existing_relation.is_view %}\n    {#-- Can't overwrite a view with a table - we must drop --#}\n    {{ log(\"Dropping relation \" ~ target_relation ~ \" because it is a view and this model is a table.\") }}\n    {% do adapter.drop_relation(existing_relation) %}\n    {% set build_sql = create_table_as(False, target_relation, sql) %}\n  {% elif full_refresh_mode %}\n    {% set build_sql = create_table_as(False, target_relation, sql) %}\n  {% else %}\n    {% do run_query(create_table_as(True, tmp_relation, sql)) %}\n    {% do adapter.expand_target_column_types(\n           from_relation=tmp_relation,\n           to_relation=target_relation) %}\n    {% set dest_columns = adapter.get_columns_in_relation(target_relation) %}\n    {% set build_sql = dbt_snowflake_get_incremental_sql(strategy, tmp_relation, target_relation, unique_key, dest_columns) %}\n  {% endif %}\n\n  {%- call statement('main') -%}\n    {{ build_sql }}\n  {%- endcall -%}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {% set target_relation = target_relation.incorporate(type='table') %}\n  {% do persist_docs(target_relation, model) %}\n\n  {% do unset_query_tag(original_query_tag) %}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.should_full_refresh", "macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt_snowflake.dbt_snowflake_validate_get_incremental_strategy", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt_snowflake.dbt_snowflake_get_incremental_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.statement": {"unique_id": "macro.dbt.statement", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/core.sql", "original_file_path": "macros/core.sql", "name": "statement", "macro_sql": "{% macro statement(name=None, fetch_result=False, auto_begin=True) -%}\n  {%- if execute: -%}\n    {%- set sql = caller() -%}\n\n    {%- if name == 'main' -%}\n      {{ log('Writing runtime SQL for node \"{}\"'.format(model['unique_id'])) }}\n      {{ write(sql) }}\n    {%- endif -%}\n\n    {%- set res, table = adapter.execute(sql, auto_begin=auto_begin, fetch=fetch_result) -%}\n    {%- if name is not none -%}\n      {{ store_result(name, response=res, agate_table=table) }}\n    {%- endif -%}\n\n  {%- endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.noop_statement": {"unique_id": "macro.dbt.noop_statement", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/core.sql", "original_file_path": "macros/core.sql", "name": "noop_statement", "macro_sql": "{% macro noop_statement(name=None, message=None, code=None, rows_affected=None, res=None) -%}\n  {%- set sql = caller() -%}\n\n  {%- if name == 'main' -%}\n    {{ log('Writing runtime SQL for node \"{}\"'.format(model['unique_id'])) }}\n    {{ write(sql) }}\n  {%- endif -%}\n\n  {%- if name is not none -%}\n    {{ store_raw_result(name, message=message, code=code, rows_affected=rows_affected, agate_table=res) }}\n  {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.get_test_sql": {"unique_id": "macro.dbt.get_test_sql", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/test.sql", "original_file_path": "macros/materializations/test.sql", "name": "get_test_sql", "macro_sql": "{% macro get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n  {{ adapter.dispatch('get_test_sql')(main_sql, fail_calc, warn_if, error_if, limit) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.default__get_test_sql": {"unique_id": "macro.dbt.default__get_test_sql", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/test.sql", "original_file_path": "macros/materializations/test.sql", "name": "default__get_test_sql", "macro_sql": "{% macro default__get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n    select\n      {{ fail_calc }} as failures,\n      {{ fail_calc }} {{ warn_if }} as should_warn,\n      {{ fail_calc }} {{ error_if }} as should_error\n    from (\n      {{ main_sql }}\n      {{ \"limit \" ~ limit if limit != none }}\n    ) dbt_internal_test\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.materialization_test_default": {"unique_id": "macro.dbt.materialization_test_default", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/test.sql", "original_file_path": "macros/materializations/test.sql", "name": "materialization_test_default", "macro_sql": "\n\n{%- materialization test, default -%}\n\n  {% set relations = [] %}\n\n  {% if should_store_failures() %}\n\n    {% set identifier = model['alias'] %}\n    {% set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n    {% set target_relation = api.Relation.create(\n        identifier=identifier, schema=schema, database=database, type='table') -%} %}\n    \n    {% if old_relation %}\n        {% do adapter.drop_relation(old_relation) %}\n    {% endif %}\n    \n    {% call statement(auto_begin=True) %}\n        {{ create_table_as(False, target_relation, sql) }}\n    {% endcall %}\n    \n    {% do relations.append(target_relation) %}\n  \n    {% set main_sql %}\n        select *\n        from {{ target_relation }}\n    {% endset %}\n    \n    {{ adapter.commit() }}\n  \n  {% else %}\n\n      {% set main_sql = sql %}\n  \n  {% endif %}\n\n  {% set limit = config.get('limit') %}\n  {% set fail_calc = config.get('fail_calc') %}\n  {% set warn_if = config.get('warn_if') %}\n  {% set error_if = config.get('error_if') %}\n\n  {% call statement('main', fetch_result=True) -%}\n\n    {{ get_test_sql(main_sql, fail_calc, warn_if, error_if, limit)}}\n\n  {%- endcall %}\n  \n  {{ return({'relations': relations}) }}\n\n{%- endmaterialization -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.should_store_failures", "macro.dbt.statement", "macro.dbt.create_table_as", "macro.dbt.get_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.run_hooks": {"unique_id": "macro.dbt.run_hooks", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/helpers.sql", "original_file_path": "macros/materializations/helpers.sql", "name": "run_hooks", "macro_sql": "{% macro run_hooks(hooks, inside_transaction=True) %}\n  {% for hook in hooks | selectattr('transaction', 'equalto', inside_transaction)  %}\n    {% if not inside_transaction and loop.first %}\n      {% call statement(auto_begin=inside_transaction) %}\n        commit;\n      {% endcall %}\n    {% endif %}\n    {% set rendered = render(hook.get('sql')) | trim %}\n    {% if (rendered | length) > 0 %}\n      {% call statement(auto_begin=inside_transaction) %}\n        {{ rendered }}\n      {% endcall %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.column_list": {"unique_id": "macro.dbt.column_list", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/helpers.sql", "original_file_path": "macros/materializations/helpers.sql", "name": "column_list", "macro_sql": "{% macro column_list(columns) %}\n  {%- for col in columns %}\n    {{ col.name }} {% if not loop.last %},{% endif %}\n  {% endfor -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.column_list_for_create_table": {"unique_id": "macro.dbt.column_list_for_create_table", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/helpers.sql", "original_file_path": "macros/materializations/helpers.sql", "name": "column_list_for_create_table", "macro_sql": "{% macro column_list_for_create_table(columns) %}\n  {%- for col in columns %}\n    {{ col.name }} {{ col.data_type }} {%- if not loop.last %},{% endif %}\n  {% endfor -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.make_hook_config": {"unique_id": "macro.dbt.make_hook_config", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/helpers.sql", "original_file_path": "macros/materializations/helpers.sql", "name": "make_hook_config", "macro_sql": "{% macro make_hook_config(sql, inside_transaction) %}\n    {{ tojson({\"sql\": sql, \"transaction\": inside_transaction}) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.before_begin": {"unique_id": "macro.dbt.before_begin", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/helpers.sql", "original_file_path": "macros/materializations/helpers.sql", "name": "before_begin", "macro_sql": "{% macro before_begin(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.in_transaction": {"unique_id": "macro.dbt.in_transaction", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/helpers.sql", "original_file_path": "macros/materializations/helpers.sql", "name": "in_transaction", "macro_sql": "{% macro in_transaction(sql) %}\n    {{ make_hook_config(sql, inside_transaction=True) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.after_commit": {"unique_id": "macro.dbt.after_commit", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/helpers.sql", "original_file_path": "macros/materializations/helpers.sql", "name": "after_commit", "macro_sql": "{% macro after_commit(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.drop_relation_if_exists": {"unique_id": "macro.dbt.drop_relation_if_exists", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/helpers.sql", "original_file_path": "macros/materializations/helpers.sql", "name": "drop_relation_if_exists", "macro_sql": "{% macro drop_relation_if_exists(relation) %}\n  {% if relation is not none %}\n    {{ adapter.drop_relation(relation) }}\n  {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.load_relation": {"unique_id": "macro.dbt.load_relation", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/helpers.sql", "original_file_path": "macros/materializations/helpers.sql", "name": "load_relation", "macro_sql": "{% macro load_relation(relation) %}\n  {% do return(adapter.get_relation(\n    database=relation.database,\n    schema=relation.schema,\n    identifier=relation.identifier\n  )) -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.should_full_refresh": {"unique_id": "macro.dbt.should_full_refresh", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/helpers.sql", "original_file_path": "macros/materializations/helpers.sql", "name": "should_full_refresh", "macro_sql": "{% macro should_full_refresh() %}\n  {% set config_full_refresh = config.get('full_refresh') %}\n  {% if config_full_refresh is none %}\n    {% set config_full_refresh = flags.FULL_REFRESH %}\n  {% endif %}\n  {% do return(config_full_refresh) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.should_store_failures": {"unique_id": "macro.dbt.should_store_failures", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/helpers.sql", "original_file_path": "macros/materializations/helpers.sql", "name": "should_store_failures", "macro_sql": "{% macro should_store_failures() %}\n  {% set config_store_failures = config.get('store_failures') %}\n  {% if config_store_failures is none %}\n    {% set config_store_failures = flags.STORE_FAILURES %}\n  {% endif %}\n  {% do return(config_store_failures) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.snapshot_merge_sql": {"unique_id": "macro.dbt.snapshot_merge_sql", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshot/snapshot_merge.sql", "name": "snapshot_merge_sql", "macro_sql": "{% macro snapshot_merge_sql(target, source, insert_cols) -%}\n  {{ adapter.dispatch('snapshot_merge_sql')(target, source, insert_cols) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__snapshot_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.default__snapshot_merge_sql": {"unique_id": "macro.dbt.default__snapshot_merge_sql", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshot/snapshot_merge.sql", "name": "default__snapshot_merge_sql", "macro_sql": "{% macro default__snapshot_merge_sql(target, source, insert_cols) -%}\n    {%- set insert_cols_csv = insert_cols | join(', ') -%}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n    using {{ source }} as DBT_INTERNAL_SOURCE\n    on DBT_INTERNAL_SOURCE.dbt_scd_id = DBT_INTERNAL_DEST.dbt_scd_id\n\n    when matched\n     and DBT_INTERNAL_DEST.dbt_valid_to is null\n     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')\n        then update\n        set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to\n\n    when not matched\n     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'\n        then insert ({{ insert_cols_csv }})\n        values ({{ insert_cols_csv }})\n    ;\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.strategy_dispatch": {"unique_id": "macro.dbt.strategy_dispatch", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/strategies.sql", "original_file_path": "macros/materializations/snapshot/strategies.sql", "name": "strategy_dispatch", "macro_sql": "{% macro strategy_dispatch(name) -%}\n{% set original_name = name %}\n  {% if '.' in name %}\n    {% set package_name, name = name.split(\".\", 1) %}\n  {% else %}\n    {% set package_name = none %}\n  {% endif %}\n\n  {% if package_name is none %}\n    {% set package_context = context %}\n  {% elif package_name in context %}\n    {% set package_context = context[package_name] %}\n  {% else %}\n    {% set error_msg %}\n        Could not find package '{{package_name}}', called with '{{original_name}}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n\n  {%- set search_name = 'snapshot_' ~ name ~ '_strategy' -%}\n\n  {% if search_name not in package_context %}\n    {% set error_msg %}\n        The specified strategy macro '{{name}}' was not found in package '{{ package_name }}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n  {{ return(package_context[search_name]) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.snapshot_hash_arguments": {"unique_id": "macro.dbt.snapshot_hash_arguments", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/strategies.sql", "original_file_path": "macros/materializations/snapshot/strategies.sql", "name": "snapshot_hash_arguments", "macro_sql": "{% macro snapshot_hash_arguments(args) -%}\n  {{ adapter.dispatch('snapshot_hash_arguments')(args) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.default__snapshot_hash_arguments": {"unique_id": "macro.dbt.default__snapshot_hash_arguments", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/strategies.sql", "original_file_path": "macros/materializations/snapshot/strategies.sql", "name": "default__snapshot_hash_arguments", "macro_sql": "{% macro default__snapshot_hash_arguments(args) -%}\n    md5({%- for arg in args -%}\n        coalesce(cast({{ arg }} as varchar ), '')\n        {% if not loop.last %} || '|' || {% endif %}\n    {%- endfor -%})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.snapshot_get_time": {"unique_id": "macro.dbt.snapshot_get_time", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/strategies.sql", "original_file_path": "macros/materializations/snapshot/strategies.sql", "name": "snapshot_get_time", "macro_sql": "{% macro snapshot_get_time() -%}\n  {{ adapter.dispatch('snapshot_get_time')() }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__snapshot_get_time"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.default__snapshot_get_time": {"unique_id": "macro.dbt.default__snapshot_get_time", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/strategies.sql", "original_file_path": "macros/materializations/snapshot/strategies.sql", "name": "default__snapshot_get_time", "macro_sql": "{% macro default__snapshot_get_time() -%}\n  {{ current_timestamp() }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.snapshot_timestamp_strategy": {"unique_id": "macro.dbt.snapshot_timestamp_strategy", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/strategies.sql", "original_file_path": "macros/materializations/snapshot/strategies.sql", "name": "snapshot_timestamp_strategy", "macro_sql": "{% macro snapshot_timestamp_strategy(node, snapshotted_rel, current_rel, config, target_exists) %}\n    {% set primary_key = config['unique_key'] %}\n    {% set updated_at = config['updated_at'] %}\n    {% set invalidate_hard_deletes = config.get('invalidate_hard_deletes', false) %}\n\n    {#/*\n        The snapshot relation might not have an {{ updated_at }} value if the\n        snapshot strategy is changed from `check` to `timestamp`. We\n        should use a dbt-created column for the comparison in the snapshot\n        table instead of assuming that the user-supplied {{ updated_at }}\n        will be present in the historical data.\n\n        See https://github.com/fishtown-analytics/dbt/issues/2350\n    */ #}\n    {% set row_changed_expr -%}\n        ({{ snapshotted_rel }}.dbt_valid_from < {{ current_rel }}.{{ updated_at }})\n    {%- endset %}\n\n    {% set scd_id_expr = snapshot_hash_arguments([primary_key, updated_at]) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes\n    }) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.snapshot_string_as_time": {"unique_id": "macro.dbt.snapshot_string_as_time", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/strategies.sql", "original_file_path": "macros/materializations/snapshot/strategies.sql", "name": "snapshot_string_as_time", "macro_sql": "{% macro snapshot_string_as_time(timestamp) -%}\n    {{ adapter.dispatch('snapshot_string_as_time')(timestamp) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__snapshot_string_as_time"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.default__snapshot_string_as_time": {"unique_id": "macro.dbt.default__snapshot_string_as_time", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/strategies.sql", "original_file_path": "macros/materializations/snapshot/strategies.sql", "name": "default__snapshot_string_as_time", "macro_sql": "{% macro default__snapshot_string_as_time(timestamp) %}\n    {% do exceptions.raise_not_implemented(\n        'snapshot_string_as_time macro not implemented for adapter '+adapter.type()\n    ) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.snapshot_check_all_get_existing_columns": {"unique_id": "macro.dbt.snapshot_check_all_get_existing_columns", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/strategies.sql", "original_file_path": "macros/materializations/snapshot/strategies.sql", "name": "snapshot_check_all_get_existing_columns", "macro_sql": "{% macro snapshot_check_all_get_existing_columns(node, target_exists) -%}\n    {%- set query_columns = get_columns_in_query(node['compiled_sql']) -%}\n    {%- if not target_exists -%}\n        {# no table yet -> return whatever the query does #}\n        {{ return([false, query_columns]) }}\n    {%- endif -%}\n    {# handle any schema changes #}\n    {%- set target_table = node.get('alias', node.get('name')) -%}\n    {%- set target_relation = adapter.get_relation(database=node.database, schema=node.schema, identifier=target_table) -%}\n    {%- set existing_cols = get_columns_in_query('select * from ' ~ target_relation) -%}\n    {%- set ns = namespace() -%} {# handle for-loop scoping with a namespace #}\n    {%- set ns.column_added = false -%}\n\n    {%- set intersection = [] -%}\n    {%- for col in query_columns -%}\n        {%- if col in existing_cols -%}\n            {%- do intersection.append(col) -%}\n        {%- else -%}\n            {% set ns.column_added = true %}\n        {%- endif -%}\n    {%- endfor -%}\n    {{ return([ns.column_added, intersection]) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.snapshot_check_strategy": {"unique_id": "macro.dbt.snapshot_check_strategy", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/strategies.sql", "original_file_path": "macros/materializations/snapshot/strategies.sql", "name": "snapshot_check_strategy", "macro_sql": "{% macro snapshot_check_strategy(node, snapshotted_rel, current_rel, config, target_exists) %}\n    {% set check_cols_config = config['check_cols'] %}\n    {% set primary_key = config['unique_key'] %}\n    {% set invalidate_hard_deletes = config.get('invalidate_hard_deletes', false) %}\n    \n    {% set select_current_time -%}\n        select {{ snapshot_get_time() }} as snapshot_start\n    {%- endset %}\n\n    {#-- don't access the column by name, to avoid dealing with casing issues on snowflake #}\n    {%- set now = run_query(select_current_time)[0][0] -%}\n    {% if now is none or now is undefined -%}\n        {%- do exceptions.raise_compiler_error('Could not get a snapshot start time from the database') -%}\n    {%- endif %}\n    {% set updated_at = config.get('updated_at', snapshot_string_as_time(now)) %}\n\n    {% set column_added = false %}\n\n    {% if check_cols_config == 'all' %}\n        {% set column_added, check_cols = snapshot_check_all_get_existing_columns(node, target_exists) %}\n    {% elif check_cols_config is iterable and (check_cols_config | length) > 0 %}\n        {% set check_cols = check_cols_config %}\n    {% else %}\n        {% do exceptions.raise_compiler_error(\"Invalid value for 'check_cols': \" ~ check_cols_config) %}\n    {% endif %}\n\n    {%- set row_changed_expr -%}\n    (\n    {%- if column_added -%}\n        TRUE\n    {%- else -%}\n    {%- for col in check_cols -%}\n        {{ snapshotted_rel }}.{{ col }} != {{ current_rel }}.{{ col }}\n        or\n        (\n            (({{ snapshotted_rel }}.{{ col }} is null) and not ({{ current_rel }}.{{ col }} is null))\n            or\n            ((not {{ snapshotted_rel }}.{{ col }} is null) and ({{ current_rel }}.{{ col }} is null))\n        )\n        {%- if not loop.last %} or {% endif -%}\n    {%- endfor -%}\n    {%- endif -%}\n    )\n    {%- endset %}\n\n    {% set scd_id_expr = snapshot_hash_arguments([primary_key, updated_at]) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes\n    }) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.snapshot_get_time", "macro.dbt.run_query", "macro.dbt.snapshot_string_as_time", "macro.dbt.snapshot_check_all_get_existing_columns", "macro.dbt.snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.create_columns": {"unique_id": "macro.dbt.create_columns", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/snapshot.sql", "original_file_path": "macros/materializations/snapshot/snapshot.sql", "name": "create_columns", "macro_sql": "{% macro create_columns(relation, columns) %}\n  {{ adapter.dispatch('create_columns')(relation, columns) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__create_columns"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.default__create_columns": {"unique_id": "macro.dbt.default__create_columns", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/snapshot.sql", "original_file_path": "macros/materializations/snapshot/snapshot.sql", "name": "default__create_columns", "macro_sql": "{% macro default__create_columns(relation, columns) %}\n  {% for column in columns %}\n    {% call statement() %}\n      alter table {{ relation }} add column \"{{ column.name }}\" {{ column.data_type }};\n    {% endcall %}\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.post_snapshot": {"unique_id": "macro.dbt.post_snapshot", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/snapshot.sql", "original_file_path": "macros/materializations/snapshot/snapshot.sql", "name": "post_snapshot", "macro_sql": "{% macro post_snapshot(staging_relation) %}\n  {{ adapter.dispatch('post_snapshot')(staging_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.default__post_snapshot": {"unique_id": "macro.dbt.default__post_snapshot", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/snapshot.sql", "original_file_path": "macros/materializations/snapshot/snapshot.sql", "name": "default__post_snapshot", "macro_sql": "{% macro default__post_snapshot(staging_relation) %}\n    {# no-op #}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.snapshot_staging_table": {"unique_id": "macro.dbt.snapshot_staging_table", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/snapshot.sql", "original_file_path": "macros/materializations/snapshot/snapshot.sql", "name": "snapshot_staging_table", "macro_sql": "{% macro snapshot_staging_table(strategy, source_sql, target_relation) -%}\n\n    with snapshot_query as (\n\n        {{ source_sql }}\n\n    ),\n\n    snapshotted_data as (\n\n        select *,\n            {{ strategy.unique_key }} as dbt_unique_key\n\n        from {{ target_relation }}\n        where dbt_valid_to is null\n\n    ),\n\n    insertions_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key,\n            {{ strategy.updated_at }} as dbt_updated_at,\n            {{ strategy.updated_at }} as dbt_valid_from,\n            nullif({{ strategy.updated_at }}, {{ strategy.updated_at }}) as dbt_valid_to,\n            {{ strategy.scd_id }} as dbt_scd_id\n\n        from snapshot_query\n    ),\n\n    updates_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key,\n            {{ strategy.updated_at }} as dbt_updated_at,\n            {{ strategy.updated_at }} as dbt_valid_from,\n            {{ strategy.updated_at }} as dbt_valid_to\n\n        from snapshot_query\n    ),\n\n    {%- if strategy.invalidate_hard_deletes %}\n\n    deletes_source_data as (\n\n        select \n            *,\n            {{ strategy.unique_key }} as dbt_unique_key\n        from snapshot_query\n    ),\n    {% endif %}\n\n    insertions as (\n\n        select\n            'insert' as dbt_change_type,\n            source_data.*\n\n        from insertions_source_data as source_data\n        left outer join snapshotted_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where snapshotted_data.dbt_unique_key is null\n           or (\n                snapshotted_data.dbt_unique_key is not null\n            and (\n                {{ strategy.row_changed }}\n            )\n        )\n\n    ),\n\n    updates as (\n\n        select\n            'update' as dbt_change_type,\n            source_data.*,\n            snapshotted_data.dbt_scd_id\n\n        from updates_source_data as source_data\n        join snapshotted_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where (\n            {{ strategy.row_changed }}\n        )\n    )\n\n    {%- if strategy.invalidate_hard_deletes -%}\n    ,\n\n    deletes as (\n    \n        select\n            'delete' as dbt_change_type,\n            source_data.*,\n            {{ snapshot_get_time() }} as dbt_valid_from,\n            {{ snapshot_get_time() }} as dbt_updated_at,\n            {{ snapshot_get_time() }} as dbt_valid_to,\n            snapshotted_data.dbt_scd_id\n    \n        from snapshotted_data\n        left join deletes_source_data as source_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where source_data.dbt_unique_key is null\n    )\n    {%- endif %}\n\n    select * from insertions\n    union all\n    select * from updates\n    {%- if strategy.invalidate_hard_deletes %}\n    union all\n    select * from deletes\n    {%- endif %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.snapshot_get_time"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.build_snapshot_table": {"unique_id": "macro.dbt.build_snapshot_table", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/snapshot.sql", "original_file_path": "macros/materializations/snapshot/snapshot.sql", "name": "build_snapshot_table", "macro_sql": "{% macro build_snapshot_table(strategy, sql) %}\n\n    select *,\n        {{ strategy.scd_id }} as dbt_scd_id,\n        {{ strategy.updated_at }} as dbt_updated_at,\n        {{ strategy.updated_at }} as dbt_valid_from,\n        nullif({{ strategy.updated_at }}, {{ strategy.updated_at }}) as dbt_valid_to\n    from (\n        {{ sql }}\n    ) sbq\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.get_or_create_relation": {"unique_id": "macro.dbt.get_or_create_relation", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/snapshot.sql", "original_file_path": "macros/materializations/snapshot/snapshot.sql", "name": "get_or_create_relation", "macro_sql": "{% macro get_or_create_relation(database, schema, identifier, type) %}\n  {%- set target_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n\n  {% if target_relation %}\n    {% do return([true, target_relation]) %}\n  {% endif %}\n\n  {%- set new_relation = api.Relation.create(\n      database=database,\n      schema=schema,\n      identifier=identifier,\n      type=type\n  ) -%}\n  {% do return([false, new_relation]) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.build_snapshot_staging_table": {"unique_id": "macro.dbt.build_snapshot_staging_table", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/snapshot.sql", "original_file_path": "macros/materializations/snapshot/snapshot.sql", "name": "build_snapshot_staging_table", "macro_sql": "{% macro build_snapshot_staging_table(strategy, sql, target_relation) %}\n    {% set tmp_relation = make_temp_relation(target_relation) %}\n\n    {% set select = snapshot_staging_table(strategy, sql, target_relation) %}\n\n    {% call statement('build_snapshot_staging_relation') %}\n        {{ create_table_as(True, tmp_relation, select) }}\n    {% endcall %}\n\n    {% do return(tmp_relation) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_temp_relation", "macro.dbt.snapshot_staging_table", "macro.dbt.statement", "macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.materialization_snapshot_default": {"unique_id": "macro.dbt.materialization_snapshot_default", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/snapshot.sql", "original_file_path": "macros/materializations/snapshot/snapshot.sql", "name": "materialization_snapshot_default", "macro_sql": "{% materialization snapshot, default %}\n  {%- set config = model['config'] -%}\n\n  {%- set target_table = model.get('alias', model.get('name')) -%}\n\n  {%- set strategy_name = config.get('strategy') -%}\n  {%- set unique_key = config.get('unique_key') %}\n\n  {% if not adapter.check_schema_exists(model.database, model.schema) %}\n    {% do create_schema(model.database, model.schema) %}\n  {% endif %}\n\n  {% set target_relation_exists, target_relation = get_or_create_relation(\n          database=model.database,\n          schema=model.schema,\n          identifier=target_table,\n          type='table') -%}\n\n  {%- if not target_relation.is_table -%}\n    {% do exceptions.relation_wrong_type(target_relation, 'table') %}\n  {%- endif -%}\n\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set strategy_macro = strategy_dispatch(strategy_name) %}\n  {% set strategy = strategy_macro(model, \"snapshotted_data\", \"source_data\", config, target_relation_exists) %}\n\n  {% if not target_relation_exists %}\n\n      {% set build_sql = build_snapshot_table(strategy, model['compiled_sql']) %}\n      {% set final_sql = create_table_as(False, target_relation, build_sql) %}\n\n  {% else %}\n\n      {{ adapter.valid_snapshot_target(target_relation) }}\n\n      {% set staging_table = build_snapshot_staging_table(strategy, sql, target_relation) %}\n\n      -- this may no-op if the database does not require column expansion\n      {% do adapter.expand_target_column_types(from_relation=staging_table,\n                                               to_relation=target_relation) %}\n\n      {% set missing_columns = adapter.get_missing_columns(staging_table, target_relation)\n                                   | rejectattr('name', 'equalto', 'dbt_change_type')\n                                   | rejectattr('name', 'equalto', 'DBT_CHANGE_TYPE')\n                                   | rejectattr('name', 'equalto', 'dbt_unique_key')\n                                   | rejectattr('name', 'equalto', 'DBT_UNIQUE_KEY')\n                                   | list %}\n\n      {% do create_columns(target_relation, missing_columns) %}\n\n      {% set source_columns = adapter.get_columns_in_relation(staging_table)\n                                   | rejectattr('name', 'equalto', 'dbt_change_type')\n                                   | rejectattr('name', 'equalto', 'DBT_CHANGE_TYPE')\n                                   | rejectattr('name', 'equalto', 'dbt_unique_key')\n                                   | rejectattr('name', 'equalto', 'DBT_UNIQUE_KEY')\n                                   | list %}\n\n      {% set quoted_source_columns = [] %}\n      {% for column in source_columns %}\n        {% do quoted_source_columns.append(adapter.quote(column.name)) %}\n      {% endfor %}\n\n      {% set final_sql = snapshot_merge_sql(\n            target = target_relation,\n            source = staging_table,\n            insert_cols = quoted_source_columns\n         )\n      %}\n\n  {% endif %}\n\n  {% call statement('main') %}\n      {{ final_sql }}\n  {% endcall %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if not target_relation_exists %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {% if staging_table is defined %}\n      {% do post_snapshot(staging_table) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.create_schema", "macro.dbt.get_or_create_relation", "macro.dbt.run_hooks", "macro.dbt.strategy_dispatch", "macro.dbt.build_snapshot_table", "macro.dbt.create_table_as", "macro.dbt.build_snapshot_staging_table", "macro.dbt.create_columns", "macro.dbt.snapshot_merge_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt.create_indexes", "macro.dbt.post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.create_csv_table": {"unique_id": "macro.dbt.create_csv_table", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/seed/seed.sql", "original_file_path": "macros/materializations/seed/seed.sql", "name": "create_csv_table", "macro_sql": "{% macro create_csv_table(model, agate_table) -%}\n  {{ adapter.dispatch('create_csv_table')(model, agate_table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__create_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.reset_csv_table": {"unique_id": "macro.dbt.reset_csv_table", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/seed/seed.sql", "original_file_path": "macros/materializations/seed/seed.sql", "name": "reset_csv_table", "macro_sql": "{% macro reset_csv_table(model, full_refresh, old_relation, agate_table) -%}\n  {{ adapter.dispatch('reset_csv_table')(model, full_refresh, old_relation, agate_table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__reset_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.load_csv_rows": {"unique_id": "macro.dbt.load_csv_rows", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/seed/seed.sql", "original_file_path": "macros/materializations/seed/seed.sql", "name": "load_csv_rows", "macro_sql": "{% macro load_csv_rows(model, agate_table) -%}\n  {{ adapter.dispatch('load_csv_rows')(model, agate_table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__load_csv_rows"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.default__create_csv_table": {"unique_id": "macro.dbt.default__create_csv_table", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/seed/seed.sql", "original_file_path": "macros/materializations/seed/seed.sql", "name": "default__create_csv_table", "macro_sql": "{% macro default__create_csv_table(model, agate_table) %}\n  {%- set column_override = model['config'].get('column_types', {}) -%}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n\n  {% set sql %}\n    create table {{ this.render() }} (\n        {%- for col_name in agate_table.column_names -%}\n            {%- set inferred_type = adapter.convert_type(agate_table, loop.index0) -%}\n            {%- set type = column_override.get(col_name, inferred_type) -%}\n            {%- set column_name = (col_name | string) -%}\n            {{ adapter.quote_seed_column(column_name, quote_seed_column) }} {{ type }} {%- if not loop.last -%}, {%- endif -%}\n        {%- endfor -%}\n    )\n  {% endset %}\n\n  {% call statement('_') -%}\n    {{ sql }}\n  {%- endcall %}\n\n  {{ return(sql) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.default__reset_csv_table": {"unique_id": "macro.dbt.default__reset_csv_table", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/seed/seed.sql", "original_file_path": "macros/materializations/seed/seed.sql", "name": "default__reset_csv_table", "macro_sql": "{% macro default__reset_csv_table(model, full_refresh, old_relation, agate_table) %}\n    {% set sql = \"\" %}\n    {% if full_refresh %}\n        {{ adapter.drop_relation(old_relation) }}\n        {% set sql = create_csv_table(model, agate_table) %}\n    {% else %}\n        {{ adapter.truncate_relation(old_relation) }}\n        {% set sql = \"truncate table \" ~ old_relation %}\n    {% endif %}\n\n    {{ return(sql) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.create_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.get_seed_column_quoted_csv": {"unique_id": "macro.dbt.get_seed_column_quoted_csv", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/seed/seed.sql", "original_file_path": "macros/materializations/seed/seed.sql", "name": "get_seed_column_quoted_csv", "macro_sql": "{% macro get_seed_column_quoted_csv(model, column_names) %}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote_seed_column(col, quote_seed_column)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.basic_load_csv_rows": {"unique_id": "macro.dbt.basic_load_csv_rows", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/seed/seed.sql", "original_file_path": "macros/materializations/seed/seed.sql", "name": "basic_load_csv_rows", "macro_sql": "{% macro basic_load_csv_rows(model, batch_size, agate_table) %}\n    {% set cols_sql = get_seed_column_quoted_csv(model, agate_table.column_names) %}\n    {% set bindings = [] %}\n\n    {% set statements = [] %}\n\n    {% for chunk in agate_table.rows | batch(batch_size) %}\n        {% set bindings = [] %}\n\n        {% for row in chunk %}\n            {% do bindings.extend(row) %}\n        {% endfor %}\n\n        {% set sql %}\n            insert into {{ this.render() }} ({{ cols_sql }}) values\n            {% for row in chunk -%}\n                ({%- for column in agate_table.column_names -%}\n                    %s\n                    {%- if not loop.last%},{%- endif %}\n                {%- endfor -%})\n                {%- if not loop.last%},{%- endif %}\n            {%- endfor %}\n        {% endset %}\n\n        {% do adapter.add_query(sql, bindings=bindings, abridge_sql_log=True) %}\n\n        {% if loop.index0 == 0 %}\n            {% do statements.append(sql) %}\n        {% endif %}\n    {% endfor %}\n\n    {# Return SQL so we can render it out into the compiled files #}\n    {{ return(statements[0]) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_seed_column_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.default__load_csv_rows": {"unique_id": "macro.dbt.default__load_csv_rows", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/seed/seed.sql", "original_file_path": "macros/materializations/seed/seed.sql", "name": "default__load_csv_rows", "macro_sql": "{% macro default__load_csv_rows(model, agate_table) %}\n  {{ return(basic_load_csv_rows(model, 10000, agate_table) )}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.basic_load_csv_rows"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.materialization_seed_default": {"unique_id": "macro.dbt.materialization_seed_default", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/seed/seed.sql", "original_file_path": "macros/materializations/seed/seed.sql", "name": "materialization_seed_default", "macro_sql": "{% materialization seed, default %}\n\n  {%- set identifier = model['alias'] -%}\n  {%- set full_refresh_mode = (should_full_refresh()) -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n\n  {%- set exists_as_table = (old_relation is not none and old_relation.is_table) -%}\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set agate_table = load_agate_table() -%}\n  {%- do store_result('agate_table', response='OK', agate_table=agate_table) -%}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% set create_table_sql = \"\" %}\n  {% if exists_as_view %}\n    {{ exceptions.raise_compiler_error(\"Cannot seed to '{}', it is a view\".format(old_relation)) }}\n  {% elif exists_as_table %}\n    {% set create_table_sql = reset_csv_table(model, full_refresh_mode, old_relation, agate_table) %}\n  {% else %}\n    {% set create_table_sql = create_csv_table(model, agate_table) %}\n  {% endif %}\n\n  {% set code = 'CREATE' if full_refresh_mode else 'INSERT' %}\n  {% set rows_affected = (agate_table.rows | length) %}\n  {% set sql = load_csv_rows(model, agate_table) %}\n\n  {% call noop_statement('main', code ~ ' ' ~ rows_affected, code, rows_affected) %}\n    {{ create_table_sql }};\n    -- dbt seed --\n    {{ sql }}\n  {% endcall %}\n\n  {% set target_relation = this.incorporate(type='table') %}\n  {% do persist_docs(target_relation, model) %}\n\n  {% if full_refresh_mode or not exists_as_table %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.should_full_refresh", "macro.dbt.run_hooks", "macro.dbt.reset_csv_table", "macro.dbt.create_csv_table", "macro.dbt.load_csv_rows", "macro.dbt.noop_statement", "macro.dbt.persist_docs", "macro.dbt.create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.incremental_upsert": {"unique_id": "macro.dbt.incremental_upsert", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/incremental/helpers.sql", "original_file_path": "macros/materializations/incremental/helpers.sql", "name": "incremental_upsert", "macro_sql": "{% macro incremental_upsert(tmp_relation, target_relation, unique_key=none, statement_name=\"main\") %}\n    {%- set dest_columns = adapter.get_columns_in_relation(target_relation) -%}\n    {%- set dest_cols_csv = dest_columns | map(attribute='quoted') | join(', ') -%}\n\n    {%- if unique_key is not none -%}\n    delete\n    from {{ target_relation }}\n    where ({{ unique_key }}) in (\n        select ({{ unique_key }})\n        from {{ tmp_relation }}\n    );\n    {%- endif %}\n\n    insert into {{ target_relation }} ({{ dest_cols_csv }})\n    (\n       select {{ dest_cols_csv }}\n       from {{ tmp_relation }}\n    );\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.materialization_incremental_default": {"unique_id": "macro.dbt.materialization_incremental_default", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/incremental/incremental.sql", "original_file_path": "macros/materializations/incremental/incremental.sql", "name": "materialization_incremental_default", "macro_sql": "{% materialization incremental, default -%}\n\n  {% set unique_key = config.get('unique_key') %}\n\n  {% set target_relation = this.incorporate(type='table') %}\n  {% set existing_relation = load_relation(this) %}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set to_drop = [] %}\n  {% if existing_relation is none %}\n      {% set build_sql = create_table_as(False, target_relation, sql) %}\n  {% elif existing_relation.is_view or should_full_refresh() %}\n      {#-- Make sure the backup doesn't exist so we don't encounter issues with the rename below #}\n      {% set tmp_identifier = model['name'] + '__dbt_tmp' %}\n      {% set backup_identifier = model['name'] + \"__dbt_backup\" %}\n\n      {% set intermediate_relation = existing_relation.incorporate(path={\"identifier\": tmp_identifier}) %}\n      {% set backup_relation = existing_relation.incorporate(path={\"identifier\": backup_identifier}) %}\n\n      {% do adapter.drop_relation(intermediate_relation) %}\n      {% do adapter.drop_relation(backup_relation) %}\n\n      {% set build_sql = create_table_as(False, intermediate_relation, sql) %}\n      {% set need_swap = true %}\n      {% do to_drop.append(backup_relation) %}\n  {% else %}\n      {% set tmp_relation = make_temp_relation(target_relation) %}\n      {% do run_query(create_table_as(True, tmp_relation, sql)) %}\n      {% do adapter.expand_target_column_types(\n             from_relation=tmp_relation,\n             to_relation=target_relation) %}\n      {% set build_sql = incremental_upsert(tmp_relation, target_relation, unique_key=unique_key) %}\n  {% endif %}\n\n  {% call statement(\"main\") %}\n      {{ build_sql }}\n  {% endcall %}\n\n  {% if need_swap %} \n      {% do adapter.rename_relation(target_relation, backup_relation) %} \n      {% do adapter.rename_relation(intermediate_relation, target_relation) %} \n  {% endif %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if existing_relation is none or existing_relation.is_view or should_full_refresh() %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {% do adapter.commit() %}\n\n  {% for rel in to_drop %}\n      {% do adapter.drop_relation(rel) %}\n  {% endfor %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.load_relation", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.should_full_refresh", "macro.dbt.make_temp_relation", "macro.dbt.run_query", "macro.dbt.incremental_upsert", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt.create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.get_merge_sql": {"unique_id": "macro.dbt.get_merge_sql", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/common/merge.sql", "original_file_path": "macros/materializations/common/merge.sql", "name": "get_merge_sql", "macro_sql": "{% macro get_merge_sql(target, source, unique_key, dest_columns, predicates=none) -%}\n  {{ adapter.dispatch('get_merge_sql')(target, source, unique_key, dest_columns, predicates) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.get_delete_insert_merge_sql": {"unique_id": "macro.dbt.get_delete_insert_merge_sql", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/common/merge.sql", "original_file_path": "macros/materializations/common/merge.sql", "name": "get_delete_insert_merge_sql", "macro_sql": "{% macro get_delete_insert_merge_sql(target, source, unique_key, dest_columns) -%}\n  {{ adapter.dispatch('get_delete_insert_merge_sql')(target, source, unique_key, dest_columns) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_delete_insert_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.get_insert_overwrite_merge_sql": {"unique_id": "macro.dbt.get_insert_overwrite_merge_sql", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/common/merge.sql", "original_file_path": "macros/materializations/common/merge.sql", "name": "get_insert_overwrite_merge_sql", "macro_sql": "{% macro get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header=false) -%}\n  {{ adapter.dispatch('get_insert_overwrite_merge_sql')(target, source, dest_columns, predicates, include_sql_header) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_insert_overwrite_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.default__get_merge_sql": {"unique_id": "macro.dbt.default__get_merge_sql", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/common/merge.sql", "original_file_path": "macros/materializations/common/merge.sql", "name": "default__get_merge_sql", "macro_sql": "{% macro default__get_merge_sql(target, source, unique_key, dest_columns, predicates) -%}\n    {%- set predicates = [] if predicates is none else [] + predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set update_columns = config.get('merge_update_columns', default = dest_columns | map(attribute=\"quoted\") | list) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {% if unique_key %}\n        {% set unique_key_match %}\n            DBT_INTERNAL_SOURCE.{{ unique_key }} = DBT_INTERNAL_DEST.{{ unique_key }}\n        {% endset %}\n        {% do predicates.append(unique_key_match) %}\n    {% else %}\n        {% do predicates.append('FALSE') %}\n    {% endif %}\n\n    {{ sql_header if sql_header is not none }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on {{ predicates | join(' and ') }}\n\n    {% if unique_key %}\n    when matched then update set\n        {% for column_name in update_columns -%}\n            {{ column_name }} = DBT_INTERNAL_SOURCE.{{ column_name }}\n            {%- if not loop.last %}, {%- endif %}\n        {%- endfor %}\n    {% endif %}\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.get_quoted_csv": {"unique_id": "macro.dbt.get_quoted_csv", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/common/merge.sql", "original_file_path": "macros/materializations/common/merge.sql", "name": "get_quoted_csv", "macro_sql": "{% macro get_quoted_csv(column_names) %}\n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote(col)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.common_get_delete_insert_merge_sql": {"unique_id": "macro.dbt.common_get_delete_insert_merge_sql", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/common/merge.sql", "original_file_path": "macros/materializations/common/merge.sql", "name": "common_get_delete_insert_merge_sql", "macro_sql": "{% macro common_get_delete_insert_merge_sql(target, source, unique_key, dest_columns) -%}\n\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n\n    {% if unique_key is not none %}\n    delete from {{ target }}\n    where ({{ unique_key }}) in (\n        select ({{ unique_key }})\n        from {{ source }}\n    );\n    {% endif %}\n\n    insert into {{ target }} ({{ dest_cols_csv }})\n    (\n        select {{ dest_cols_csv }}\n        from {{ source }}\n    );\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.default__get_delete_insert_merge_sql": {"unique_id": "macro.dbt.default__get_delete_insert_merge_sql", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/common/merge.sql", "original_file_path": "macros/materializations/common/merge.sql", "name": "default__get_delete_insert_merge_sql", "macro_sql": "{% macro default__get_delete_insert_merge_sql(target, source, unique_key, dest_columns) -%}\n    {{ common_get_delete_insert_merge_sql(target, source, unique_key, dest_columns) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.common_get_delete_insert_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.default__get_insert_overwrite_merge_sql": {"unique_id": "macro.dbt.default__get_insert_overwrite_merge_sql", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/common/merge.sql", "original_file_path": "macros/materializations/common/merge.sql", "name": "default__get_insert_overwrite_merge_sql", "macro_sql": "{% macro default__get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header) -%}\n    {%- set predicates = [] if predicates is none else [] + predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {{ sql_header if sql_header is not none and include_sql_header }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on FALSE\n\n    when not matched by source\n        {% if predicates %} and {{ predicates | join(' and ') }} {% endif %}\n        then delete\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.materialization_table_default": {"unique_id": "macro.dbt.materialization_table_default", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/table/table.sql", "original_file_path": "macros/materializations/table/table.sql", "name": "materialization_table_default", "macro_sql": "{% materialization table, default %}\n  {%- set identifier = model['alias'] -%}\n  {%- set tmp_identifier = model['name'] + '__dbt_tmp' -%}\n  {%- set backup_identifier = model['name'] + '__dbt_backup' -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set target_relation = api.Relation.create(identifier=identifier,\n                                                schema=schema,\n                                                database=database,\n                                                type='table') -%}\n  {%- set intermediate_relation = api.Relation.create(identifier=tmp_identifier,\n                                                      schema=schema,\n                                                      database=database,\n                                                      type='table') -%}\n\n  /*\n      See ../view/view.sql for more information about this relation.\n  */\n  {%- set backup_relation_type = 'table' if old_relation is none else old_relation.type -%}\n  {%- set backup_relation = api.Relation.create(identifier=backup_identifier,\n                                                schema=schema,\n                                                database=database,\n                                                type=backup_relation_type) -%}\n\n  {%- set exists_as_table = (old_relation is not none and old_relation.is_table) -%}\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n\n  -- drop the temp relations if they exists for some reason\n  {{ adapter.drop_relation(intermediate_relation) }}\n  {{ adapter.drop_relation(backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ create_table_as(False, intermediate_relation, sql) }}\n  {%- endcall %}\n\n  -- cleanup\n  {% if old_relation is not none %}\n      {{ adapter.rename_relation(target_relation, backup_relation) }}\n  {% endif %}\n\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {% do create_indexes(target_relation) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {% do persist_docs(target_relation, model) %}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  -- finally, drop the existing/backup relation after the commit\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.create_table_as", "macro.dbt.create_indexes", "macro.dbt.persist_docs", "macro.dbt.drop_relation_if_exists"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.materialization_view_default": {"unique_id": "macro.dbt.materialization_view_default", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/view/view.sql", "original_file_path": "macros/materializations/view/view.sql", "name": "materialization_view_default", "macro_sql": "{%- materialization view, default -%}\n\n  {%- set identifier = model['alias'] -%}\n  {%- set tmp_identifier = model['name'] + '__dbt_tmp' -%}\n  {%- set backup_identifier = model['name'] + '__dbt_backup' -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set target_relation = api.Relation.create(identifier=identifier, schema=schema, database=database,\n                                                type='view') -%}\n  {%- set intermediate_relation = api.Relation.create(identifier=tmp_identifier,\n                                                      schema=schema, database=database, type='view') -%}\n\n  /*\n     This relation (probably) doesn't exist yet. If it does exist, it's a leftover from\n     a previous run, and we're going to try to drop it immediately. At the end of this\n     materialization, we're going to rename the \"old_relation\" to this identifier,\n     and then we're going to drop it. In order to make sure we run the correct one of:\n       - drop view ...\n       - drop table ...\n\n     We need to set the type of this relation to be the type of the old_relation, if it exists,\n     or else \"view\" as a sane default if it does not. Note that if the old_relation does not\n     exist, then there is nothing to move out of the way and subsequentally drop. In that case,\n     this relation will be effectively unused.\n  */\n  {%- set backup_relation_type = 'view' if old_relation is none else old_relation.type -%}\n  {%- set backup_relation = api.Relation.create(identifier=backup_identifier,\n                                                schema=schema, database=database,\n                                                type=backup_relation_type) -%}\n\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- drop the temp relations if they exists for some reason\n  {{ adapter.drop_relation(intermediate_relation) }}\n  {{ adapter.drop_relation(backup_relation) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ create_view_as(intermediate_relation, sql) }}\n  {%- endcall %}\n\n  -- cleanup\n  -- move the existing view out of the way\n  {% if old_relation is not none %}\n    {{ adapter.rename_relation(target_relation, backup_relation) }}\n  {% endif %}\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.create_view_as", "macro.dbt.persist_docs", "macro.dbt.drop_relation_if_exists"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.handle_existing_table": {"unique_id": "macro.dbt.handle_existing_table", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/view/create_or_replace_view.sql", "original_file_path": "macros/materializations/view/create_or_replace_view.sql", "name": "handle_existing_table", "macro_sql": "{% macro handle_existing_table(full_refresh, old_relation) %}\n    {{ adapter.dispatch('handle_existing_table', macro_namespace = 'dbt')(full_refresh, old_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__handle_existing_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.default__handle_existing_table": {"unique_id": "macro.dbt.default__handle_existing_table", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/view/create_or_replace_view.sql", "original_file_path": "macros/materializations/view/create_or_replace_view.sql", "name": "default__handle_existing_table", "macro_sql": "{% macro default__handle_existing_table(full_refresh, old_relation) %}\n    {{ adapter.drop_relation(old_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.create_or_replace_view": {"unique_id": "macro.dbt.create_or_replace_view", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/view/create_or_replace_view.sql", "original_file_path": "macros/materializations/view/create_or_replace_view.sql", "name": "create_or_replace_view", "macro_sql": "{% macro create_or_replace_view(run_outside_transaction_hooks=True) %}\n  {%- set identifier = model['alias'] -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set target_relation = api.Relation.create(\n      identifier=identifier, schema=schema, database=database,\n      type='view') -%}\n\n  {% if run_outside_transaction_hooks %}\n      -- no transactions on BigQuery\n      {{ run_hooks(pre_hooks, inside_transaction=False) }}\n  {% endif %}\n\n  -- `BEGIN` happens here on Snowflake\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- If there's a table with the same name and we weren't told to full refresh,\n  -- that's an error. If we were told to full refresh, drop it. This behavior differs\n  -- for Snowflake and BigQuery, so multiple dispatch is used.\n  {%- if old_relation is not none and old_relation.is_table -%}\n    {{ handle_existing_table(should_full_refresh(), old_relation) }}\n  {%- endif -%}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ create_view_as(target_relation, sql) }}\n  {%- endcall %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {% if run_outside_transaction_hooks %}\n      -- No transactions on BigQuery\n      {{ run_hooks(post_hooks, inside_transaction=False) }}\n  {% endif %}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.handle_existing_table", "macro.dbt.should_full_refresh", "macro.dbt.statement", "macro.dbt.create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.generate_alias_name": {"unique_id": "macro.dbt.generate_alias_name", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/etc/get_custom_alias.sql", "original_file_path": "macros/etc/get_custom_alias.sql", "name": "generate_alias_name", "macro_sql": "{% macro generate_alias_name(custom_alias_name=none, node=none) -%}\n\n    {%- if custom_alias_name is none -%}\n\n        {{ node.name }}\n\n    {%- else -%}\n\n        {{ custom_alias_name | trim }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.run_query": {"unique_id": "macro.dbt.run_query", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/etc/query.sql", "original_file_path": "macros/etc/query.sql", "name": "run_query", "macro_sql": "{% macro run_query(sql) %}\n  {% call statement(\"run_query_statement\", fetch_result=true, auto_begin=false) %}\n    {{ sql }}\n  {% endcall %}\n\n  {% do return(load_result(\"run_query_statement\").table) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.is_incremental": {"unique_id": "macro.dbt.is_incremental", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/etc/is_incremental.sql", "original_file_path": "macros/etc/is_incremental.sql", "name": "is_incremental", "macro_sql": "{% macro is_incremental() %}\n    {#-- do not run introspective queries in parsing #}\n    {% if not execute %}\n        {{ return(False) }}\n    {% else %}\n        {% set relation = adapter.get_relation(this.database, this.schema, this.table) %}\n        {{ return(relation is not none\n                  and relation.type == 'table'\n                  and model.config.materialized == 'incremental'\n                  and not should_full_refresh()) }}\n    {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.should_full_refresh"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.convert_datetime": {"unique_id": "macro.dbt.convert_datetime", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "name": "convert_datetime", "macro_sql": "{% macro convert_datetime(date_str, date_fmt) %}\n\n  {% set error_msg -%}\n      The provided partition date '{{ date_str }}' does not match the expected format '{{ date_fmt }}'\n  {%- endset %}\n\n  {% set res = try_or_compiler_error(error_msg, modules.datetime.datetime.strptime, date_str.strip(), date_fmt) %}\n  {{ return(res) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.dates_in_range": {"unique_id": "macro.dbt.dates_in_range", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "name": "dates_in_range", "macro_sql": "{% macro dates_in_range(start_date_str, end_date_str=none, in_fmt=\"%Y%m%d\", out_fmt=\"%Y%m%d\") %}\n    {% set end_date_str = start_date_str if end_date_str is none else end_date_str %}\n\n    {% set start_date = convert_datetime(start_date_str, in_fmt) %}\n    {% set end_date = convert_datetime(end_date_str, in_fmt) %}\n\n    {% set day_count = (end_date - start_date).days %}\n    {% if day_count < 0 %}\n        {% set msg -%}\n            Partiton start date is after the end date ({{ start_date }}, {{ end_date }})\n        {%- endset %}\n\n        {{ exceptions.raise_compiler_error(msg, model) }}\n    {% endif %}\n\n    {% set date_list = [] %}\n    {% for i in range(0, day_count + 1) %}\n        {% set the_date = (modules.datetime.timedelta(days=i) + start_date) %}\n        {% if not out_fmt %}\n            {% set _ = date_list.append(the_date) %}\n        {% else %}\n            {% set _ = date_list.append(the_date.strftime(out_fmt)) %}\n        {% endif %}\n    {% endfor %}\n\n    {{ return(date_list) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.convert_datetime"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.partition_range": {"unique_id": "macro.dbt.partition_range", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "name": "partition_range", "macro_sql": "{% macro partition_range(raw_partition_date, date_fmt='%Y%m%d') %}\n    {% set partition_range = (raw_partition_date | string).split(\",\") %}\n\n    {% if (partition_range | length) == 1 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = none %}\n    {% elif (partition_range | length) == 2 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = partition_range[1] %}\n    {% else %}\n      {{ exceptions.raise_compiler_error(\"Invalid partition time. Expected format: {Start Date}[,{End Date}]. Got: \" ~ raw_partition_date) }}\n    {% endif %}\n\n    {{ return(dates_in_range(start_date, end_date, in_fmt=date_fmt)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.dates_in_range"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.py_current_timestring": {"unique_id": "macro.dbt.py_current_timestring", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "name": "py_current_timestring", "macro_sql": "{% macro py_current_timestring() %}\n    {% set dt = modules.datetime.datetime.now() %}\n    {% do return(dt.strftime(\"%Y%m%d%H%M%S%f\")) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.generate_schema_name": {"unique_id": "macro.dbt.generate_schema_name", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/etc/get_custom_schema.sql", "original_file_path": "macros/etc/get_custom_schema.sql", "name": "generate_schema_name", "macro_sql": "{% macro generate_schema_name(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if custom_schema_name is none -%}\n\n        {{ default_schema }}\n\n    {%- else -%}\n\n        {{ default_schema }}_{{ custom_schema_name | trim }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.generate_schema_name_for_env": {"unique_id": "macro.dbt.generate_schema_name_for_env", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/etc/get_custom_schema.sql", "original_file_path": "macros/etc/get_custom_schema.sql", "name": "generate_schema_name_for_env", "macro_sql": "{% macro generate_schema_name_for_env(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if target.name == 'prod' and custom_schema_name is not none -%}\n\n        {{ custom_schema_name | trim }}\n\n    {%- else -%}\n\n        {{ default_schema }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.generate_database_name": {"unique_id": "macro.dbt.generate_database_name", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/etc/get_custom_database.sql", "original_file_path": "macros/etc/get_custom_database.sql", "name": "generate_database_name", "macro_sql": "{% macro generate_database_name(custom_database_name=none, node=none) -%}\n    {% do return(adapter.dispatch('generate_database_name')(custom_database_name, node)) %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__generate_database_name"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.default__generate_database_name": {"unique_id": "macro.dbt.default__generate_database_name", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/etc/get_custom_database.sql", "original_file_path": "macros/etc/get_custom_database.sql", "name": "default__generate_database_name", "macro_sql": "{% macro default__generate_database_name(custom_database_name=none, node=none) -%}\n    {%- set default_database = target.database -%}\n    {%- if custom_database_name is none -%}\n\n        {{ default_database }}\n\n    {%- else -%}\n\n        {{ custom_database_name }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.get_columns_in_query": {"unique_id": "macro.dbt.get_columns_in_query", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "get_columns_in_query", "macro_sql": "{% macro get_columns_in_query(select_sql) -%}\n  {{ return(adapter.dispatch('get_columns_in_query')(select_sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.default__get_columns_in_query": {"unique_id": "macro.dbt.default__get_columns_in_query", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__get_columns_in_query", "macro_sql": "{% macro default__get_columns_in_query(select_sql) %}\n    {% call statement('get_columns_in_query', fetch_result=True, auto_begin=False) -%}\n        select * from (\n            {{ select_sql }}\n        ) as __dbt_sbq\n        where false\n        limit 0\n    {% endcall %}\n\n    {{ return(load_result('get_columns_in_query').table.columns | map(attribute='name') | list) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.create_schema": {"unique_id": "macro.dbt.create_schema", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "create_schema", "macro_sql": "{% macro create_schema(relation) -%}\n  {{ adapter.dispatch('create_schema')(relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__create_schema"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.default__create_schema": {"unique_id": "macro.dbt.default__create_schema", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__create_schema", "macro_sql": "{% macro default__create_schema(relation) -%}\n  {%- call statement('create_schema') -%}\n    create schema if not exists {{ relation.without_identifier() }}\n  {% endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.drop_schema": {"unique_id": "macro.dbt.drop_schema", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "drop_schema", "macro_sql": "{% macro drop_schema(relation) -%}\n  {{ adapter.dispatch('drop_schema')(relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__drop_schema"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.default__drop_schema": {"unique_id": "macro.dbt.default__drop_schema", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__drop_schema", "macro_sql": "{% macro default__drop_schema(relation) -%}\n  {%- call statement('drop_schema') -%}\n    drop schema if exists {{ relation.without_identifier() }} cascade\n  {% endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.create_table_as": {"unique_id": "macro.dbt.create_table_as", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "create_table_as", "macro_sql": "{% macro create_table_as(temporary, relation, sql) -%}\n  {{ adapter.dispatch('create_table_as')(temporary, relation, sql) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.default__create_table_as": {"unique_id": "macro.dbt.default__create_table_as", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__create_table_as", "macro_sql": "{% macro default__create_table_as(temporary, relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  create {% if temporary: -%}temporary{%- endif %} table\n    {{ relation.include(database=(not temporary), schema=(not temporary)) }}\n  as (\n    {{ sql }}\n  );\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.get_create_index_sql": {"unique_id": "macro.dbt.get_create_index_sql", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "get_create_index_sql", "macro_sql": "{% macro get_create_index_sql(relation, index_dict) -%}\n  {{ return(adapter.dispatch('get_create_index_sql')(relation, index_dict)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_create_index_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.default__get_create_index_sql": {"unique_id": "macro.dbt.default__get_create_index_sql", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__get_create_index_sql", "macro_sql": "{% macro default__get_create_index_sql(relation, index_dict) -%}\n  {% do return(None) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.create_indexes": {"unique_id": "macro.dbt.create_indexes", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "create_indexes", "macro_sql": "{% macro create_indexes(relation) -%}\n  {{ adapter.dispatch('create_indexes')(relation) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.default__create_indexes": {"unique_id": "macro.dbt.default__create_indexes", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__create_indexes", "macro_sql": "{% macro default__create_indexes(relation) -%}\n  {%- set _indexes = config.get('indexes', default=[]) -%}\n\n  {% for _index_dict in _indexes %}\n    {% set create_index_sql = get_create_index_sql(relation, _index_dict) %}\n    {% if create_index_sql %}\n      {% do run_query(create_index_sql) %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_create_index_sql", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.create_view_as": {"unique_id": "macro.dbt.create_view_as", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "create_view_as", "macro_sql": "{% macro create_view_as(relation, sql) -%}\n  {{ adapter.dispatch('create_view_as')(relation, sql) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.default__create_view_as": {"unique_id": "macro.dbt.default__create_view_as", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__create_view_as", "macro_sql": "{% macro default__create_view_as(relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n  create view {{ relation }} as (\n    {{ sql }}\n  );\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.get_catalog": {"unique_id": "macro.dbt.get_catalog", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "get_catalog", "macro_sql": "{% macro get_catalog(information_schema, schemas) -%}\n  {{ return(adapter.dispatch('get_catalog')(information_schema, schemas)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_catalog"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.default__get_catalog": {"unique_id": "macro.dbt.default__get_catalog", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__get_catalog", "macro_sql": "{% macro default__get_catalog(information_schema, schemas) -%}\n\n  {% set typename = adapter.type() %}\n  {% set msg -%}\n    get_catalog not implemented for {{ typename }}\n  {%- endset %}\n\n  {{ exceptions.raise_compiler_error(msg) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.get_columns_in_relation": {"unique_id": "macro.dbt.get_columns_in_relation", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "get_columns_in_relation", "macro_sql": "{% macro get_columns_in_relation(relation) -%}\n  {{ return(adapter.dispatch('get_columns_in_relation')(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.sql_convert_columns_in_relation": {"unique_id": "macro.dbt.sql_convert_columns_in_relation", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "sql_convert_columns_in_relation", "macro_sql": "{% macro sql_convert_columns_in_relation(table) -%}\n  {% set columns = [] %}\n  {% for row in table %}\n    {% do columns.append(api.Column(*row)) %}\n  {% endfor %}\n  {{ return(columns) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.default__get_columns_in_relation": {"unique_id": "macro.dbt.default__get_columns_in_relation", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__get_columns_in_relation", "macro_sql": "{% macro default__get_columns_in_relation(relation) -%}\n  {{ exceptions.raise_not_implemented(\n    'get_columns_in_relation macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.alter_column_type": {"unique_id": "macro.dbt.alter_column_type", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "alter_column_type", "macro_sql": "{% macro alter_column_type(relation, column_name, new_column_type) -%}\n  {{ return(adapter.dispatch('alter_column_type')(relation, column_name, new_column_type)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__alter_column_type"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.alter_column_comment": {"unique_id": "macro.dbt.alter_column_comment", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "alter_column_comment", "macro_sql": "{% macro alter_column_comment(relation, column_dict) -%}\n  {{ return(adapter.dispatch('alter_column_comment')(relation, column_dict)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.default__alter_column_comment": {"unique_id": "macro.dbt.default__alter_column_comment", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__alter_column_comment", "macro_sql": "{% macro default__alter_column_comment(relation, column_dict) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_column_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.alter_relation_comment": {"unique_id": "macro.dbt.alter_relation_comment", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "alter_relation_comment", "macro_sql": "{% macro alter_relation_comment(relation, relation_comment) -%}\n  {{ return(adapter.dispatch('alter_relation_comment')(relation, relation_comment)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__alter_relation_comment"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.default__alter_relation_comment": {"unique_id": "macro.dbt.default__alter_relation_comment", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__alter_relation_comment", "macro_sql": "{% macro default__alter_relation_comment(relation, relation_comment) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_relation_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.persist_docs": {"unique_id": "macro.dbt.persist_docs", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "persist_docs", "macro_sql": "{% macro persist_docs(relation, model, for_relation=true, for_columns=true) -%}\n  {{ return(adapter.dispatch('persist_docs')(relation, model, for_relation, for_columns)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.default__persist_docs": {"unique_id": "macro.dbt.default__persist_docs", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__persist_docs", "macro_sql": "{% macro default__persist_docs(relation, model, for_relation, for_columns) -%}\n  {% if for_relation and config.persist_relation_docs() and model.description %}\n    {% do run_query(alter_relation_comment(relation, model.description)) %}\n  {% endif %}\n\n  {% if for_columns and config.persist_column_docs() and model.columns %}\n    {% do run_query(alter_column_comment(relation, model.columns)) %}\n  {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt.alter_relation_comment", "macro.dbt.alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.default__alter_column_type": {"unique_id": "macro.dbt.default__alter_column_type", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__alter_column_type", "macro_sql": "{% macro default__alter_column_type(relation, column_name, new_column_type) -%}\n  {#\n    1. Create a new column (w/ temp name and correct type)\n    2. Copy data over to it\n    3. Drop the existing column (cascade!)\n    4. Rename the new column to existing column\n  #}\n  {%- set tmp_column = column_name + \"__dbt_alter\" -%}\n\n  {% call statement('alter_column_type') %}\n    alter table {{ relation }} add column {{ adapter.quote(tmp_column) }} {{ new_column_type }};\n    update {{ relation }} set {{ adapter.quote(tmp_column) }} = {{ adapter.quote(column_name) }};\n    alter table {{ relation }} drop column {{ adapter.quote(column_name) }} cascade;\n    alter table {{ relation }} rename column {{ adapter.quote(tmp_column) }} to {{ adapter.quote(column_name) }}\n  {% endcall %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.drop_relation": {"unique_id": "macro.dbt.drop_relation", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "drop_relation", "macro_sql": "{% macro drop_relation(relation) -%}\n  {{ return(adapter.dispatch('drop_relation')(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__drop_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.default__drop_relation": {"unique_id": "macro.dbt.default__drop_relation", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__drop_relation", "macro_sql": "{% macro default__drop_relation(relation) -%}\n  {% call statement('drop_relation', auto_begin=False) -%}\n    drop {{ relation.type }} if exists {{ relation }} cascade\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.truncate_relation": {"unique_id": "macro.dbt.truncate_relation", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "truncate_relation", "macro_sql": "{% macro truncate_relation(relation) -%}\n  {{ return(adapter.dispatch('truncate_relation')(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__truncate_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.default__truncate_relation": {"unique_id": "macro.dbt.default__truncate_relation", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__truncate_relation", "macro_sql": "{% macro default__truncate_relation(relation) -%}\n  {% call statement('truncate_relation') -%}\n    truncate table {{ relation }}\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.rename_relation": {"unique_id": "macro.dbt.rename_relation", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "rename_relation", "macro_sql": "{% macro rename_relation(from_relation, to_relation) -%}\n  {{ return(adapter.dispatch('rename_relation')(from_relation, to_relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__rename_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.default__rename_relation": {"unique_id": "macro.dbt.default__rename_relation", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__rename_relation", "macro_sql": "{% macro default__rename_relation(from_relation, to_relation) -%}\n  {% set target_name = adapter.quote_as_configured(to_relation.identifier, 'identifier') %}\n  {% call statement('rename_relation') -%}\n    alter table {{ from_relation }} rename to {{ target_name }}\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.information_schema_name": {"unique_id": "macro.dbt.information_schema_name", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "information_schema_name", "macro_sql": "{% macro information_schema_name(database) %}\n  {{ return(adapter.dispatch('information_schema_name')(database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__information_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.default__information_schema_name": {"unique_id": "macro.dbt.default__information_schema_name", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__information_schema_name", "macro_sql": "{% macro default__information_schema_name(database) -%}\n  {%- if database -%}\n    {{ database }}.INFORMATION_SCHEMA\n  {%- else -%}\n    INFORMATION_SCHEMA\n  {%- endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.list_schemas": {"unique_id": "macro.dbt.list_schemas", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "list_schemas", "macro_sql": "{% macro list_schemas(database) -%}\n  {{ return(adapter.dispatch('list_schemas')(database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__list_schemas"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.default__list_schemas": {"unique_id": "macro.dbt.default__list_schemas", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__list_schemas", "macro_sql": "{% macro default__list_schemas(database) -%}\n  {% set sql %}\n    select distinct schema_name\n    from {{ information_schema_name(database) }}.SCHEMATA\n    where catalog_name ilike '{{ database }}'\n  {% endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.information_schema_name", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.check_schema_exists": {"unique_id": "macro.dbt.check_schema_exists", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "check_schema_exists", "macro_sql": "{% macro check_schema_exists(information_schema, schema) -%}\n  {{ return(adapter.dispatch('check_schema_exists')(information_schema, schema)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__check_schema_exists"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.default__check_schema_exists": {"unique_id": "macro.dbt.default__check_schema_exists", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__check_schema_exists", "macro_sql": "{% macro default__check_schema_exists(information_schema, schema) -%}\n  {% set sql -%}\n        select count(*)\n        from {{ information_schema.replace(information_schema_view='SCHEMATA') }}\n        where catalog_name='{{ information_schema.database }}'\n          and schema_name='{{ schema }}'\n  {%- endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.list_relations_without_caching": {"unique_id": "macro.dbt.list_relations_without_caching", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "list_relations_without_caching", "macro_sql": "{% macro list_relations_without_caching(schema_relation) %}\n  {{ return(adapter.dispatch('list_relations_without_caching')(schema_relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__list_relations_without_caching"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.default__list_relations_without_caching": {"unique_id": "macro.dbt.default__list_relations_without_caching", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__list_relations_without_caching", "macro_sql": "{% macro default__list_relations_without_caching(schema_relation) %}\n  {{ exceptions.raise_not_implemented(\n    'list_relations_without_caching macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.current_timestamp": {"unique_id": "macro.dbt.current_timestamp", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "current_timestamp", "macro_sql": "{% macro current_timestamp() -%}\n  {{ adapter.dispatch('current_timestamp')() }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.default__current_timestamp": {"unique_id": "macro.dbt.default__current_timestamp", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__current_timestamp", "macro_sql": "{% macro default__current_timestamp() -%}\n  {{ exceptions.raise_not_implemented(\n    'current_timestamp macro not implemented for adapter '+adapter.type()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.collect_freshness": {"unique_id": "macro.dbt.collect_freshness", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "collect_freshness", "macro_sql": "{% macro collect_freshness(source, loaded_at_field, filter) %}\n  {{ return(adapter.dispatch('collect_freshness')(source, loaded_at_field, filter))}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__collect_freshness"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.default__collect_freshness": {"unique_id": "macro.dbt.default__collect_freshness", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__collect_freshness", "macro_sql": "{% macro default__collect_freshness(source, loaded_at_field, filter) %}\n  {% call statement('collect_freshness', fetch_result=True, auto_begin=False) -%}\n    select\n      max({{ loaded_at_field }}) as max_loaded_at,\n      {{ current_timestamp() }} as snapshotted_at\n    from {{ source }}\n    {% if filter %}\n    where {{ filter }}\n    {% endif %}\n  {% endcall %}\n  {{ return(load_result('collect_freshness').table) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.make_temp_relation": {"unique_id": "macro.dbt.make_temp_relation", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "make_temp_relation", "macro_sql": "{% macro make_temp_relation(base_relation, suffix='__dbt_tmp') %}\n  {{ return(adapter.dispatch('make_temp_relation')(base_relation, suffix))}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__make_temp_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.default__make_temp_relation": {"unique_id": "macro.dbt.default__make_temp_relation", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__make_temp_relation", "macro_sql": "{% macro default__make_temp_relation(base_relation, suffix) %}\n    {% set tmp_identifier = base_relation.identifier ~ suffix %}\n    {% set tmp_relation = base_relation.incorporate(\n                                path={\"identifier\": tmp_identifier}) -%}\n\n    {% do return(tmp_relation) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.set_sql_header": {"unique_id": "macro.dbt.set_sql_header", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "set_sql_header", "macro_sql": "{% macro set_sql_header(config) -%}\n  {{ config.set('sql_header', caller()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.default__test_relationships": {"unique_id": "macro.dbt.default__test_relationships", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/schema_tests/relationships.sql", "original_file_path": "macros/schema_tests/relationships.sql", "name": "default__test_relationships", "macro_sql": "{% macro default__test_relationships(model, column_name, to, field) %}\n\nselect\n    child.{{ column_name }}\n\nfrom {{ model }} as child\n\nleft join {{ to }} as parent\n    on child.{{ column_name }} = parent.{{ field }}\n\nwhere child.{{ column_name }} is not null\n  and parent.{{ field }} is null\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.test_relationships": {"unique_id": "macro.dbt.test_relationships", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/schema_tests/relationships.sql", "original_file_path": "macros/schema_tests/relationships.sql", "name": "test_relationships", "macro_sql": "{% test relationships(model, column_name, to, field) %}\n    {% set macro = adapter.dispatch('test_relationships') %}\n    {{ macro(model, column_name, to, field) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_relationships"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.default__test_not_null": {"unique_id": "macro.dbt.default__test_not_null", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/schema_tests/not_null.sql", "original_file_path": "macros/schema_tests/not_null.sql", "name": "default__test_not_null", "macro_sql": "{% macro default__test_not_null(model, column_name) %}\n\nselect *\nfrom {{ model }}\nwhere {{ column_name }} is null\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.test_not_null": {"unique_id": "macro.dbt.test_not_null", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/schema_tests/not_null.sql", "original_file_path": "macros/schema_tests/not_null.sql", "name": "test_not_null", "macro_sql": "{% test not_null(model, column_name) %}\n    {% set macro = adapter.dispatch('test_not_null') %}\n    {{ macro(model, column_name) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_not_null"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.default__test_unique": {"unique_id": "macro.dbt.default__test_unique", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/schema_tests/unique.sql", "original_file_path": "macros/schema_tests/unique.sql", "name": "default__test_unique", "macro_sql": "{% macro default__test_unique(model, column_name) %}\n\nselect\n    {{ column_name }},\n    count(*) as n_records\n\nfrom {{ model }}\nwhere {{ column_name }} is not null\ngroup by {{ column_name }}\nhaving count(*) > 1\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.test_unique": {"unique_id": "macro.dbt.test_unique", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/schema_tests/unique.sql", "original_file_path": "macros/schema_tests/unique.sql", "name": "test_unique", "macro_sql": "{% test unique(model, column_name) %}\n    {% set macro = adapter.dispatch('test_unique') %}\n    {{ macro(model, column_name) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_unique"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.default__test_accepted_values": {"unique_id": "macro.dbt.default__test_accepted_values", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/schema_tests/accepted_values.sql", "original_file_path": "macros/schema_tests/accepted_values.sql", "name": "default__test_accepted_values", "macro_sql": "{% macro default__test_accepted_values(model, column_name, values, quote=True) %}\n\nwith all_values as (\n\n    select\n        {{ column_name }} as value_field,\n        count(*) as n_records\n\n    from {{ model }}\n    group by 1\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    {% for value in values -%}\n        {% if quote -%}\n        '{{ value }}'\n        {%- else -%}\n        {{ value }}\n        {%- endif -%}\n        {%- if not loop.last -%},{%- endif %}\n    {%- endfor %}\n)\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}, "macro.dbt.test_accepted_values": {"unique_id": "macro.dbt.test_accepted_values", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/schema_tests/accepted_values.sql", "original_file_path": "macros/schema_tests/accepted_values.sql", "name": "test_accepted_values", "macro_sql": "{% test accepted_values(model, column_name, values, quote=True) %}\n    {% set macro = adapter.dispatch('test_accepted_values') %}\n    {{ macro(model, column_name, values, quote) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_accepted_values"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1631703182}}, "docs": {"DSR.__overview__": {"unique_id": "DSR.__overview__", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "overview.md", "original_file_path": "models/overview.md", "name": "__overview__", "block_contents": "### Welcome to the Demand Signal Repository (DSR)!\n\nHere you will find all reference material relating to the DSR, auto generated by dbt.\n\nFor Tutorials, How-To Guides and Explanation material on the DSR and the DeSiRe ecosystem more widely, \nplease refer to readthedocs.\n\n### DSR & the DeSiRe ecosystem\n![DeSiRe](assets/desire_ecosystem.png)\nThe DSR contains harmonised data from multiple sources in a consolidated structure, serving downstream SKUtrak \nanalysis\n\n### Navigation\n\nYou can use the `Project` and `Database` navigation tabs on the left side of the window to explore the models\nin the DSR project.\n\n#### Project Tab\nThe `Project` tab mirrors the directory structure of the dbt project. In this tab, you can see all of the\nmodels defined in the dbt project, as well as models imported from dbt packages.\n\n#### Database Tab\nThe `Database` tab also exposes the models, but in a format that looks more like a database explorer. This view\nshows relations (tables and views) grouped into database schemas. Note that ephemeral models are _not_ shown\nin this interface, as they do not exist in the database.\n\n### Graph Exploration\nYou can click the blue icon on the bottom-right corner of the page to view the lineage graph of the models.\n\nOn model pages, you'll see the immediate parents and children of the model you're exploring. By clicking the `Expand`\nbutton at the top-right of this lineage pane, you'll be able to see all of the models that are used to build,\nor are built from, the model you're exploring.\n\nOnce expanded, you'll be able to use the `--models` and `--exclude` model selection syntax to filter the\nmodels in the graph. For more information on model selection, check out the [dbt docs](https://docs.getdbt.com/docs/model-selection-syntax).\n\nNote that you can also right-click on models to interactively filter and explore the graph."}, "DSR.input_act_inv_locationdaycase": {"unique_id": "DSR.input_act_inv_locationdaycase", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/inputtables_docs.md", "original_file_path": "models/docs/inputtables_docs.md", "name": "input_act_inv_locationdaycase", "block_contents": "**Description**\nData category: Actual\n\nData Representation: Inventory\n\nContents: Contains actual inventory recorded at a location on a day at case level. This is measured at a point in time defined by the retailer to be representative of that day.\nThe table contains both depot and store inventory information, but only where case level information is available.\n\n**Grain**\nOne record per location, per day, per case. \n\nRecords only where source data submitted, therefore there may be \"zero\" inventory records, but the data is not densified for NULL records.\n\n**Purpose**\nUsed to provide stock information at specific locations over time. This data can be aggregated to the SKU level by joining the logistic item to provide a consistent stock picture where stock measures are inconsistent\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain"}, "DSR.input_act_inv_locationdaysku": {"unique_id": "DSR.input_act_inv_locationdaysku", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/inputtables_docs.md", "original_file_path": "models/docs/inputtables_docs.md", "name": "input_act_inv_locationdaysku", "block_contents": "**Description**\nData Category: Actual\n\nData Representation: Inventory\n\nContents: Contains actual inventory recorded at a location on a day at sku level. This is measured at a point in time defined by the retailer to be representative of that day.\nThe table contains both depot and store inventory information, but only where sku level information is available.\n\n\n**Grain**\nOne record per location, per day, per sku. \n\nRecords only where source data submitted, therefore there may be \"zero\" inventory records, but the data is not densified for NULL records.\n\n**Purpose**\nUsed to provide stock information at specific locations over time. The data is aggregated to the SKU level by joining the logistic item with this table to provide a consistent stock picture where stock measures are inconsistent.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain"}, "DSR.input_act_mvt_depotstoredaysku": {"unique_id": "DSR.input_act_mvt_depotstoredaysku", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/inputtables_docs.md", "original_file_path": "models/docs/inputtables_docs.md", "name": "input_act_mvt_depotstoredaysku", "block_contents": "**Description**\n\nData Category: Actual\n\nData Representation: Movement\n\nContents: Contains actual movement recorded between a depot and a store on a day at sku level. This is measured at a point in time defined by the retailer to be representative of that day.\n\n**Grain**\nOne record per sku movement per organisation location from to organisation location id to per day.\n\n**Purpose**\nUsed to provide movement information of a sku from depot to store for a day. The data is aggregated to provide information on actual units ordered by a store and unites fulfilled by the depot.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain"}, "DSR.input_act_mvt_orgdepotdaycase": {"unique_id": "DSR.input_act_mvt_orgdepotdaycase", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/inputtables_docs.md", "original_file_path": "models/docs/inputtables_docs.md", "name": "input_act_mvt_orgdepotdaycase", "block_contents": "**Description**\n\nData Category: Actual\n\nData Representation: Movement\n\nContents: Contains actual movement recorded between a organisation\\supplier and a depot on a day at case level. This is measured at a point in time defined by the retailer to be representative of that day.\n\n**Grain**\nOne record per case movement per supplier to depot per day.\n\n**Purpose**\nUsed to provide movement information of a case from supplier organisation to depot for a day. The data is aggregated to provide information on actual case ordered by a retailer and unites fulfilled by the supplier to retailers depot.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain"}, "DSR.input_act_mvt_orgdepotdayordercase": {"unique_id": "DSR.input_act_mvt_orgdepotdayordercase", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/inputtables_docs.md", "original_file_path": "models/docs/inputtables_docs.md", "name": "input_act_mvt_orgdepotdayordercase", "block_contents": "**Description**\n\nData Category: Actual\n\nData Representation: Movement\n\nContents: Contains actual movement recorded between a organisation\\supplier and a depot on a day at case level for every order. This is measured at a point in time defined by the retailer to be representative of that day.\n\n**Grain**\nOne record per case movement per supplier to depot per day.\n\n**Purpose**\nUsed to provide movement information of a case from supplier organisation to depot for a day per order. The data is aggregated to provide information on actual case ordered by a retailer and unites fulfilled by the supplier to retailers depot.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain"}, "DSR.input_act_mvt_storedaysku": {"unique_id": "DSR.input_act_mvt_storedaysku", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/inputtables_docs.md", "original_file_path": "models/docs/inputtables_docs.md", "name": "input_act_mvt_storedaysku", "block_contents": "**Description**\n\nData Category: Actual\n\nData Representation: Movement\n\nContents: Contains actual movement recorded for a store at sku level. This is measured at a point in time defined by the retailer to be representative of that day.\n\n**Grain**\nOne record per store, per day, per sku. \n\n**Purpose**\nUsed to provide movement information for a SKU at specific store over time. \n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain"}, "DSR.input_calendar": {"unique_id": "DSR.input_calendar", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/inputtables_docs.md", "original_file_path": "models/docs/inputtables_docs.md", "name": "input_calendar", "block_contents": "**Description**\nContains distinct list of days which is defined for specific organisation\n\n**Grain**\nOne records per day_date in YYYY-MM-DD format.\n\n**Purpose**\nThe Day_date describes the days that facts occur on.\n\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain"}, "DSR.input_case": {"unique_id": "DSR.input_case", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/inputtables_docs.md", "original_file_path": "models/docs/inputtables_docs.md", "name": "input_case", "block_contents": "**Description**\nContains distinct cases. It contains organisationally defined casewhich is scoped to the creator organisation.\n\n**Grain**\nOne record per case along with the creator organization ID.\n\n**Purpose**\nUsed to distinctly identify and store cases with respect to creator organisation\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain"}, "DSR.input_case_grouping": {"unique_id": "DSR.input_case_grouping", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/inputtables_docs.md", "original_file_path": "models/docs/inputtables_docs.md", "name": "input_case_grouping", "block_contents": "**Description**\n\n\n**Grain**\n\n\n**Purpose**\n\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain"}, "DSR.input_date": {"unique_id": "DSR.input_date", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/inputtables_docs.md", "original_file_path": "models/docs/inputtables_docs.md", "name": "input_date", "block_contents": "**Description**\nContains distinct list of all days with standardised attributes such as month, month_name, date_of_week etc. \n\n**Grain**\nOne record per day_date in YYYY-MM-DD format.\n\n**Purpose**\nThe Day_date describes the days that facts occur on\n\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain"}, "DSR.input_delegated_visibility": {"unique_id": "DSR.input_delegated_visibility", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/inputtables_docs.md", "original_file_path": "models/docs/inputtables_docs.md", "name": "input_delegated_visibility", "block_contents": "**Description**\n\n\n**Grain**\n\n\n**Purpose**\n\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain"}, "DSR.input_location": {"unique_id": "DSR.input_location", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/inputtables_docs.md", "original_file_path": "models/docs/inputtables_docs.md", "name": "input_location", "block_contents": "**Description**\n\nContains details such as longitude, latitudes etc for all physical entities (depot, store, etc) .\n\n**Grain**\nOne record per physical location describing its immutable attributes as stated by the organisation\n\n**Purpose**\nTo store attributes of the location in one place and have a large number of attributes assigned to them. We add organisation to allow multiple \"opinions\" to be accepted (and grouped later)\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain"}, "DSR.input_location_group": {"unique_id": "DSR.input_location_group", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/inputtables_docs.md", "original_file_path": "models/docs/inputtables_docs.md", "name": "input_location_group", "block_contents": "**Description**\nContains groups of location defined on certain attributes and with a group name along with value\n\n**Grain**\nOne record per location group id for creator organisation, subject organisation, location function and group name\n\n**Purpose**\nGroups can be defined for locations which can share similar attributes.\nCreator such as atheon can create its own group with a unique group name and assign a group value to all group locations\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain"}, "DSR.input_location_parentage": {"unique_id": "DSR.input_location_parentage", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/inputtables_docs.md", "original_file_path": "models/docs/inputtables_docs.md", "name": "input_location_parentage", "block_contents": "**Description**\nContains parentage for locations. It defines parents location for a subject organisation created by the creator organisation.\n\n**Grain**\nOne record defines parent location for a subject location.\n\n**Purpose**\nUsed to define parentage for physical location. The parentage can be defined by creator organisation for a subject organisation which will allow multiple parentage for same location and priority can be given on the basis of creator org ID while retrieving the information\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain"}, "DSR.input_organisation": {"unique_id": "DSR.input_organisation", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/inputtables_docs.md", "original_file_path": "models/docs/inputtables_docs.md", "name": "input_organisation", "block_contents": "**Description**\nContains list of all organization. Creator can defines attributes for an organisation.I\n\n**Grain**\nOne record per organization.\n\n**Purpose**\nUsed to distinctly identify and store organisation.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain"}, "DSR.input_organisation_mapping": {"unique_id": "DSR.input_organisation_mapping", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/inputtables_docs.md", "original_file_path": "models/docs/inputtables_docs.md", "name": "input_organisation_mapping", "block_contents": "**Description**\nContains distinct organization. A unique organisation Id is defined by the organisation number and Id of the organisation which creates it.\n\n**Grain**\nOne record per organization.\n\n**Purpose**\nUsed to define mapping for the organisation. It allows a same organisation differentiated on the basis of the creator organisation.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain"}, "DSR.input_organisation_parentage": {"unique_id": "DSR.input_organisation_parentage", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/inputtables_docs.md", "original_file_path": "models/docs/inputtables_docs.md", "name": "input_organisation_parentage", "block_contents": "**Description**\n\nContains list of organisation and defines the parent organisation for them which can be entered by a creator organisation\n\n\n**Grain**\nOne record per organization per creator organisation\n\n**Purpose**\nUsed to define parentage for an organisation. A creator organsaition can define the parentage for any organsaition.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain"}, "DSR.input_pln_inv_storedaysku": {"unique_id": "DSR.input_pln_inv_storedaysku", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/inputtables_docs.md", "original_file_path": "models/docs/inputtables_docs.md", "name": "input_pln_inv_storedaysku", "block_contents": "**Description**\n\nData Category: Plan\n\nData Representation: Inventory\n\nContents: Contains planned inventory recorded for a store at sku level. This is measured at a point in time defined by the retailer to be representative of that day.\n\n\n**Grain**\nOne record per store, per day, per sku.\n\n**Purpose**\nUsed to provide ranging information for a sku to a store for a day.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain"}, "DSR.input_pln_mvt_daysku": {"unique_id": "DSR.input_pln_mvt_daysku", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/inputtables_docs.md", "original_file_path": "models/docs/inputtables_docs.md", "name": "input_pln_mvt_daysku", "block_contents": "**Description**\n\n\n**Grain**\n\n\n**Purpose**\n\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain"}, "DSR.input_pln_mvt_depotstoredaysku": {"unique_id": "DSR.input_pln_mvt_depotstoredaysku", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/inputtables_docs.md", "original_file_path": "models/docs/inputtables_docs.md", "name": "input_pln_mvt_depotstoredaysku", "block_contents": "**Description**\n\nData Category: Plan\n\nData Representation: Movement\n\nContents: Contains plan movement recorded between a depot and a store on a day at sku level. This is measured at a point in time defined by the retailer to be representative of that day.\n\n\n**Grain**\nOne record per sku movement per organisation location from to organisation location id to per day.\n\n**Purpose**\nUsed to provide planned movement information of a sku from depot to store for a day. \n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain"}, "DSR.input_pln_mvt_orgdepotdaysku": {"unique_id": "DSR.input_pln_mvt_orgdepotdaysku", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/inputtables_docs.md", "original_file_path": "models/docs/inputtables_docs.md", "name": "input_pln_mvt_orgdepotdaysku", "block_contents": "**Description**\n\nData Category: Plan\n\nData Representation: Movement\n\nContents: Contains planned movement recorded between a organisation\\supplier and a depot on a day at sku level. This is measured at a point in time defined by the retailer(Identified by creator organisation ID) to be representative of that day.\n\n**Grain**\nOne record per case movement per supplier to depot per day.\n\n**Purpose**\nUsed to provide planned movement information of a sku from supplier organisation to depot for a day. \n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain"}, "DSR.input_pln_mvt_orgstoredaysku": {"unique_id": "DSR.input_pln_mvt_orgstoredaysku", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/inputtables_docs.md", "original_file_path": "models/docs/inputtables_docs.md", "name": "input_pln_mvt_orgstoredaysku", "block_contents": "**Description**\n\nData Category: Plan\n\nData Representation: Movement\n\nContents: Contains planned movement recorded between a organisation\\supplier and a store on a day at sku level. This is measured at a point in time defined by the retailer(Identified by creator organisation ID) to be representative of that day.\n\n**Grain**\nOne record per case movement per supplier to store per day.\n\n**Purpose**\nUsed to provide planned movement information of a sku from supplier organisation to store for a day. \n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain"}, "DSR.input_pln_mvt_storedaysku": {"unique_id": "DSR.input_pln_mvt_storedaysku", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/inputtables_docs.md", "original_file_path": "models/docs/inputtables_docs.md", "name": "input_pln_mvt_storedaysku", "block_contents": "**Description**\n\nData Category: Plan\n\nData Representation: Movement\n\nContents: Contains planned movement recorded for a store on a day at sku level. This is measured at a point in time defined by the organization(Identified by creator organisation ID) to be representative of that day.\n\n\n**Grain**\nOne record per sku per store per day.\n\n**Purpose**\nUsed to provide planned movement information of a sku of a store for a day. \n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain"}, "DSR.input_promotion": {"unique_id": "DSR.input_promotion", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/inputtables_docs.md", "original_file_path": "models/docs/inputtables_docs.md", "name": "input_promotion", "block_contents": "**Description**\n\nContains distinct promotion defined for an organisation. A promotion is defined as an organisationally defined promotion with a promotion number , start and end date. Promotions are scoped to the creator organisation for a subject organisation.\n\n\n**Grain**\nOne record per promotion per subject organisation per sku.\n\n**Purpose**\nUsed to distinctly identify and store promotion details for an organisation. It details all the attributes for promotion like start date, end date, promotion number and sku.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain"}, "DSR.input_sku": {"unique_id": "DSR.input_sku", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/inputtables_docs.md", "original_file_path": "models/docs/inputtables_docs.md", "name": "input_sku", "block_contents": "**Description**\n\nContains distinct sku. A product sku are organisationally defined and are scoped to the creator organisation.\nModel Operation :- Incrementally adds data.\n\n**Grain**\nOne record per sku along with the creator organization ID.\n\n**Purpose**\nUsed to distinctly identify and store sku with respect to creator organisation\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain"}, "DSR.input_sku_grouping": {"unique_id": "DSR.input_sku_grouping", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/inputtables_docs.md", "original_file_path": "models/docs/inputtables_docs.md", "name": "input_sku_grouping", "block_contents": "**Description**\n\nContains groups of sku defined on certain attributes and with a group name along with value. This means there could be multiple sku which share similar products attribute and an creator organisation can match them together.\n\n\n**Grain**\nOne record per sku id for creator organisation, subject organisation and group name\n\n**Purpose**\nGroups can be defined for sku which can share similar attributes.\nCreator such as atheon can create its own group with a unique group name and assign a group value to all group sku\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain"}, "DSR.access_level": {"unique_id": "DSR.access_level", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "access_level", "block_contents": "Access to data is through one of the following access levels:\n100 - Explicit - Organisation is the creator or source of the data - reserved for source databases\n200 - Implicit - Organisation is a party to a transaction\n300 - Acquired - Entitlement acquired through a \u201cvisibility process\u201d for metrics downstream of metrics implicitly given\n400 - Delegated - Delegation from one of the above access levels to another organisation"}, "DSR.attributes": {"unique_id": "DSR.attributes", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "attributes", "block_contents": "Extra attributes\\values that defines the product\\locations\\promotion."}, "DSR.base_forecast_date": {"unique_id": "DSR.base_forecast_date", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "base_forecast_date", "block_contents": "Date when forecast was created"}, "DSR.base_unit": {"unique_id": "DSR.base_unit", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "base_unit", "block_contents": "Base unit for specific sku\\product"}, "DSR.bin_waste_eaches": {"unique_id": "DSR.bin_waste_eaches", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "bin_waste_eaches", "block_contents": "Number of eaches that have been thrown into the bin entirely unsold and classed as waste."}, "DSR.bin_waste_value": {"unique_id": "DSR.bin_waste_value", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "bin_waste_value", "block_contents": "Value of product that has been thrown into the bin entirely unsold and classed as waste."}, "DSR.brand": {"unique_id": "DSR.brand", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "brand", "block_contents": "Brand of the product"}, "DSR.business_organisation_name": {"unique_id": "DSR.business_organisation_name", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "business_organisation_name", "block_contents": "Business organisation name"}, "DSR.business_organisation_number": {"unique_id": "DSR.business_organisation_number", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "business_organisation_number", "block_contents": "Business organisation number"}, "DSR.business_organisation_number_from": {"unique_id": "DSR.business_organisation_number_from", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "business_organisation_number_from", "block_contents": "Business organisation number of the supplier from which the case\\sku is coming from"}, "DSR.case_size": {"unique_id": "DSR.case_size", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "case_size", "block_contents": "Size of the case."}, "DSR.cases_fulfilled_in": {"unique_id": "DSR.cases_fulfilled_in", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "cases_fulfilled_in", "block_contents": "Number of cases fulfilled by the supplier."}, "DSR.cases_ordered_in": {"unique_id": "DSR.cases_ordered_in", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "cases_ordered_in", "block_contents": "Number of cases ordered by the retailer to the supplier."}, "DSR.cases_required": {"unique_id": "DSR.cases_required", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "cases_required", "block_contents": "cases planned to be ordered by the depot to the supplier"}, "DSR.cases_required_lower": {"unique_id": "DSR.cases_required_lower", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "cases_required_lower", "block_contents": "Lower limit of cases planned to be ordered by the depot to the supplier"}, "DSR.cases_required_upper": {"unique_id": "DSR.cases_required_upper", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "cases_required_upper", "block_contents": "upper limit of cases planned to be ordered by the depot to the supplier"}, "DSR.consumer_unit_id": {"unique_id": "DSR.consumer_unit_id", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "consumer_unit_id", "block_contents": "Unique ID for a product which posses same attributes and can range across various org sku with different sku. The Consumer Unit conceptual entity contains a distinct list of all true global Consumer Units"}, "DSR.created_at": {"unique_id": "DSR.created_at", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "created_at", "block_contents": "Date when forecast was created"}, "DSR.created_timestamp": {"unique_id": "DSR.created_timestamp", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "created_timestamp", "block_contents": "Timestamp when the records was entered into the input table and feeded to DSR."}, "DSR.creator_business_organisation_number": {"unique_id": "DSR.creator_business_organisation_number", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "creator_business_organisation_number", "block_contents": "Organisation number for the organisation who created this entry. This would be morrisons in case when Morrison will create this entry"}, "DSR.creator_organisation_id": {"unique_id": "DSR.creator_organisation_id", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "creator_organisation_id", "block_contents": "Organisation ID for the organisation who created this entry. This ID will be created internally by DSR with help of creator business org number and creator origin org number"}, "DSR.creator_origin_organisation_number": {"unique_id": "DSR.creator_origin_organisation_number", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "creator_origin_organisation_number", "block_contents": "Origin organisation number of the row entry creator. It represent who created this organisation. It will be NULL as atheon does not have an origin Organisation number for the organisation who created this entry."}, "DSR.day": {"unique_id": "DSR.day", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "day", "block_contents": "Current day of the year. Starting from 1st January."}, "DSR.day_date": {"unique_id": "DSR.day_date", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "day_date", "block_contents": "Unique full date of the day in YYYY-MM-DD format."}, "DSR.day_date_from": {"unique_id": "DSR.day_date_from", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "day_date_from", "block_contents": ""}, "DSR.day_date_to": {"unique_id": "DSR.day_date_to", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "day_date_to", "block_contents": ""}, "DSR.day_of_month": {"unique_id": "DSR.day_of_month", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "day_of_month", "block_contents": "Current day of the month. Starting from 1st of every month."}, "DSR.day_of_week": {"unique_id": "DSR.day_of_week", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "day_of_week", "block_contents": "Current day of the week. Starting from start of every week."}, "DSR.day_of_year": {"unique_id": "DSR.day_of_year", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "day_of_year", "block_contents": "Current day of the year. Starting from 1st January."}, "DSR.dayofweeknumber": {"unique_id": "DSR.dayofweeknumber", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "dayofweeknumber", "block_contents": "Current day of the week. Starting from start of every week."}, "DSR.delegated_status": {"unique_id": "DSR.delegated_status", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "delegated_status", "block_contents": ""}, "DSR.delegatee_organisation_id": {"unique_id": "DSR.delegatee_organisation_id", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "delegatee_organisation_id", "block_contents": ""}, "DSR.delegatee_organisation_number": {"unique_id": "DSR.delegatee_organisation_number", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "delegatee_organisation_number", "block_contents": ""}, "DSR.delegatee_origin_organisation_number": {"unique_id": "DSR.delegatee_origin_organisation_number", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "delegatee_origin_organisation_number", "block_contents": ""}, "DSR.delegator_organisation_number": {"unique_id": "DSR.delegator_organisation_number", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "delegator_organisation_number", "block_contents": ""}, "DSR.delegator_origin_organisation_number": {"unique_id": "DSR.delegator_origin_organisation_number", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "delegator_origin_organisation_number", "block_contents": ""}, "DSR.descendant_organisation_id": {"unique_id": "DSR.descendant_organisation_id", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "descendant_organisation_id", "block_contents": ""}, "DSR.description": {"unique_id": "DSR.description", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "description", "block_contents": "Full name\\short description of the product."}, "DSR.end_date": {"unique_id": "DSR.end_date", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "end_date", "block_contents": "Promotion end date."}, "DSR.epos_eaches": {"unique_id": "DSR.epos_eaches", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "epos_eaches", "block_contents": ""}, "DSR.epos_value": {"unique_id": "DSR.epos_value", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "epos_value", "block_contents": ""}, "DSR.forecast_components": {"unique_id": "DSR.forecast_components", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "forecast_components", "block_contents": ""}, "DSR.forecast_date": {"unique_id": "DSR.forecast_date", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "forecast_date", "block_contents": "Date when the forecast was published."}, "DSR.geographic_location": {"unique_id": "DSR.geographic_location", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "geographic_location", "block_contents": "Geographic coordinates of the location. It comprises of longitutde and latitude."}, "DSR.group_id": {"unique_id": "DSR.group_id", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "group_id", "block_contents": "An unique id generated for every group. It is internally generated by DSR using creator_origin_organisation_number,creator_business_organisation_number and group_name"}, "DSR.group_name": {"unique_id": "DSR.group_name", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "group_name", "block_contents": "Name of the group. Eg. It can be NUTS1"}, "DSR.group_value": {"unique_id": "DSR.group_value", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "group_value", "block_contents": "Actual group value which defines the group for the respective entry. Eg. It can be London etc."}, "DSR.grouping_key": {"unique_id": "DSR.grouping_key", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "grouping_key", "block_contents": "An unique id which define similar cases together."}, "DSR.gtin": {"unique_id": "DSR.gtin", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "gtin", "block_contents": "A Global Trade Item Number (GTIN) is a unique and internationally recognised identifier for a product."}, "DSR.individual_units": {"unique_id": "DSR.individual_units", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "individual_units", "block_contents": "Number of individual units that comprises the SKU"}, "DSR.is_ghost": {"unique_id": "DSR.is_ghost", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "is_ghost", "block_contents": "There are cases when the actual facts contains some dimension which are not present in the dimension table or not yet provided but the retailer.This flag will indicate whether the entry is provided by retailer through dimension data or it was just part of the fact data."}, "DSR.item_id": {"unique_id": "DSR.item_id", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "item_id", "block_contents": ""}, "DSR.level": {"unique_id": "DSR.level", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "level", "block_contents": ""}, "DSR.loaded_timestamp": {"unique_id": "DSR.loaded_timestamp", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "loaded_timestamp", "block_contents": "Timestamp when the data was loaded into the input tables to DSR."}, "DSR.location_function": {"unique_id": "DSR.location_function", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "location_function", "block_contents": "Defines whether the location is a Depot or a store. It is represented by point of sale and distribution location"}, "DSR.location_group_id": {"unique_id": "DSR.location_group_id", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "location_group_id", "block_contents": "An unique ID which define a location group. It is internally generated by DSR using the parent location ID."}, "DSR.location_id": {"unique_id": "DSR.location_id", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "location_id", "block_contents": "An unique ID which define a location It is internally generated by DSR using the origin_organisation_number,business_organisation_number,organisation_location_id and location_function"}, "DSR.location_mapping_id": {"unique_id": "DSR.location_mapping_id", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "location_mapping_id", "block_contents": "An unique ID which define every record in the table."}, "DSR.logisticitem_id": {"unique_id": "DSR.logisticitem_id", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "logisticitem_id", "block_contents": "An unique ID which define every case in the table. It's is internally generated using origin_organisation_number,business_organisation_number and organisation_case"}, "DSR.logisticitem_stg_id": {"unique_id": "DSR.logisticitem_stg_id", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "logisticitem_stg_id", "block_contents": "An unique ID which defines every record in stg_case_group table"}, "DSR.model_version": {"unique_id": "DSR.model_version", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "model_version", "block_contents": "Model version used to generate the forecast."}, "DSR.month": {"unique_id": "DSR.month", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "month", "block_contents": "Specific calendar Month in numeric representation"}, "DSR.month_name": {"unique_id": "DSR.month_name", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "month_name", "block_contents": "Specific calendar Month in 3 initial letters"}, "DSR.net_quantity": {"unique_id": "DSR.net_quantity", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "net_quantity", "block_contents": "Total quantity of sku eg 100ml, 250g"}, "DSR.org_group_type_id": {"unique_id": "DSR.org_group_type_id", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "org_group_type_id", "block_contents": "An unique key generated for every group of the creator organisation. It's generated using creator bsuiness and origin organisation number along with group name"}, "DSR.organisation_case": {"unique_id": "DSR.organisation_case", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "organisation_case", "block_contents": "Case number received from the input feeder to dsr."}, "DSR.organisation_group_id": {"unique_id": "DSR.organisation_group_id", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "organisation_group_id", "block_contents": "An unique id generated for every organisation group. It is parent org id for a organisation which are created by atheon"}, "DSR.organisation_id": {"unique_id": "DSR.organisation_id", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "organisation_id", "block_contents": "An unique ID generated for every organisation. It's generated using creator bsuiness and origin organisation number."}, "DSR.organisation_id_from": {"unique_id": "DSR.organisation_id_from", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "organisation_id_from", "block_contents": "Specifies the organisation \\ supplier from where product\\case is supplied to the depot."}, "DSR.organisation_id_to": {"unique_id": "DSR.organisation_id_to", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "organisation_id_to", "block_contents": "Specifies the depot organisation ID where product\\cases is being supplied by the  organisation \\ supplier."}, "DSR.organisation_location_id": {"unique_id": "DSR.organisation_location_id", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "organisation_location_id", "block_contents": "An unique ID for every location of a organisation. It generated using origin and business org number along with location number."}, "DSR.organisation_location_id_from": {"unique_id": "DSR.organisation_location_id_from", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "organisation_location_id_from", "block_contents": "Specifies the depot location id from where product\\case is supplied to the store."}, "DSR.organisation_location_id_to": {"unique_id": "DSR.organisation_location_id_to", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "organisation_location_id_to", "block_contents": "Specifies the store location ID where product\\cases is being supplied by the depot."}, "DSR.organisation_name": {"unique_id": "DSR.organisation_name", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "organisation_name", "block_contents": "Full organisation name"}, "DSR.organisation_sku": {"unique_id": "DSR.organisation_sku", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "organisation_sku", "block_contents": "SKU(Stock keeping unit) specified by the retailer for a product."}, "DSR.organisation_type": {"unique_id": "DSR.organisation_type", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "organisation_type", "block_contents": "Specifies the organisation type. eg. retailer or supplier"}, "DSR.origin_file": {"unique_id": "DSR.origin_file", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "origin_file", "block_contents": ""}, "DSR.origin_organisation_id": {"unique_id": "DSR.origin_organisation_id", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "origin_organisation_id", "block_contents": "An unique ID for the organisation which created the subject organisation."}, "DSR.origin_organisation_number": {"unique_id": "DSR.origin_organisation_number", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "origin_organisation_number", "block_contents": "Number of the organisation which created the subject organisation"}, "DSR.parent_business_organisation_number": {"unique_id": "DSR.parent_business_organisation_number", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "parent_business_organisation_number", "block_contents": "Number of the organisation which created the child organisation."}, "DSR.parent_location_function": {"unique_id": "DSR.parent_location_function", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "parent_location_function", "block_contents": "It specifies the whether the parent location is a point of sale or distribution center. It is used to generate parent location ID."}, "DSR.parent_location_id": {"unique_id": "DSR.parent_location_id", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "parent_location_id", "block_contents": "Unique ID assigned to parent location."}, "DSR.parent_organisation_id": {"unique_id": "DSR.parent_organisation_id", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "parent_organisation_id", "block_contents": "Unique ID assigned to parent organisation ."}, "DSR.parent_organisation_location_id": {"unique_id": "DSR.parent_organisation_location_id", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "parent_organisation_location_id", "block_contents": "Location ID of the parent organisation."}, "DSR.parent_origin_organisation_number": {"unique_id": "DSR.parent_origin_organisation_number", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "parent_origin_organisation_number", "block_contents": "Number of the organisation who created the parent organisation."}, "DSR.parentage_id": {"unique_id": "DSR.parentage_id", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "parentage_id", "block_contents": "Unique id assigned to every record in the table."}, "DSR.product_id": {"unique_id": "DSR.product_id", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "product_id", "block_contents": "DSR generated unique ID for every SKU for retailer."}, "DSR.product_type": {"unique_id": "DSR.product_type", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "product_type", "block_contents": "Indicates whether this record pertains to a SKU or Case"}, "DSR.promotion_id": {"unique_id": "DSR.promotion_id", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "promotion_id", "block_contents": "DSR generated unique id assigned to every promotion."}, "DSR.promotion_number": {"unique_id": "DSR.promotion_number", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "promotion_number", "block_contents": "Promotion number as assigned by the retailer."}, "DSR.ranged": {"unique_id": "DSR.ranged", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "ranged", "block_contents": "Specifies whether the sku is ranged for for a store. It indicates range using boolean flags."}, "DSR.rank": {"unique_id": "DSR.rank", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "rank", "block_contents": "Defines rank of a given record for the current load of the data."}, "DSR.rtc_epos_eaches": {"unique_id": "DSR.rtc_epos_eaches", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "rtc_epos_eaches", "block_contents": ""}, "DSR.rtc_epos_value": {"unique_id": "DSR.rtc_epos_value", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "rtc_epos_value", "block_contents": ""}, "DSR.rtc_reduction_value": {"unique_id": "DSR.rtc_reduction_value", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "rtc_reduction_value", "block_contents": ""}, "DSR.runstartedtime": {"unique_id": "DSR.runstartedtime", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "runstartedtime", "block_contents": "Timestamp when the dbt run was kicked off to process the record. This will remain for all the records which are impacted by a single dbt run."}, "DSR.source": {"unique_id": "DSR.source", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "source", "block_contents": "Defines sources for the respective grain. Since , this table will have data coming from SKU and cases, this column will represent the actual source of the LOD."}, "DSR.source_db_id": {"unique_id": "DSR.source_db_id", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "source_db_id", "block_contents": "organisation number\\code of the data provider. Eg it will be morrions if the record was provided morrisons."}, "DSR.start_date": {"unique_id": "DSR.start_date", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "start_date", "block_contents": "Date when the promotion was started."}, "DSR.status": {"unique_id": "DSR.status", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "status", "block_contents": "check with farah"}, "DSR.stock_units": {"unique_id": "DSR.stock_units", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "stock_units", "block_contents": "Number of units for a given sku."}, "DSR.stock_value": {"unique_id": "DSR.stock_value", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "stock_value", "block_contents": "Value of the current stock for a given sku"}, "DSR.subject_business_organisation_number": {"unique_id": "DSR.subject_business_organisation_number", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "subject_business_organisation_number", "block_contents": "Business organisation number of the subject organization. It represent the organisation for which this entry is created. Eg It will be morrisons which is morrisons organisation number"}, "DSR.subject_business_organisation_number_from": {"unique_id": "DSR.subject_business_organisation_number_from", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "subject_business_organisation_number_from", "block_contents": "Business organisation number of the organisation\\supplier from where the sku is supplied."}, "DSR.subject_business_organisation_number_to": {"unique_id": "DSR.subject_business_organisation_number_to", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "subject_business_organisation_number_to", "block_contents": "Business organisation number of the organisation to which the sku is supplied."}, "DSR.subject_location_function": {"unique_id": "DSR.subject_location_function", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "subject_location_function", "block_contents": "Identifies whether the location for which the entry is created is point of sale or distribution center."}, "DSR.subject_location_id": {"unique_id": "DSR.subject_location_id", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "subject_location_id", "block_contents": "An unique id for location for which the entry is created."}, "DSR.subject_organisation_id": {"unique_id": "DSR.subject_organisation_id", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "subject_organisation_id", "block_contents": "An unique id for organisation for which the entry is created."}, "DSR.subject_organisation_id_from": {"unique_id": "DSR.subject_organisation_id_from", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "subject_organisation_id_from", "block_contents": "An unique id for organisation of the supplier which is supplying product to the depot\\store"}, "DSR.subject_organisation_id_to": {"unique_id": "DSR.subject_organisation_id_to", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "subject_organisation_id_to", "block_contents": "An unique id for organisation of the depot\\store which received products from supplier. It is usually retailer ID like 'morrisons'."}, "DSR.subject_organisation_location_id": {"unique_id": "DSR.subject_organisation_location_id", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "subject_organisation_location_id", "block_contents": "Location ID for the organisation for which this row is created."}, "DSR.subject_organisation_location_id_to": {"unique_id": "DSR.subject_organisation_location_id_to", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "subject_organisation_location_id_to", "block_contents": "Location ID of the organisation where the product is forecated to be received. It is usually the depot\\store ID."}, "DSR.subject_organisation_number": {"unique_id": "DSR.subject_organisation_number", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "subject_organisation_number", "block_contents": "Business organisation number of the subject organization. It represent the organisation for which this entry is created. It will be morrisons which is morrisons organisation number"}, "DSR.subject_organisation_sku": {"unique_id": "DSR.subject_organisation_sku", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "subject_organisation_sku", "block_contents": "sku of subject organization."}, "DSR.subject_origin_organisation_number": {"unique_id": "DSR.subject_origin_organisation_number", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "subject_origin_organisation_number", "block_contents": "Origin organisation number of the subject organization.It represent who created this subject organisation. It can be 1 as Morrisons organization is created by athoen"}, "DSR.subject_product_id": {"unique_id": "DSR.subject_product_id", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "subject_product_id", "block_contents": "an unique id generated dsr for the sku of the organisation for which the row is created"}, "DSR.table_reference": {"unique_id": "DSR.table_reference", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "table_reference", "block_contents": "The DSR fact table to which this record applies"}, "DSR.total_waste_eaches": {"unique_id": "DSR.total_waste_eaches", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "total_waste_eaches", "block_contents": ""}, "DSR.total_waste_value": {"unique_id": "DSR.total_waste_value", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "total_waste_value", "block_contents": ""}, "DSR.traded_unit_id": {"unique_id": "DSR.traded_unit_id", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "traded_unit_id", "block_contents": "The Traded Unit conceptual entity contains a distinct list of all true global Traded Units"}, "DSR.unique_key": {"unique_id": "DSR.unique_key", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "unique_key", "block_contents": "an unique id for every distinct record in the table."}, "DSR.units_fulfilled": {"unique_id": "DSR.units_fulfilled", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "units_fulfilled", "block_contents": "Number of units of sku fulfilled by the supplier."}, "DSR.units_ordered": {"unique_id": "DSR.units_ordered", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "units_ordered", "block_contents": "Number of units ordered by the retailer to the supplier."}, "DSR.units_required": {"unique_id": "DSR.units_required", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "units_required", "block_contents": "Units planned to be ordered by the depot to the supplier"}, "DSR.units_required_lower": {"unique_id": "DSR.units_required_lower", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "units_required_lower", "block_contents": "Lower limit of units planned to be ordered by the depot to the supplier"}, "DSR.units_required_upper": {"unique_id": "DSR.units_required_upper", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "units_required_upper", "block_contents": "upper limit of units planned to be ordered by the depot to the supplier"}, "DSR.unq_calendar_id": {"unique_id": "DSR.unq_calendar_id", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "unq_calendar_id", "block_contents": "an unique id for every distinct record in the table."}, "DSR.week_id": {"unique_id": "DSR.week_id", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "week_id", "block_contents": "Current week of the year. Starting from 1st week of January."}, "DSR.week_of_year": {"unique_id": "DSR.week_of_year", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "week_of_year", "block_contents": "Current week of the year. Starting from 1st week of January."}, "DSR.weekcommencing": {"unique_id": "DSR.weekcommencing", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "weekcommencing", "block_contents": "Date in YYYY-MM-DD format when the week starts"}, "DSR.weekending": {"unique_id": "DSR.weekending", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "weekending", "block_contents": "Date in YYYY-MM-DD format when the weekends."}, "DSR.year": {"unique_id": "DSR.year", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "year", "block_contents": "Year in YYYY format."}, "DSR.year_id": {"unique_id": "DSR.year_id", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "year_id", "block_contents": "Year in YYYY format."}, "DSR.organisation_product": {"unique_id": "DSR.organisation_product", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "organisation_product", "block_contents": "SKU(Stock keeping unit) specified by the retailer for a product."}, "DSR.location_group_name": {"unique_id": "DSR.location_group_name", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "location_group_name", "block_contents": ""}, "DSR.order_code": {"unique_id": "DSR.order_code", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/columns_docs.md", "original_file_path": "models/docs/columns_docs.md", "name": "order_code", "block_contents": "Actual Order number used to place the order."}, "DSR.dim_cu": {"unique_id": "DSR.dim_cu", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "dim_cu", "block_contents": "**Description**\n\nContains distinct DSR Consumer Units. A consumer unit is defined as an organisationally defined group of SKUs. This means that there could theoretically be overlapping or duplicate \"real world\" consumer units; consumer units are scoped to the creator organisation.\n\nModel Operation :- Incrementally adds data.\n\n**Grain**\nOne record per consumer unit along with the creator organization ID.\n\n**Purpose**\nCurrently this is simply a distinct list of all DSR Consumer Units, created for completeness of table structure. Attributes will be added in future when a design has been agreed.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.dim_date": {"unique_id": "DSR.dim_date", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "dim_date", "block_contents": "**Description**\n\nContains distinct list of all days with standardised attributes such as month, month_name, date_of_week etc. \n\nModel Operation :- Incrementally adds data.\n\n**Grain**\nOne record per day_date in YYYY-MM-DD format.\n\n**Purpose**\nThe Day_date describes the days that facts occur on.\n\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.dim_location": {"unique_id": "DSR.dim_location", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "dim_location", "block_contents": "**Description**\n\nContains details such as longitude, latitudes etc for all physical entities (depot, store, etc) .It also contains surrogate key(hash key) for every unique record and unions the ghost records which are only present in fact but are yet to provided to dimension which are stored with \"Is_ghost\" set to \"True\"\n\nModel Operation :- Incrementally adds data.\n\n**Grain**\nOne record per physical location describing its immutable attributes as stated by the organisation\n\n**Purpose**\nTo store attributes of the location in one place and have a large number of attributes assigned to them. We add organisation to allow multiple \"opinions\" to be accepted (and grouped later)\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.dim_location_group": {"unique_id": "DSR.dim_location_group", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "dim_location_group", "block_contents": "**Description**\nContains groups of location defined on certain attributes and with a group name along with value\n\nModel Operation :- Incrementally adds data.\n\n**Grain**\nOne record per location group id for creator organisation, subject organisation, location function and group name\n\n**Purpose**\nGroups can be defined for locations which can share similar attributes.\nCreator such as atheon can create its own group with a unique group name and assign a group value to all group locations\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.dim_location_parentage": {"unique_id": "DSR.dim_location_parentage", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "dim_location_parentage", "block_contents": "**Description**\n\nContains parentage for locations. It defines parents location for a subject organisation created by the creator organisation.\n\nModel Operation :- Incrementally adds data.\n\n**Grain**\nOne record defines parent location for a subject location.\n\n**Purpose**\nUsed to define parentage for physical location. The parentage can be defined by creator organisation for a subject organisation which will allow multiple parentage for same location and priority can be given on the basis of creator org ID while retrieving the information\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.dim_logisticitem": {"unique_id": "DSR.dim_logisticitem", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "dim_logisticitem", "block_contents": "**Description**\n\nContains distinct cases. A logisticitem is defined as an organisationally defined case. Logistic item are scoped to the creator organisation.It also contains surrogate key(hash key) for every unique record and unions the ghost records which are only present in fact but are yet to provided to dimension which are stored with \"Is_ghost\" set to \"True\"\n\nModel Operation :- Incrementally adds data.\n\n**Grain**\nOne record per case along with the creator organization ID.\n\n**Purpose**\nUsed to distinctly identify and store cases with respect to creator organisation\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.dim_logisticitem_mapping": {"unique_id": "DSR.dim_logisticitem_mapping", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "dim_logisticitem_mapping", "block_contents": "**Description**\n\n\n**Grain**\n\n\n**Purpose**\n\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.dim_organisation": {"unique_id": "DSR.dim_organisation", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "dim_organisation", "block_contents": "**Description**\n\nContains list of all organization. Creator can defines attributes for an organisation.It also contains surrogate key(hash key) for every unique record and unions the ghost records which are only present in fact but are yet to provided to dimension which are stored with \"Is_ghost\" set to \"True\"\n\nModel Operation :- Incrementally adds data\n\n**Grain**\nOne record per organization.\n\n**Purpose**\nUsed to distinctly identify and store organisation.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.dim_organisation_mapping": {"unique_id": "DSR.dim_organisation_mapping", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "dim_organisation_mapping", "block_contents": "**Description**\n\nContains distinct organization. A unique organisation Id is defined by the organisation number and Id of the organisation which creates it.\n\nModel Operation :- Incrementally adds data\n\n**Grain**\nOne record per organization.\n\n**Purpose**\nUsed to define mapping for the organisation. It allows a same organisation differentiated on the basis of the creator organisation.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.dim_organisation_parentage": {"unique_id": "DSR.dim_organisation_parentage", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "dim_organisation_parentage", "block_contents": "**Description**\n\nContains list of organisation and defines the parent organisation for them which can be entered by a creator organisation\n\nModel Operation :- Incrementally adds data\n\n**Grain**\nOne record per organization per creator organisation\n\n**Purpose**\nUsed to define parentage for an organisation. A creator organsaition can define the parentage for any organsaition.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.dim_org_calendar": {"unique_id": "DSR.dim_org_calendar", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "dim_org_calendar", "block_contents": "**Description**\nContains distinct list of days which is defined for specific organisation\n\nModel Operation :- Incrementally adds data.\n\n**Grain**\nOne records per day_date in YYYY-MM-DD format.\n\n**Purpose**\nThe Day_date describes the days that facts occur on.\n\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.dim_product": {"unique_id": "DSR.dim_product", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "dim_product", "block_contents": "**Description**\n\nContains distinct sku. A product_ID is defined as an organisationally defined sku. product id are scoped to the creator organisation.It also contains surrogate key(hash key) for every unique record and unions the ghost records which are only present in fact but are yet to provided to dimension which are stored with \"Is_ghost\" set to \"True\"\n\nModel Operation :- Incrementally adds data.\n\n**Grain**\nOne record per sku along with the creator organization ID.\n\n**Purpose**\nUsed to distinctly identify and store sku with respect to creator organisation\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.dim_product_group": {"unique_id": "DSR.dim_product_group", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "dim_product_group", "block_contents": "**Description**\n\nContains groups of sku defined on certain attributes and with a group name along with value. This means there could be multiple sku which share similar products attribute and an creator organisation can match them together.\n\nModel Operation :- Incrementally adds data.\n\n**Grain**\nOne record per sku id for creator organisation, subject organisation and group name\n\n**Purpose**\nGroups can be defined for sku which can share similar attributes.\nCreator such as atheon can create its own group with a unique group name and assign a group value to all group sku\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.dim_product_mapping": {"unique_id": "DSR.dim_product_mapping", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "dim_product_mapping", "block_contents": "**Description**\n\n\n**Grain**\n\n\n**Purpose**\n\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.dim_promotion": {"unique_id": "DSR.dim_promotion", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "dim_promotion", "block_contents": "**Description**\n\nContains distinct promotion defined for an organisation. A promotion is defined as an organisationally defined promotion with a promotion number , start and end date. Promotions are scoped to the creator organisation for a subject organisation.\n\nModel Operation :- Delete the old promotion(If present for all sku) and new data for a promotion. \n\n**Grain**\nOne record per promotion per subject organisation per sku.\n\n**Purpose**\nUsed to distinctly identify and store promotion details for an organisation. It details all the attributes for promotion like start date, end date, promotion number and sku.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.dim_tu": {"unique_id": "DSR.dim_tu", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "dim_tu", "block_contents": "**Description**\n\nContains distinct DSR Traded Units. A traded unit is defined as an organisationally defined group of cases. This means that there could theoretically be overlapping or duplicate \"real world\" traded units; traded units are scoped to the creator organisation.\n\nModel Operation :- Incrementally adds data.\n\n**Grain**\nOne record per traded unit along with the creator organization ID.\n\n**Purpose**\nCurrently this is simply a distinct list of all DSR traded Units, created for completeness of table structure. Attributes will be added in future when a design has been agreed.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.fact_act_inv_locationdaycase": {"unique_id": "DSR.fact_act_inv_locationdaycase", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "fact_act_inv_locationdaycase", "block_contents": "**Description**\n\nFact Type: Actual\n\nData Representation: Inventory\n\nContents: Contains actual inventory recorded at a location on a day at case level. This is measured at a point in time defined by the retailer to be representative of that day.\nThe table contains both depot and store inventory information, but only where case level information is available. Data is NOT derived backwards from SKU level inventory.\n\nModel Operation: Incrementally adds new data. Joins dimensions based on business keys to ensure referential integrity and to retrieve and store DSR table ID's.\n\n**Grain**\nOne record per location, per day, per case. \n\nRecords only where source data submitted, therefore there may be \"zero\" inventory records, but the data is not densified for NULL records.\n\n**Purpose**\nUsed to provide stock information at specific locations over time. This data can be aggregated to the SKU level by joining the logistic item to provide a consistent stock picture where stock measures are inconsistent\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.fact_act_inv_locationdaysku": {"unique_id": "DSR.fact_act_inv_locationdaysku", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "fact_act_inv_locationdaysku", "block_contents": "**Description**\n\nFact Type: Actual\n\nData Representation: Inventory\n\nContents: Contains actual inventory recorded at a location on a day at sku level. This is measured at a point in time defined by the retailer to be representative of that day.\nThe table contains both depot and store inventory information, but only where sku level information is available.\n\nModel Operation: Incrementally adds new data. Joins dimensions based on business keys to ensure referential integrity and to retrieve and store DSR table ID's.\n\n\n**Grain**\nOne record per location, per day, per sku. \n\nRecords only where source data submitted, therefore there may be \"zero\" inventory records, but the data is not densified for NULL records.\n\n**Purpose**\nUsed to provide stock information at specific locations over time. The data is aggregated to the SKU level by joining the logistic item with this table to provide a consistent stock picture where stock measures are inconsistent.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.fact_act_mvt_depotstoredaysku": {"unique_id": "DSR.fact_act_mvt_depotstoredaysku", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "fact_act_mvt_depotstoredaysku", "block_contents": "**Description**\n\nFact Type: Actual\n\nData Representation: Movement\n\nContents: Contains actual movement recorded between a depot and a store on a day at sku level. This is measured at a point in time defined by the retailer to be representative of that day.\n\nModel Operation: Incrementally adds new data. Joins dimensions based on business keys to ensure referential integrity and to retrieve and store DSR table ID's.\n\n**Grain**\nOne record per sku movement per organisation_location_id_from to organisation_location_id_to per day.\n\n**Purpose**\nUsed to provide movement information of a sku from depot to store for a day. The data is aggregated to provide information on actual units ordered by a store and unites fulfilled by the depot.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.fact_act_mvt_orgdepotdaycase": {"unique_id": "DSR.fact_act_mvt_orgdepotdaycase", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "fact_act_mvt_orgdepotdaycase", "block_contents": "**Description**\n\nFact Type: Actual\n\nData Representation: Movement\n\nContents: Contains actual movement recorded between a organisation\\supplier and a depot on a day at case level. This is measured at a point in time defined by the retailer to be representative of that day.\n\nModel Operation: Incrementally adds new data. Joins dimensions based on business keys to ensure referential integrity and to retrieve and store DSR table ID's.\n\n**Grain**\nOne record per case movement per supplier to depot per day.\n\n**Purpose**\nUsed to provide movement information of a case from supplier organisation to depot for a day. The data is aggregated to provide information on actual case ordered by a retailer and unites fulfilled by the supplier to retailers depot.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.fact_act_mvt_orgdepotdaysku": {"unique_id": "DSR.fact_act_mvt_orgdepotdaysku", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "fact_act_mvt_orgdepotdaysku", "block_contents": "**Description**\n\nFact Type: Actual\n\nData Representation: Movement\n\nContents: Contains actual movement recorded between a organisation\\supplier and a depot on a day at sku level. This is measured at a point in time defined by the retailer to be representative of that day.\n\nModel Operation: Incrementally adds new data. Joins dimensions based on business keys to ensure referential integrity and to retrieve and store DSR table ID's.\n\n**Grain**\nOne record per sku movement per supplier to depot per day.\n\n**Purpose**\nUsed to provide movement information of a sku from supplier organisation to depot for a day. The data is aggregated to provide information on actual sku ordered by a retailer and unites fulfilled by the supplier to retailers depot.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.fact_act_mvt_storedaysku": {"unique_id": "DSR.fact_act_mvt_storedaysku", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "fact_act_mvt_storedaysku", "block_contents": "**Description**\n\nFact Type: Actual\n\nData Representation: Movement\n\nContents: Contains actual movement recorded for a store at sku level. This is measured at a point in time defined by the retailer to be representative of that day.\n\nModel Operation: Incrementally adds new data. Joins dimensions based on business keys to ensure referential integrity and to retrieve and store DSR table ID's.\n\n**Grain**\nOne record per store, per day, per sku. \n\n\n**Purpose**\nUsed to provide movement information for a SKU at specific store over time. <<Epos>> data to enter\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.fact_pln_inv_storedaysku": {"unique_id": "DSR.fact_pln_inv_storedaysku", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "fact_pln_inv_storedaysku", "block_contents": "**Description**\n\nFact Type: Plan\n\nData Representation: Inventory\n\nContents: Contains planned inventory recorded for a store at sku level. This is measured at a point in time defined by the retailer to be representative of that day.\n\nModel Operation: Incrementally adds new data. Joins dimensions based on business keys to ensure referential integrity and to retrieve and store DSR table ID's.\n\n**Grain**\nOne record per store, per day, per sku.\n\n**Purpose**\nUsed to provide ranging information for a sku to a store for a day.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.fact_pln_mvt_daysku": {"unique_id": "DSR.fact_pln_mvt_daysku", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "fact_pln_mvt_daysku", "block_contents": "**Description**\n\n\n**Grain**\n\n\n**Purpose**\n\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.fact_pln_mvt_depotstoredaysku": {"unique_id": "DSR.fact_pln_mvt_depotstoredaysku", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "fact_pln_mvt_depotstoredaysku", "block_contents": "**Description**\n\nFact Type: Plan\n\nData Representation: Movement\n\nContents: Contains plan movement recorded between a depot and a store on a day at sku level. This is measured at a point in time defined by the retailer to be representative of that day.\n\nModel Operation: Incrementally adds new data. Joins dimensions based on business keys to ensure referential integrity and to retrieve and store DSR table ID's.\n\n**Grain**\nOne record per sku movement per organisation_location_id_from to organisation_location_id_to per day.\n\n**Purpose**\nUsed to provide planned movement information of a sku from depot to store for a day. The data is aggregated to provide information on units that is planned by store to order.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.fact_pln_mvt_orgdepotdaysku": {"unique_id": "DSR.fact_pln_mvt_orgdepotdaysku", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "fact_pln_mvt_orgdepotdaysku", "block_contents": "**Description**\n\nFact Type: Plan\n\nData Representation: Movement\n\nContents: Contains planned movement recorded between a organisation\\supplier and a depot on a day at sku level. This is measured at a point in time defined by the retailer(Identified by creator organisation ID) to be representative of that day.\n\nModel Operation: Incrementally adds new data. Joins dimensions based on business keys to ensure referential integrity and to retrieve and store DSR table ID's.\n\n**Grain**\nOne record per case movement per supplier to depot per day.\n\n**Purpose**\nUsed to provide planned movement information of a sku from supplier organisation to depot for a day. The data is aggregated to provide information on planned sku ordered by a retailer and unites fulfilled by the supplier to retailers depot.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.fact_pln_mvt_storedaysku": {"unique_id": "DSR.fact_pln_mvt_storedaysku", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "fact_pln_mvt_storedaysku", "block_contents": "**Description**\n\nFact Type: Plan\n\nData Representation: Movement\n\nContents: Contains planned movement recorded between a organisation\\supplier and a depot on a day at sku level. This is measured at a point in time defined by the organization(Identified by creator organisation ID) to be representative of that day.\n\nModel Operation: Incrementally adds new data. Joins dimensions based on business keys to ensure referential integrity and to retrieve and store DSR table ID's.\n\n**Grain**\nOne record per case movement per supplier to depot per day.\n\n**Purpose**\nUsed to provide planned movement information of a sku from supplier organisation to depot for a day. The data is aggregated to provide information on planned sku ordered by a retailer and unites fulfilled by the supplier to retailers depot\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.int_allfacts_visibility": {"unique_id": "DSR.int_allfacts_visibility", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "int_allfacts_visibility", "block_contents": "**Description**\n\nContents: Explicit and Implicit visibilty records for all fact tables, at the individual day, SKU level.\n\nModel Operation: Incrementally creates Explicit and Implicit visibilty records for all fact tables that have new data. Contains initial configuration that allows for appropriate record creation for every fact.\n\n**Grain**\nOne record per day, per organisation, per item.\n\n**Purpose**\nCreates the foundational \"event\" records to enable a slowly changing dimension to be created.\n\n**Created On**\n07/07/2021\n\n**Created By**\nAlex Paterson\n\n**Important**"}, "DSR.int_all_ghost_location": {"unique_id": "DSR.int_all_ghost_location", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "int_all_ghost_location", "block_contents": "**Description**\n\nModel Type: intermediary\n\nContents: Contains the dimension data which is not yet provided by the retailer to the dimension tables. This data will be integrated in the dimension table with is_ghost flag as \"true\" to differentiate from the actual dimension data from retailer. \n\nModel Operation: Incrementally adds new data. \n\n**Grain**\nOne record per location per organisation per location function\n\n**Purpose**\nUsed to ensure that we do not lose any fact data in case when the corresponding dimension to not yet supplied by the retailer.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.int_all_ghost_logisticitem": {"unique_id": "DSR.int_all_ghost_logisticitem", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "int_all_ghost_logisticitem", "block_contents": "**Description**\n\nModel Type: intermediary\n\nContents: Contains the dimension data which is not yet provided by the retailer to the dimension tables. This data will be integrated in the dimension table with is_ghost flag as \"true\" to differentiate from the actual dimension data from retailer. \n\nModel Operation: Incrementally adds new data. \n\n**Grain**\nOne record per logistiem(case ID) per organisation\n\n**Purpose**\nUsed to ensure that we do not lose any fact data in case when the corresponding dimension to not yet supplied by the retailer.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.int_all_ghost_organisation": {"unique_id": "DSR.int_all_ghost_organisation", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "int_all_ghost_organisation", "block_contents": "**Description**\n\nModel Type: intermediary\n\nContents: Contains the dimension data which is not yet provided by the retailer to the dimension tables. This data will be integrated in the dimension table with is_ghost flag as \"true\" to differentiate from the actual dimension data from retailer. \n\nModel Operation: Incrementally adds new data. \n\n**Grain**\nOne record per organisation.\n\n**Purpose**\nUsed to ensure that we do not lose any fact data in case when the corresponding dimension to not yet supplied by the retailer.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.int_all_ghost_product": {"unique_id": "DSR.int_all_ghost_product", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "int_all_ghost_product", "block_contents": "**Description**\n\nModel Type: intermediary\n\nContents: Contains the dimension data which is not yet provided by the retailer to the dimension tables. This data will be integrated in the dimension table with is_ghost flag as \"true\" to differentiate from the actual dimension data from retailer. \n\nModel Operation: Incrementally adds new data. \n\n**Grain**\nOne record per product id (sku) per organisation\n\n**Purpose**\nUsed to ensure that we do not lose any fact data in case when the corresponding dimension to not yet supplied by the retailer.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.int_delegated_visibility_scd": {"unique_id": "DSR.int_delegated_visibility_scd", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "int_delegated_visibility_scd", "block_contents": "**Description**\n\nContents: Visibility records that have been delegated from one organisation to another.\n\nModel Operation: Uses a macro to build a slowly changing dimension from individual dates.\n\n**Grain**\nOne recrod per fact table, per item, per date period, per organisation and optionally per location function.\n\n**Purpose**\nConforms delegated data to the final visibility table structure.\n\n**Created On**\n07/07/2021\n\n**Created By**\nAlex Paterson\n\n**Important**"}, "DSR.int_organisationsku_visibility": {"unique_id": "DSR.int_organisationsku_visibility", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "int_organisationsku_visibility", "block_contents": "**Description**\n\nContents: Slowly changing dimension visibility records for 1. Explicit access, 2. Implicit access and 3. Acquired access.\n\nModel Operation: Unions visibility access types 1-2 with visibility access type 3 (acquired visibility). Fully materialises as a table.\n\n**Grain**\nOne recrod per fact table, per item, per date period, per organisation and optionally per location function.\n\n**Purpose**\nUnions the access levels together so they reside in one table.\n\n**Created On**\n07/07/2021\n\n**Created By**\nAlex Paterson\n\n**Important**"}, "DSR.master_organisation": {"unique_id": "DSR.master_organisation", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "master_organisation", "block_contents": "**Description**\n\nModel Type: Seed\n\nContents: Contains the master organisation of the DSR which in our case is 'Atheon'. This organisation will have no origin organisation number.\n\nModel Operation: The data is loaded just once on special cases\n\n**Grain**\nOne record per organisation.\n\n**Purpose**\nUsed to launch the very first organisation to DSR system which is called master organisation. This organisation will create new organization\\retailer.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.seed_organisation_type": {"unique_id": "DSR.seed_organisation_type", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "seed_organisation_type", "block_contents": "**Description**\n\nModel Type: Seed\n\nContents: Contains the organisation data and defines if they are 'retailer' or 'supplier'. E.g. it will contain 'morrisons' and defines it as 'retailer'. \n\nModel Operation: The data is loaded just once on special cases\n\n**Grain**\nOne record per organisation.\n\n**Purpose**\nUsed to identify the organisation type. It can be joined with other models and used to segregate data on the basis of organisation type.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.stg_act_inv_locationdaycase": {"unique_id": "DSR.stg_act_inv_locationdaycase", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "stg_act_inv_locationdaycase", "block_contents": "**Description**\n\nModel Type: Staging\n\nContents: Contains the data coming in from input tables , eliminating duplicates and attaches uniques key to it\n\nModel Operation: Incrementally adds new data. \n\n**Grain**\nOne record per location, per day, per case. \n\n\n\n**Purpose**\nUsed to remove any duplicate data from input table and maintains store the input data locally to DSR for future use.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.stg_act_inv_locationdaysku": {"unique_id": "DSR.stg_act_inv_locationdaysku", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "stg_act_inv_locationdaysku", "block_contents": "**Description**\n\nModel Type: Staging\n\nContents: Contains the data coming in from input tables , eliminating duplicates and attaches uniques key to it\n\nModel Operation: Incrementally adds new data. \n\n**Grain**\nOne record per location, per day, per sku. \n\n**Purpose**\nUsed to remove any duplicate data from input table and maintains store the input data locally to DSR for future use.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.stg_act_mvt_depotstoredaysku": {"unique_id": "DSR.stg_act_mvt_depotstoredaysku", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "stg_act_mvt_depotstoredaysku", "block_contents": "**Description**\n\nModel Type: Staging\n\nContents: Contains the data coming in from input tables , eliminating duplicates and attaches uniques key to it\n\nModel Operation: Incrementally adds new data. \n\n**Grain**\nOne record per sku movement per depot location id to store id per day.\n\n**Purpose**\nUsed to remove any duplicate data from input table and maintains store the input data locally to DSR for future use.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.stg_act_mvt_orgdepotdaycase": {"unique_id": "DSR.stg_act_mvt_orgdepotdaycase", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "stg_act_mvt_orgdepotdaycase", "block_contents": "**Description**\n\nModel Type: Staging\n\nContents: Contains the data coming in from input tables , eliminating duplicates and attaches uniques key to it\n\nModel Operation: Incrementally adds new data. \n\n**Grain**\nOne record per case movement per supplier to depot per day.\n\n**Purpose**\nUsed to remove any duplicate data from input table and maintains store the input data locally to DSR for future use.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.stg_act_mvt_storedaysku": {"unique_id": "DSR.stg_act_mvt_storedaysku", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "stg_act_mvt_storedaysku", "block_contents": "**Description**\n\nModel Type: Staging\n\nContents: Contains the data coming in from input tables , eliminating duplicates and attaches uniques key to it\n\nModel Operation: Incrementally adds new data. \n\n**Grain**\nOne record per store, per day, per sku. \n\n\n**Purpose**\nUsed to remove any duplicate data from input table and maintains store the input data locally to DSR for future use.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.stg_calendar": {"unique_id": "DSR.stg_calendar", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "stg_calendar", "block_contents": "**Description**\n\nModel Type: Staging\n\nContents: Contains the data coming in from input tables , eliminating duplicates and attaches uniques key to it\n\nModel Operation: Incrementally adds new data. \n\n**Grain**\n\n\n**Purpose**\nUsed to remove any duplicate data from input table and maintains store the input data locally to DSR for future use.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.stg_case": {"unique_id": "DSR.stg_case", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "stg_case", "block_contents": "**Description**\n\nModel Type: Staging\n\nContents: Contains the data coming in from input tables , eliminating duplicates and attaches uniques key to it\n\nModel Operation: Incrementally adds new data. \n\n**Grain**\nOne record per consumer unit along with the creator organization ID\n\n**Purpose**\nUsed to remove any duplicate data from input table and maintains store the input data locally to DSR for future use.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.stg_case_grouping": {"unique_id": "DSR.stg_case_grouping", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "stg_case_grouping", "block_contents": "**Description**\n\nModel Type: Staging\n\nContents: Contains the data coming in from input tables , eliminating duplicates and attaches uniques key to it\n\nModel Operation: Incrementally adds new data. \n\n**Grain**\n\n\n**Purpose**\nUsed to remove any duplicate data from input table and maintains store the input data locally to DSR for future use.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.stg_date": {"unique_id": "DSR.stg_date", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "stg_date", "block_contents": "**Description**\n\nModel Type: Staging\n\nContents: Contains the data coming in from input tables , eliminating duplicates and attaches uniques key to it\n\nModel Operation: Incrementally adds new data. \n\n**Grain**\nOne records per day_date in YYYY-MM-DD format.\n\n**Purpose**\nUsed to remove any duplicate data from input table and maintains store the input data locally to DSR for future use.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.stg_delegated_visibility": {"unique_id": "DSR.stg_delegated_visibility", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "stg_delegated_visibility", "block_contents": "**Description**\n\nModel Type: Staging\n\nContents: Contains the data coming in from input tables , eliminating duplicates and attaches uniques key to it\n\nModel Operation: Incrementally adds new data. \n\n**Grain**\n\n\n**Purpose**\nUsed to remove any duplicate data from input table and maintains store the input data locally to DSR for future use.\n\n**Created On**\n07/07/2021\n\n**Created By**\nAlex Paterson\n\n**Important**"}, "DSR.stg_location": {"unique_id": "DSR.stg_location", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "stg_location", "block_contents": "**Description**\n\nModel Type: Staging\n\nContents: Contains the data coming in from input tables , eliminating duplicates and attaches uniques key to it\n\nModel Operation: Incrementally adds new data. \n\n**Grain**\nOne record per physical location describing its immutable attributes.\n\n**Purpose**\nUsed to remove any duplicate data from input table and maintains store the input data locally to DSR for future use.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.stg_location_group": {"unique_id": "DSR.stg_location_group", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "stg_location_group", "block_contents": "**Description**\n\nModel Type: Staging\n\nContents: Contains the data coming in from input tables , eliminating duplicates and attaches uniques key to it\n\nModel Operation: Incrementally adds new data. \n\n**Grain**\nOne record per location group id for creator organisation, subject organisation, location function and group name\n\n**Purpose**\nUsed to remove any duplicate data from input table and maintains store the input data locally to DSR for future use.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.stg_location_parentage": {"unique_id": "DSR.stg_location_parentage", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "stg_location_parentage", "block_contents": "**Description**\n\nModel Type: Staging\n\nContents: Contains the data coming in from input tables , eliminating duplicates and attaches uniques key to it\n\nModel Operation: Incrementally adds new data. \n\n**Grain**\nOne record defines parent location for a subject location.\n\n**Purpose**\nUsed to remove any duplicate data from input table and maintains store the input data locally to DSR for future use.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.stg_organisation": {"unique_id": "DSR.stg_organisation", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "stg_organisation", "block_contents": "**Description**\n\nModel Type: Staging\n\nContents: Contains the data coming in from input tables , eliminating duplicates and attaches uniques key to it\n\nModel Operation: Incrementally adds new data. \n\n**Grain**\nOne record per sku along with the creator organization number\n\n**Purpose**\nUsed to remove any duplicate data from input table and maintains store the input data locally to DSR for future use.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.stg_organisation_mapping": {"unique_id": "DSR.stg_organisation_mapping", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "stg_organisation_mapping", "block_contents": "**Description**\n\nModel Type: Staging\n\nContents: Contains the data coming in from input tables , eliminating duplicates and attaches uniques key to it\n\nModel Operation: Incrementally adds new data. \n\n**Grain**\nOne record per organization.\n\n**Purpose**\nUsed to remove any duplicate data from input table and maintains store the input data locally to DSR for future use.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.stg_organisation_parentage": {"unique_id": "DSR.stg_organisation_parentage", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "stg_organisation_parentage", "block_contents": "**Description**\n\nModel Type: Staging\n\nContents: Contains the data coming in from input tables , eliminating duplicates and attaches uniques key to it\n\nModel Operation: Incrementally adds new data. \n\n**Grain**\nOne record per organization per creator organisation\n\n**Purpose**\nUsed to remove any duplicate data from input table and maintains store the input data locally to DSR for future use.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.stg_pln_inv_storedaysku": {"unique_id": "DSR.stg_pln_inv_storedaysku", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "stg_pln_inv_storedaysku", "block_contents": "**Description**\n\nModel Type: Staging\n\nContents: Contains the data coming in from input tables , eliminating duplicates and attaches uniques key to it\n\nModel Operation: Incrementally adds new data. \n\n**Grain**\nOne record per store, per day, per sku.\n\n**Purpose**\nUsed to remove any duplicate data from input table and maintains store the input data locally to DSR for future use.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.stg_pln_mvt_daysku": {"unique_id": "DSR.stg_pln_mvt_daysku", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "stg_pln_mvt_daysku", "block_contents": "**Description**\n\nModel Type: Staging\n\nContents: Contains the data coming in from input tables , eliminating duplicates and attaches uniques key to it\n\nModel Operation: Incrementally adds new data. \n\n**Grain**\n\n\n**Purpose**\nUsed to remove any duplicate data from input table and maintains store the input data locally to DSR for future use.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.stg_pln_mvt_depotstoredaysku": {"unique_id": "DSR.stg_pln_mvt_depotstoredaysku", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "stg_pln_mvt_depotstoredaysku", "block_contents": "**Description**\n\nModel Type: Staging\n\nContents: Contains the data coming in from input tables , eliminating duplicates and attaches uniques key to it\n\nModel Operation: Incrementally adds new data. \n\n**Grain**\nOne record per sku movement per organisation_location_id_from to organisation_location_id_to per day.\n\n**Purpose**\nUsed to remove any duplicate data from input table and maintains store the input data locally to DSR for future use.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.stg_pln_mvt_orgdepotdaysku": {"unique_id": "DSR.stg_pln_mvt_orgdepotdaysku", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "stg_pln_mvt_orgdepotdaysku", "block_contents": "**Description**\n\nModel Type: Staging\n\nContents: Contains the data coming in from input tables , eliminating duplicates and attaches uniques key to it\n\nModel Operation: Incrementally adds new data. \n\n**Grain**\nOne record per case movement per supplier to depot per day.\n\n**Purpose**\nUsed to remove any duplicate data from input table and maintains store the input data locally to DSR for future use.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.stg_pln_mvt_storedaysku": {"unique_id": "DSR.stg_pln_mvt_storedaysku", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "stg_pln_mvt_storedaysku", "block_contents": "**Description**\n\nModel Type: Staging\n\nContents: Contains the data coming in from input tables , eliminating duplicates and attaches uniques key to it\n\nModel Operation: Incrementally adds new data. \n\n**Grain**\nOne record per case movement per supplier to depot per day.\n\n**Purpose**\nUsed to remove any duplicate data from input table and maintains store the input data locally to DSR for future use.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.stg_promotion": {"unique_id": "DSR.stg_promotion", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "stg_promotion", "block_contents": "**Description**\n\nModel Type: Staging\n\nContents: Contains the data coming in from input tables , eliminating duplicates and attaches uniques key to it\n\nModel Operation: Incrementally adds new data. \n\n**Grain**\nOne record per promotion per subject organisation per sku.\n\n**Purpose**\nUsed to remove any duplicate data from input table and maintains store the input data locally to DSR for future use.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.stg_sku": {"unique_id": "DSR.stg_sku", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "stg_sku", "block_contents": "**Description**\n\nModel Type: Staging\n\nContents: Contains the data coming in from input tables , eliminating duplicates and attaches uniques key to it\n\nModel Operation: Incrementally adds new data. \n\n**Grain**\nOne record per sku along with the creator organization number\n\n**Purpose**\nUsed to remove any duplicate data from input table and maintains store the input data locally to DSR for future use.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.stg_sku_grouping": {"unique_id": "DSR.stg_sku_grouping", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "stg_sku_grouping", "block_contents": "**Description**\n\nModel Type: Staging\n\nContents: Contains the data coming in from input tables , eliminating duplicates and attaches uniques key to it\n\nModel Operation: Incrementally adds new data. \n\n**Grain**\nOne record per sku id for creator organisation, subject organisation and group name\n\n**Purpose**\nUsed to remove any duplicate data from input table and maintains store the input data locally to DSR for future use.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.utl_organisationsku_visibility": {"unique_id": "DSR.utl_organisationsku_visibility", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "utl_organisationsku_visibility", "block_contents": "**Description**\n\nContents: Contains a record for every SKU that an organisation has gained the right to be visible to them. This visibility is date bound and scoped to each fact table. \nVisibility can be acquired though:\n1. Explicit access - Organisation is the creator or source of the data - reserved for source databases\n2. Implicit access - Organisation is a party to a transaction\n3. Acquired access - Entitlement acquired through a \u201cvisibility process\u201d for metrics downstream of metrics implicitly given\n4. Delegated access - Delegation from one of the above access levels to another organisation\n\nModel Operation: Unions visibility access types 1-3 with visibility access type 4 (delegated visibility)\n\n**Grain**\nOne recrod per fact table, per item, per date period, per organisation and optionally per location function.\n\n**Purpose**\nJoin directly to the appropriate fact table to provide pre-calculated set of products for which the organisation has rights to see\n\n**Created On**\n07/07/2021\n\n**Created By**\nAlex Paterson\n\n**Important**"}, "DSR.utl_orggroupsku_visibility": {"unique_id": "DSR.utl_orggroupsku_visibility", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "utl_orggroupsku_visibility", "block_contents": "**Description**\n\nContents: Contains a record for every SKU that an organisation group has gained the right to be visible to them. This visibility is date bound and scoped to each fact table. \nVisibility can be acquired though:\n1. Explicit access - Organisation is the creator or source of the data - reserved for source databases\n2. Implicit access - Organisation is a party to a transaction\n3. Acquired access - Entitlement acquired through a \u201cvisibility process\u201d for metrics downstream of metrics implicitly given\n4. Delegated access - Delegation from one of the above access levels to another organisation\n\nModel Operation: Takes visibility at the organisation level and rolls it up to \"organisation group\" level; i.e. the top of the organisational hierarchy.\n\n**Grain**\nOne recrod per fact table, per item, per date period, per organisation group and optionally per location function.\n\n**Purpose**\nJoin directly to the appropriate fact table to provide pre-calculated set of products for which the organisation group has rights to see\n\n**Created On**\n07/07/2021\n\n**Created By**\nAlex Paterson\n\n**Important**"}, "DSR.utl_location_hierarchy": {"unique_id": "DSR.utl_location_hierarchy", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "utl_location_hierarchy", "block_contents": "**Description**\n\nContents: Contains a record for every location and defines the parentage hierarchy. It will consolidates the parent child relationships of location,returning the top of the hierarchical tree for each location. This allows attribution of metrics to a single, top level location from all the children below.\n\nModel Operation: Takes records at the location level and rolls it up to \"location group\" level; i.e. the top of the location hierarchy.\n\n**Grain**\nOne record per location per location group\n\n**Purpose**\nUsed to identify the parentage hierarchy of a location which can be used to identify if an location is used by different supplier\\retailer by linking to same parent location id.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.utl_location_parents": {"unique_id": "DSR.utl_location_parents", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "utl_location_parents", "block_contents": "**Description**\n\nContents: Contains a record for every location and defines the parent for it. It identifies the parent location for every location(if none present than the location is parent itself).\n\nModel Operation: Takes records at the location level and defines the parent for it\n\n**Grain**\nOne record per location.\n\n**Purpose**\nUsed to identify the parent of any location.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.utl_master_organisation": {"unique_id": "DSR.utl_master_organisation", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "utl_master_organisation", "block_contents": "**Description**\n\nContents: Contains a record for master organisation which create any new retailer in DSR. It should be the first organisation in DSR universe\n\nModel Operation: It gets the data from seed_organisation which is executed only when a new\\update to master organsation is recieved\n\n**Grain**\nOne record per organisation.\n\n**Purpose**\nUsed to identify the Master organisation of DSR which initiates the DSR.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.utl_organisation_descendants": {"unique_id": "DSR.utl_organisation_descendants", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "utl_organisation_descendants", "block_contents": "**Description**\n\nContents: Contains a record for every organsiation and defines the child hierarchy. It will consolidates the parent child relationships of organisations,returning the lowest child of the hierarchical tree for each organisation. \n\nModel Operation: Takes records at the organsaition level and rolls it down to level; i.e. the lowest child of the organsaition hierarchy.\n\n**Grain**\nOne record per organsaition per organsaition group\n\n**Purpose**\nUsed to identify the decendants hierarchy of a organsaition which are created by atheon. Used to identify childern of any organsaition organisation \n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.utl_organisation_hierarchy": {"unique_id": "DSR.utl_organisation_hierarchy", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "utl_organisation_hierarchy", "block_contents": "**Description**\n\nContents: Contains a record for every organsiation and defines the parentage hierarchy. It will consolidates the parent child relationships of organisations,returning the top of the hierarchical tree for each organisation. This allows attribution of metrics to a single, top level organisation from all the children below.\n\nModel Operation: Takes records at the organsaition level and rolls it up to \"organsaition group\" level; i.e. the top of the organsaition hierarchy.\n\n**Grain**\nOne record per organsaition per organsaition group\n\n**Purpose**\nUsed to identify the parentage hierarchy of a organsaition which are created by atheon.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.utl_organisation_parents": {"unique_id": "DSR.utl_organisation_parents", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "utl_organisation_parents", "block_contents": "**Description**\n\nContents: Contains a record for every organisation and defines the parent for it. It identifies the parent for every organisation(if none present than the location is parent itself).\n\nModel Operation: Takes records at the organisation level and defines the parent for it\n\n**Grain**\nOne record per organisation.\n\n**Purpose**\nUsed to identify the parent of any organisation.\n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "DSR.utl_retailer_organisations": {"unique_id": "DSR.utl_retailer_organisations", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "utl_retailer_organisations", "block_contents": "**Description**\n\nContent:\nThis utility provides all organisations that belong to the master organisation and also are the parent to a retailer organisation.\nIt essentially returns a list of all organisations that have a confirmed supplier relationship with each retailer.\n\nmodel Operation:\n\n**Grain**\nOne record per organisation.\n\n**Purpose**\n\n\n**Created On**\n07/07/2021\n\n**Created By**\nAlex Paterson\n\n**Important**"}, "DSR.utl_source_organisations": {"unique_id": "DSR.utl_source_organisations", "package_name": "DSR", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs", "path": "docs/models_docs.md", "original_file_path": "models/docs/models_docs.md", "name": "utl_source_organisations", "block_contents": "**Description**\n\nContents: Contains a record for organisation which are created by master organisation(in most cases Atheon). This are usually the retailers that are created by Atheon\n\nModel Operation: It generates a view using data from organisation and mapping organsation dimetion. \n\n**Grain**\nOne record per organisation.\n\n**Purpose**\nAs only source organisation can send\\create data in DSR, this view will provide comprehensive list of all source organsition which can provide\\create data in DSR. \n\n**Created On**\n07/07/2021\n\n**Created By**\nGaurav Jain\n\n**Important**"}, "dbt.__overview__": {"unique_id": "dbt.__overview__", "package_name": "dbt", "root_path": "/Users/gauravjain/PycharmProjects/dsr_inputtables_docs/venv/lib/python3.8/site-packages/dbt/include/global_project", "path": "overview.md", "original_file_path": "docs/overview.md", "name": "__overview__", "block_contents": "### Welcome!\n\nWelcome to the auto-generated documentation for your dbt project!\n\n### Navigation\n\nYou can use the `Project` and `Database` navigation tabs on the left side of the window to explore the models\nin your project.\n\n#### Project Tab\nThe `Project` tab mirrors the directory structure of your dbt project. In this tab, you can see all of the\nmodels defined in your dbt project, as well as models imported from dbt packages.\n\n#### Database Tab\nThe `Database` tab also exposes your models, but in a format that looks more like a database explorer. This view\nshows relations (tables and views) grouped into database schemas. Note that ephemeral models are _not_ shown\nin this interface, as they do not exist in the database.\n\n### Graph Exploration\nYou can click the blue icon on the bottom-right corner of the page to view the lineage graph of your models.\n\nOn model pages, you'll see the immediate parents and children of the model you're exploring. By clicking the `Expand`\nbutton at the top-right of this lineage pane, you'll be able to see all of the models that are used to build,\nor are built from, the model you're exploring.\n\nOnce expanded, you'll be able to use the `--models` and `--exclude` model selection syntax to filter the\nmodels in the graph. For more information on model selection, check out the [dbt docs](https://docs.getdbt.com/docs/model-selection-syntax).\n\nNote that you can also right-click on models to interactively filter and explore the graph.\n\n---\n\n### More information\n\n- [What is dbt](https://docs.getdbt.com/docs/overview)?\n- Read the [dbt viewpoint](https://docs.getdbt.com/docs/viewpoint)\n- [Installation](https://docs.getdbt.com/docs/installation)\n- Join the [chat](https://community.getdbt.com/) on Slack for live questions and support."}}, "exposures": {}, "selectors": {}, "disabled": [], "parent_map": {"test.DSR.source_unique_combination_of_columns_dsr_input_input_promotion_creator_business_organisation_number__creator_origin_organisation_number__subject_origin_organisation_number__subject_business_organisation_number__promotion_number__start_date__end_date__organisation_sku__loaded_timestamp__prod.ee33c18097": ["source.DSR.dsr_input.input_promotion"], "test.DSR.source_not_null_dsr_input_input_promotion_creator_business_organisation_number__prod.17b744b048": ["source.DSR.dsr_input.input_promotion"], "test.DSR.source_not_null_dsr_input_input_promotion_creator_origin_organisation_number__prod.b4c67e1d16": ["source.DSR.dsr_input.input_promotion"], "test.DSR.source_not_null_dsr_input_input_promotion_end_date__prod.9a85a7968a": ["source.DSR.dsr_input.input_promotion"], "test.DSR.source_not_null_dsr_input_input_promotion_organisation_sku__prod.e437cc1767": ["source.DSR.dsr_input.input_promotion"], "test.DSR.source_not_null_dsr_input_input_promotion_promotion_number__prod.861ae017eb": ["source.DSR.dsr_input.input_promotion"], "test.DSR.source_not_null_dsr_input_input_promotion_start_date__prod.649551479f": ["source.DSR.dsr_input.input_promotion"], "test.DSR.source_not_null_dsr_input_input_promotion_subject_business_organisation_number__prod.d759003f39": ["source.DSR.dsr_input.input_promotion"], "test.DSR.source_not_null_dsr_input_input_promotion_subject_origin_organisation_number__prod.37dc33bc40": ["source.DSR.dsr_input.input_promotion"], "test.DSR.source_unique_combination_of_columns_dsr_input_input_date_day_date__prod.daec8cb4ff": ["source.DSR.dsr_input.input_date"], "test.DSR.source_not_null_dsr_input_input_date_day_date__prod.eebebe4184": ["source.DSR.dsr_input.input_date"], "test.DSR.source_unique_combination_of_columns_dsr_input_input_calendar_business_organisation_number__origin_organisation_number__day_date__loaded_timestamp__prod.6d088d8c19": ["source.DSR.dsr_input.input_calendar"], "test.DSR.source_not_null_dsr_input_input_calendar_business_organisation_number__prod.69a9cdf300": ["source.DSR.dsr_input.input_calendar"], "test.DSR.source_not_null_dsr_input_input_calendar_day_date__prod.76f8ece26d": ["source.DSR.dsr_input.input_calendar"], "test.DSR.source_not_null_dsr_input_input_calendar_origin_organisation_number__prod.c9137d503e": ["source.DSR.dsr_input.input_calendar"], "test.DSR.source_unique_combination_of_columns_dsr_input_input_location_business_organisation_number__origin_organisation_number__organisation_location_id__location_function__loaded_timestamp__prod.e4f9b94a2c": ["source.DSR.dsr_input.input_location"], "test.DSR.source_not_null_dsr_input_input_location_business_organisation_number__prod.184616bc7b": ["source.DSR.dsr_input.input_location"], "test.DSR.source_not_null_dsr_input_input_location_location_function__prod.7461a14a62": ["source.DSR.dsr_input.input_location"], "test.DSR.source_not_null_dsr_input_input_location_organisation_location_id__prod.3394793195": ["source.DSR.dsr_input.input_location"], "test.DSR.source_not_null_dsr_input_input_location_origin_organisation_number__prod.a00dae3370": ["source.DSR.dsr_input.input_location"], "test.DSR.source_unique_combination_of_columns_dsr_input_input_location_group_creator_origin_organisation_number__creator_business_organisation_number__organisation_location_id__subject_origin_organisation_number__subject_business_organisation_number__location_function__group_name__loaded_timestamp__prod.d7acf79c1a": ["source.DSR.dsr_input.input_location_group"], "test.DSR.source_not_null_dsr_input_input_location_group_creator_business_organisation_number__prod.9c4f67566c": ["source.DSR.dsr_input.input_location_group"], "test.DSR.source_not_null_dsr_input_input_location_group_creator_origin_organisation_number__prod.ae7bd904d7": ["source.DSR.dsr_input.input_location_group"], "test.DSR.source_not_null_dsr_input_input_location_group_group_name__prod.52523df736": ["source.DSR.dsr_input.input_location_group"], "test.DSR.source_not_null_dsr_input_input_location_group_location_function__prod.1fccbbd213": ["source.DSR.dsr_input.input_location_group"], "test.DSR.source_not_null_dsr_input_input_location_group_organisation_location_id__prod.f5a291a0a4": ["source.DSR.dsr_input.input_location_group"], "test.DSR.source_not_null_dsr_input_input_location_group_subject_business_organisation_number__prod.4fe4a63d73": ["source.DSR.dsr_input.input_location_group"], "test.DSR.source_not_null_dsr_input_input_location_group_subject_origin_organisation_number__prod.df5f54f52b": ["source.DSR.dsr_input.input_location_group"], "test.DSR.source_unique_combination_of_columns_dsr_input_input_location_parentage_subject_origin_organisation_number__subject_business_organisation_number__subject_organisation_location_id__subject_location_function__parent_origin_organisation_number__parent_business_organisation_number__parent_organisation_location_id__parent_location_function__creator_origin_organisation_number__creator_business_organisation_number__loaded_timestamp__prod.c32c9d1b28": ["source.DSR.dsr_input.input_location_parentage"], "test.DSR.source_not_null_dsr_input_input_location_parentage_creator_business_organisation_number__prod.feeed9bdea": ["source.DSR.dsr_input.input_location_parentage"], "test.DSR.source_not_null_dsr_input_input_location_parentage_creator_origin_organisation_number__prod.402412278a": ["source.DSR.dsr_input.input_location_parentage"], "test.DSR.source_not_null_dsr_input_input_location_parentage_parent_business_organisation_number__prod.f5f14448b6": ["source.DSR.dsr_input.input_location_parentage"], "test.DSR.source_not_null_dsr_input_input_location_parentage_parent_location_function__prod.e8a5793613": ["source.DSR.dsr_input.input_location_parentage"], "test.DSR.source_not_null_dsr_input_input_location_parentage_parent_organisation_location_id__prod.4f5e8cefe7": ["source.DSR.dsr_input.input_location_parentage"], "test.DSR.source_not_null_dsr_input_input_location_parentage_parent_origin_organisation_number__prod.2b70e2ebd6": ["source.DSR.dsr_input.input_location_parentage"], "test.DSR.source_not_null_dsr_input_input_location_parentage_subject_business_organisation_number__prod.c075fdf360": ["source.DSR.dsr_input.input_location_parentage"], "test.DSR.source_not_null_dsr_input_input_location_parentage_subject_location_function__prod.de6e44abf2": ["source.DSR.dsr_input.input_location_parentage"], "test.DSR.source_not_null_dsr_input_input_location_parentage_subject_organisation_location_id__prod.b7bcbd7feb": ["source.DSR.dsr_input.input_location_parentage"], "test.DSR.source_not_null_dsr_input_input_location_parentage_subject_origin_organisation_number__prod.1a097d2893": ["source.DSR.dsr_input.input_location_parentage"], "test.DSR.source_unique_combination_of_columns_dsr_input_input_case_business_organisation_number__origin_organisation_number__organisation_case__organisation_sku__case_size__loaded_timestamp__prod.c16d710caa": ["source.DSR.dsr_input.input_case"], "test.DSR.source_not_null_dsr_input_input_case_business_organisation_number__prod.30c50ece7b": ["source.DSR.dsr_input.input_case"], "test.DSR.source_not_null_dsr_input_input_case_case_size__prod.a769f1420e": ["source.DSR.dsr_input.input_case"], "test.DSR.source_not_null_dsr_input_input_case_organisation_case__prod.9af11ba595": ["source.DSR.dsr_input.input_case"], "test.DSR.source_not_null_dsr_input_input_case_organisation_sku__prod.716e8b4fb4": ["source.DSR.dsr_input.input_case"], "test.DSR.source_not_null_dsr_input_input_case_origin_organisation_number__prod.5f8386e20e": ["source.DSR.dsr_input.input_case"], "test.DSR.source_unique_combination_of_columns_dsr_input_input_case_grouping_creator_business_organisation_number__creator_origin_organisation_number__organisation_case__subject_origin_organisation_number__subject_business_organisation_number__grouping_key__loaded_timestamp__prod.0a81ded6b2": ["source.DSR.dsr_input.input_case_grouping"], "test.DSR.source_not_null_dsr_input_input_case_grouping_creator_business_organisation_number__prod.c5142b9338": ["source.DSR.dsr_input.input_case_grouping"], "test.DSR.source_not_null_dsr_input_input_case_grouping_creator_origin_organisation_number__prod.c5e2731fa2": ["source.DSR.dsr_input.input_case_grouping"], "test.DSR.source_not_null_dsr_input_input_case_grouping_grouping_key__prod.7972c84e2b": ["source.DSR.dsr_input.input_case_grouping"], "test.DSR.source_not_null_dsr_input_input_case_grouping_organisation_case__prod.c3e6a140d5": ["source.DSR.dsr_input.input_case_grouping"], "test.DSR.source_not_null_dsr_input_input_case_grouping_subject_business_organisation_number__prod.a06b0f1c05": ["source.DSR.dsr_input.input_case_grouping"], "test.DSR.source_not_null_dsr_input_input_case_grouping_subject_origin_organisation_number__prod.a8e45c7d81": ["source.DSR.dsr_input.input_case_grouping"], "test.DSR.source_unique_combination_of_columns_dsr_input_input_sku_business_organisation_number__origin_organisation_number__organisation_sku__loaded_timestamp__prod.79d675cb44": ["source.DSR.dsr_input.input_sku"], "test.DSR.source_not_null_dsr_input_input_sku_business_organisation_number__prod.cb81cc81cb": ["source.DSR.dsr_input.input_sku"], "test.DSR.source_not_null_dsr_input_input_sku_organisation_sku__prod.f8ce66955a": ["source.DSR.dsr_input.input_sku"], "test.DSR.source_not_null_dsr_input_input_sku_origin_organisation_number__prod.c6d66e2db2": ["source.DSR.dsr_input.input_sku"], "test.DSR.source_unique_combination_of_columns_dsr_input_input_sku_grouping_creator_business_organisation_number__creator_origin_organisation_number__organisation_sku__subject_origin_organisation_number__subject_business_organisation_number__group_name__group_value__loaded_timestamp__prod.736dae4089": ["source.DSR.dsr_input.input_sku_grouping"], "test.DSR.source_not_null_dsr_input_input_sku_grouping_creator_business_organisation_number__prod.cf516ad382": ["source.DSR.dsr_input.input_sku_grouping"], "test.DSR.source_not_null_dsr_input_input_sku_grouping_creator_origin_organisation_number__prod.4b1409afcf": ["source.DSR.dsr_input.input_sku_grouping"], "test.DSR.source_not_null_dsr_input_input_sku_grouping_group_name__prod.41b1a8f742": ["source.DSR.dsr_input.input_sku_grouping"], "test.DSR.source_not_null_dsr_input_input_sku_grouping_group_value__prod.6041822dc3": ["source.DSR.dsr_input.input_sku_grouping"], "test.DSR.source_not_null_dsr_input_input_sku_grouping_organisation_sku__prod.eeb336f8f9": ["source.DSR.dsr_input.input_sku_grouping"], "test.DSR.source_not_null_dsr_input_input_sku_grouping_subject_business_organisation_number__prod.bd48fbcb54": ["source.DSR.dsr_input.input_sku_grouping"], "test.DSR.source_not_null_dsr_input_input_sku_grouping_subject_origin_organisation_number__prod.67be80ab88": ["source.DSR.dsr_input.input_sku_grouping"], "test.DSR.source_unique_combination_of_columns_dsr_input_input_organisation_mapping_origin_organisation_number__business_organisation_number__loaded_timestamp__prod.ea7f9aa8a3": ["source.DSR.dsr_input.input_organisation_mapping"], "test.DSR.source_not_null_dsr_input_input_organisation_mapping_business_organisation_number__prod.c9ec6d8080": ["source.DSR.dsr_input.input_organisation_mapping"], "test.DSR.source_not_null_dsr_input_input_organisation_mapping_origin_organisation_number__prod.25d92dfd8e": ["source.DSR.dsr_input.input_organisation_mapping"], "test.DSR.source_unique_combination_of_columns_dsr_input_input_organisation_business_organisation_number__origin_organisation_number__loaded_timestamp__prod.a7339c677b": ["source.DSR.dsr_input.input_organisation"], "test.DSR.source_not_null_dsr_input_input_organisation_business_organisation_number__prod.8ab99da45a": ["source.DSR.dsr_input.input_organisation"], "test.DSR.source_not_null_dsr_input_input_organisation_origin_organisation_number__prod.b673dbf060": ["source.DSR.dsr_input.input_organisation"], "test.DSR.source_unique_combination_of_columns_dsr_input_input_organisation_parentage_business_organisation_number__origin_organisation_number__parent_origin_organisation_number__parent_business_organisation_number__creator_origin_organisation_number__creator_business_organisation_number__loaded_timestamp__prod.16f2a9c05c": ["source.DSR.dsr_input.input_organisation_parentage"], "test.DSR.source_not_null_dsr_input_input_organisation_parentage_business_organisation_number__prod.d35f954c48": ["source.DSR.dsr_input.input_organisation_parentage"], "test.DSR.source_not_null_dsr_input_input_organisation_parentage_creator_business_organisation_number__prod.e6445a8bc2": ["source.DSR.dsr_input.input_organisation_parentage"], "test.DSR.source_not_null_dsr_input_input_organisation_parentage_origin_organisation_number__prod.a5d0bcbc7b": ["source.DSR.dsr_input.input_organisation_parentage"], "test.DSR.source_not_null_dsr_input_input_organisation_parentage_parent_business_organisation_number__prod.258375f2fc": ["source.DSR.dsr_input.input_organisation_parentage"], "test.DSR.source_unique_combination_of_columns_dsr_input_input_delegated_visibility_delegator_origin_organisation_number__delegator_organisation_number__delegatee_origin_organisation_number__delegatee_organisation_number__subject_origin_organisation_number__subject_organisation_number__organisation_product__loaded_timestamp__prod.26a17780a5": ["source.DSR.dsr_input.input_delegated_visibility"], "test.DSR.source_not_null_dsr_input_input_delegated_visibility_delegated_status__prod.657967a0e2": ["source.DSR.dsr_input.input_delegated_visibility"], "test.DSR.source_not_null_dsr_input_input_delegated_visibility_delegatee_organisation_number__prod.8a4ebd220a": ["source.DSR.dsr_input.input_delegated_visibility"], "test.DSR.source_not_null_dsr_input_input_delegated_visibility_delegatee_origin_organisation_number__prod.da70a9cfad": ["source.DSR.dsr_input.input_delegated_visibility"], "test.DSR.source_not_null_dsr_input_input_delegated_visibility_delegator_organisation_number__prod.fb62180c23": ["source.DSR.dsr_input.input_delegated_visibility"], "test.DSR.source_not_null_dsr_input_input_delegated_visibility_delegator_origin_organisation_number__prod.175f6c7689": ["source.DSR.dsr_input.input_delegated_visibility"], "test.DSR.source_not_null_dsr_input_input_delegated_visibility_organisation_product__prod.d706364610": ["source.DSR.dsr_input.input_delegated_visibility"], "test.DSR.source_not_null_dsr_input_input_delegated_visibility_product_type__prod.2918c41747": ["source.DSR.dsr_input.input_delegated_visibility"], "test.DSR.source_not_null_dsr_input_input_delegated_visibility_subject_organisation_number__prod.e4f0c9d2a7": ["source.DSR.dsr_input.input_delegated_visibility"], "test.DSR.source_not_null_dsr_input_input_delegated_visibility_subject_origin_organisation_number__prod.eb08a707ff": ["source.DSR.dsr_input.input_delegated_visibility"], "test.DSR.source_unique_combination_of_columns_dsr_input_input_pln_mvt_depotstoredaysku_base_forecast_date__forecast_date__source_db_id__organisation_sku__organisation_location_id_from__organisation_location_id_to__model_version__forecast_components__loaded_timestamp__prod.f8cfd5dfb9": ["source.DSR.dsr_input.input_pln_mvt_depotstoredaysku"], "test.DSR.source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_base_forecast_date__prod.f025ab6040": ["source.DSR.dsr_input.input_pln_mvt_depotstoredaysku"], "test.DSR.source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_forecast_components__prod.ce1c65d8cf": ["source.DSR.dsr_input.input_pln_mvt_depotstoredaysku"], "test.DSR.source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_forecast_date__prod.cfbe7bfc82": ["source.DSR.dsr_input.input_pln_mvt_depotstoredaysku"], "test.DSR.source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_model_version__prod.b948cb7a45": ["source.DSR.dsr_input.input_pln_mvt_depotstoredaysku"], "test.DSR.source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_organisation_location_id_from__prod.66a3b8d82d": ["source.DSR.dsr_input.input_pln_mvt_depotstoredaysku"], "test.DSR.source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_organisation_location_id_to__prod.9d2503001b": ["source.DSR.dsr_input.input_pln_mvt_depotstoredaysku"], "test.DSR.source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_organisation_sku__prod.938a37659b": ["source.DSR.dsr_input.input_pln_mvt_depotstoredaysku"], "test.DSR.source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_source_db_id__prod.efb01e6cfb": ["source.DSR.dsr_input.input_pln_mvt_depotstoredaysku"], "test.DSR.source_unique_combination_of_columns_dsr_input_input_pln_mvt_daysku_base_forecast_date__forecast_date__source_db_id__subject_business_organisation_number__organisation_sku__model_version__forecast_components__loaded_timestamp__prod.5ea859b8aa": ["source.DSR.dsr_input.input_pln_mvt_daysku"], "test.DSR.source_not_null_dsr_input_input_pln_mvt_daysku_base_forecast_date__prod.2f098a2e73": ["source.DSR.dsr_input.input_pln_mvt_daysku"], "test.DSR.source_not_null_dsr_input_input_pln_mvt_daysku_forecast_components__prod.34961f0b94": ["source.DSR.dsr_input.input_pln_mvt_daysku"], "test.DSR.source_not_null_dsr_input_input_pln_mvt_daysku_forecast_date__prod.e4d3c096c0": ["source.DSR.dsr_input.input_pln_mvt_daysku"], "test.DSR.source_not_null_dsr_input_input_pln_mvt_daysku_model_version__prod.c95b052781": ["source.DSR.dsr_input.input_pln_mvt_daysku"], "test.DSR.source_not_null_dsr_input_input_pln_mvt_daysku_organisation_sku__prod.887284b623": ["source.DSR.dsr_input.input_pln_mvt_daysku"], "test.DSR.source_not_null_dsr_input_input_pln_mvt_daysku_source_db_id__prod.d99e8bd8b0": ["source.DSR.dsr_input.input_pln_mvt_daysku"], "test.DSR.source_not_null_dsr_input_input_pln_mvt_daysku_subject_business_organisation_number__prod.cf51ed692a": ["source.DSR.dsr_input.input_pln_mvt_daysku"], "test.DSR.source_unique_combination_of_columns_dsr_input_input_pln_mvt_storedaysku_base_forecast_date__forecast_date__source_db_id__subject_business_organisation_number__subject_organisation_location_id_to__organisation_sku__model_version__forecast_components__loaded_timestamp__prod.5fe9ceeb7a": ["source.DSR.dsr_input.input_pln_mvt_storedaysku"], "test.DSR.source_not_null_dsr_input_input_pln_mvt_storedaysku_base_forecast_date__prod.0af88c40af": ["source.DSR.dsr_input.input_pln_mvt_storedaysku"], "test.DSR.source_not_null_dsr_input_input_pln_mvt_storedaysku_forecast_date__prod.3cdc011adb": ["source.DSR.dsr_input.input_pln_mvt_storedaysku"], "test.DSR.source_not_null_dsr_input_input_pln_mvt_storedaysku_model_version__prod.8ef7db2229": ["source.DSR.dsr_input.input_pln_mvt_storedaysku"], "test.DSR.source_not_null_dsr_input_input_pln_mvt_storedaysku_organisation_sku__prod.383ec86c07": ["source.DSR.dsr_input.input_pln_mvt_storedaysku"], "test.DSR.source_not_null_dsr_input_input_pln_mvt_storedaysku_source_db_id__prod.351d508b7d": ["source.DSR.dsr_input.input_pln_mvt_storedaysku"], "test.DSR.source_not_null_dsr_input_input_pln_mvt_storedaysku_subject_business_organisation_number__prod.924db6cf7c": ["source.DSR.dsr_input.input_pln_mvt_storedaysku"], "test.DSR.source_not_null_dsr_input_input_pln_mvt_storedaysku_subject_organisation_location_id_to__prod.28c7c6d059": ["source.DSR.dsr_input.input_pln_mvt_storedaysku"], "test.DSR.source_unique_combination_of_columns_dsr_input_input_pln_mvt_orgdepotdaysku_base_forecast_date__forecast_date__source_db_id__subject_organisation_sku__subject_origin_organisation_number__subject_business_organisation_number_from__subject_business_organisation_number_to__subject_organisation_location_id_to__model_version__forecast_components__loaded_timestamp__prod.3e06f1370a": ["source.DSR.dsr_input.input_pln_mvt_orgdepotdaysku"], "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_base_forecast_date__prod.77a0c710d3": ["source.DSR.dsr_input.input_pln_mvt_orgdepotdaysku"], "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_forecast_date__prod.805d5a60db": ["source.DSR.dsr_input.input_pln_mvt_orgdepotdaysku"], "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_model_version__prod.0a6dffe4f9": ["source.DSR.dsr_input.input_pln_mvt_orgdepotdaysku"], "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_source_db_id__prod.a56e7107d8": ["source.DSR.dsr_input.input_pln_mvt_orgdepotdaysku"], "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_subject_business_organisation_number_from__prod.652d883ca0": ["source.DSR.dsr_input.input_pln_mvt_orgdepotdaysku"], "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_subject_business_organisation_number_to__prod.07c316e02a": ["source.DSR.dsr_input.input_pln_mvt_orgdepotdaysku"], "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_subject_organisation_location_id_to__prod.eb53f2153c": ["source.DSR.dsr_input.input_pln_mvt_orgdepotdaysku"], "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_subject_organisation_sku__prod.73a0c522f5": ["source.DSR.dsr_input.input_pln_mvt_orgdepotdaysku"], "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_subject_origin_organisation_number__prod.16e5d6ccca": ["source.DSR.dsr_input.input_pln_mvt_orgdepotdaysku"], "test.DSR.source_unique_combination_of_columns_dsr_input_input_pln_mvt_orgstoredaysku_base_forecast_date__forecast_date__source_db_id__organisation_sku__subject_origin_organisation_number__subject_organisation_location_id_to__model_version__forecast_components__loaded_timestamp__prod.a22153026e": ["source.DSR.dsr_input.input_pln_mvt_orgstoredaysku"], "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgstoredaysku_base_forecast_date__prod.49a12ae94d": ["source.DSR.dsr_input.input_pln_mvt_orgstoredaysku"], "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgstoredaysku_forecast_date__prod.b9de2cd052": ["source.DSR.dsr_input.input_pln_mvt_orgstoredaysku"], "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgstoredaysku_organisation_sku__prod.e1f5d6dd09": ["source.DSR.dsr_input.input_pln_mvt_orgstoredaysku"], "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgstoredaysku_source_db_id__prod.8d432762d6": ["source.DSR.dsr_input.input_pln_mvt_orgstoredaysku"], "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgstoredaysku_subject_business_organisation_number__prod.95bf8c693a": ["source.DSR.dsr_input.input_pln_mvt_orgstoredaysku"], "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgstoredaysku_subject_organisation_location_id_to__prod.13d8784112": ["source.DSR.dsr_input.input_pln_mvt_orgstoredaysku"], "test.DSR.source_unique_combination_of_columns_dsr_input_input_act_mvt_storedaysku_day_date__source_db_id__organisation_sku__organisation_location_id__loaded_timestamp__prod.945821c065": ["source.DSR.dsr_input.input_act_mvt_storedaysku"], "test.DSR.source_not_null_dsr_input_input_act_mvt_storedaysku_day_date__prod.064d970468": ["source.DSR.dsr_input.input_act_mvt_storedaysku"], "test.DSR.source_not_null_dsr_input_input_act_mvt_storedaysku_organisation_location_id__prod.207cbbc934": ["source.DSR.dsr_input.input_act_mvt_storedaysku"], "test.DSR.source_not_null_dsr_input_input_act_mvt_storedaysku_organisation_sku__prod.78ff89c539": ["source.DSR.dsr_input.input_act_mvt_storedaysku"], "test.DSR.source_not_null_dsr_input_input_act_mvt_storedaysku_source_db_id__prod.c0eec0eb1b": ["source.DSR.dsr_input.input_act_mvt_storedaysku"], "test.DSR.source_unique_combination_of_columns_dsr_input_input_act_mvt_orgdepotdaycase_day_date__source_db_id__organisation_case__organisation_location_id__business_organisation_number_from__loaded_timestamp__prod.e3d31d8d7b": ["source.DSR.dsr_input.input_act_mvt_orgdepotdaycase"], "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdaycase_business_organisation_number_from__prod.689f866149": ["source.DSR.dsr_input.input_act_mvt_orgdepotdaycase"], "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdaycase_day_date__prod.07ed6e117c": ["source.DSR.dsr_input.input_act_mvt_orgdepotdaycase"], "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdaycase_organisation_case__prod.5386c84bbb": ["source.DSR.dsr_input.input_act_mvt_orgdepotdaycase"], "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdaycase_organisation_location_id__prod.415bd39b94": ["source.DSR.dsr_input.input_act_mvt_orgdepotdaycase"], "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdaycase_source_db_id__prod.73ae8a12ac": ["source.DSR.dsr_input.input_act_mvt_orgdepotdaycase"], "test.DSR.source_unique_combination_of_columns_dsr_input_input_act_mvt_orgdepotdayordercase_day_date__source_db_id__organisation_case__organisation_location_id__order_code__business_organisation_number_from__loaded_timestamp__prod.cce3ee2674": ["source.DSR.dsr_input.input_act_mvt_orgdepotdayordercase"], "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdayordercase_business_organisation_number_from__prod.5480634156": ["source.DSR.dsr_input.input_act_mvt_orgdepotdayordercase"], "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdayordercase_day_date__prod.fd84cbd0e6": ["source.DSR.dsr_input.input_act_mvt_orgdepotdayordercase"], "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdayordercase_order_code__prod.0ec5bad996": ["source.DSR.dsr_input.input_act_mvt_orgdepotdayordercase"], "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdayordercase_organisation_case__prod.324fe411d9": ["source.DSR.dsr_input.input_act_mvt_orgdepotdayordercase"], "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdayordercase_organisation_location_id__prod.9e498a71fd": ["source.DSR.dsr_input.input_act_mvt_orgdepotdayordercase"], "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdayordercase_source_db_id__prod.cc2f587dc6": ["source.DSR.dsr_input.input_act_mvt_orgdepotdayordercase"], "test.DSR.source_unique_combination_of_columns_dsr_input_input_act_mvt_depotstoredaysku_day_date__source_db_id__organisation_sku__organisation_location_id_from__organisation_location_id_to__loaded_timestamp__prod.a3b7676652": ["source.DSR.dsr_input.input_act_mvt_depotstoredaysku"], "test.DSR.source_not_null_dsr_input_input_act_mvt_depotstoredaysku_day_date__prod.85e761b8bf": ["source.DSR.dsr_input.input_act_mvt_depotstoredaysku"], "test.DSR.source_not_null_dsr_input_input_act_mvt_depotstoredaysku_organisation_location_id_from__prod.37c0656e44": ["source.DSR.dsr_input.input_act_mvt_depotstoredaysku"], "test.DSR.source_not_null_dsr_input_input_act_mvt_depotstoredaysku_organisation_location_id_to__prod.a8adf607ef": ["source.DSR.dsr_input.input_act_mvt_depotstoredaysku"], "test.DSR.source_not_null_dsr_input_input_act_mvt_depotstoredaysku_organisation_sku__prod.4df8d8320b": ["source.DSR.dsr_input.input_act_mvt_depotstoredaysku"], "test.DSR.source_not_null_dsr_input_input_act_mvt_depotstoredaysku_source_db_id__prod.3b595ecc7b": ["source.DSR.dsr_input.input_act_mvt_depotstoredaysku"], "test.DSR.source_unique_combination_of_columns_dsr_input_input_pln_inv_storedaysku_day_date__source_db_id__organisation_sku__ranged__organisation_location_id__loaded_timestamp__prod.b581e49b08": ["source.DSR.dsr_input.input_pln_inv_storedaysku"], "test.DSR.source_not_null_dsr_input_input_pln_inv_storedaysku_day_date__prod.58e4cb82c5": ["source.DSR.dsr_input.input_pln_inv_storedaysku"], "test.DSR.source_not_null_dsr_input_input_pln_inv_storedaysku_organisation_location_id__prod.e1afdc8980": ["source.DSR.dsr_input.input_pln_inv_storedaysku"], "test.DSR.source_not_null_dsr_input_input_pln_inv_storedaysku_organisation_sku__prod.1532465672": ["source.DSR.dsr_input.input_pln_inv_storedaysku"], "test.DSR.source_not_null_dsr_input_input_pln_inv_storedaysku_ranged__prod.7d2c424a06": ["source.DSR.dsr_input.input_pln_inv_storedaysku"], "test.DSR.source_not_null_dsr_input_input_pln_inv_storedaysku_source_db_id__prod.c8794953fe": ["source.DSR.dsr_input.input_pln_inv_storedaysku"], "test.DSR.source_unique_combination_of_columns_dsr_input_input_act_inv_locationdaysku_day_date__source_db_id__organisation_sku__stock_units__location_function__organisation_location_id__loaded_timestamp__prod.5577c95d06": ["source.DSR.dsr_input.input_act_inv_locationdaysku"], "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaysku_day_date__prod.8e602c2390": ["source.DSR.dsr_input.input_act_inv_locationdaysku"], "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaysku_location_function__prod.32ab7100b7": ["source.DSR.dsr_input.input_act_inv_locationdaysku"], "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaysku_organisation_location_id__prod.c8aadcdef7": ["source.DSR.dsr_input.input_act_inv_locationdaysku"], "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaysku_organisation_sku__prod.4ee0cc2d6c": ["source.DSR.dsr_input.input_act_inv_locationdaysku"], "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaysku_source_db_id__prod.b867ccf4fd": ["source.DSR.dsr_input.input_act_inv_locationdaysku"], "test.DSR.source_unique_combination_of_columns_dsr_input_input_act_inv_locationdaycase_day_date__source_db_id__organisation_case__stock_units__location_function__organisation_location_id__loaded_timestamp__prod.1d7645aa0b": ["source.DSR.dsr_input.input_act_inv_locationdaycase"], "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaycase_day_date__prod.9c300e2a03": ["source.DSR.dsr_input.input_act_inv_locationdaycase"], "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaycase_location_function__prod.e88646e3f0": ["source.DSR.dsr_input.input_act_inv_locationdaycase"], "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaycase_organisation_case__prod.2f60dfc49c": ["source.DSR.dsr_input.input_act_inv_locationdaycase"], "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaycase_organisation_location_id__prod.1a84575dfd": ["source.DSR.dsr_input.input_act_inv_locationdaycase"], "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaycase_source_db_id__prod.99da0db65a": ["source.DSR.dsr_input.input_act_inv_locationdaycase"], "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaycase_stock_units__prod.93ff225059": ["source.DSR.dsr_input.input_act_inv_locationdaycase"], "source.DSR.dsr_input.input_promotion": [], "source.DSR.dsr_input.input_date": [], "source.DSR.dsr_input.input_calendar": [], "source.DSR.dsr_input.input_location": [], "source.DSR.dsr_input.input_location_group": [], "source.DSR.dsr_input.input_location_parentage": [], "source.DSR.dsr_input.input_case": [], "source.DSR.dsr_input.input_case_grouping": [], "source.DSR.dsr_input.input_sku": [], "source.DSR.dsr_input.input_sku_grouping": [], "source.DSR.dsr_input.input_organisation_mapping": [], "source.DSR.dsr_input.input_organisation": [], "source.DSR.dsr_input.input_organisation_parentage": [], "source.DSR.dsr_input.input_delegated_visibility": [], "source.DSR.dsr_input.input_pln_mvt_depotstoredaysku": [], "source.DSR.dsr_input.input_pln_mvt_daysku": [], "source.DSR.dsr_input.input_pln_mvt_storedaysku": [], "source.DSR.dsr_input.input_pln_mvt_orgdepotdaysku": [], "source.DSR.dsr_input.input_pln_mvt_orgstoredaysku": [], "source.DSR.dsr_input.input_act_mvt_storedaysku": [], "source.DSR.dsr_input.input_act_mvt_orgdepotdaycase": [], "source.DSR.dsr_input.input_act_mvt_orgdepotdayordercase": [], "source.DSR.dsr_input.input_act_mvt_depotstoredaysku": [], "source.DSR.dsr_input.input_pln_inv_storedaysku": [], "source.DSR.dsr_input.input_act_inv_locationdaysku": [], "source.DSR.dsr_input.input_act_inv_locationdaycase": []}, "child_map": {"test.DSR.source_unique_combination_of_columns_dsr_input_input_promotion_creator_business_organisation_number__creator_origin_organisation_number__subject_origin_organisation_number__subject_business_organisation_number__promotion_number__start_date__end_date__organisation_sku__loaded_timestamp__prod.ee33c18097": [], "test.DSR.source_not_null_dsr_input_input_promotion_creator_business_organisation_number__prod.17b744b048": [], "test.DSR.source_not_null_dsr_input_input_promotion_creator_origin_organisation_number__prod.b4c67e1d16": [], "test.DSR.source_not_null_dsr_input_input_promotion_end_date__prod.9a85a7968a": [], "test.DSR.source_not_null_dsr_input_input_promotion_organisation_sku__prod.e437cc1767": [], "test.DSR.source_not_null_dsr_input_input_promotion_promotion_number__prod.861ae017eb": [], "test.DSR.source_not_null_dsr_input_input_promotion_start_date__prod.649551479f": [], "test.DSR.source_not_null_dsr_input_input_promotion_subject_business_organisation_number__prod.d759003f39": [], "test.DSR.source_not_null_dsr_input_input_promotion_subject_origin_organisation_number__prod.37dc33bc40": [], "test.DSR.source_unique_combination_of_columns_dsr_input_input_date_day_date__prod.daec8cb4ff": [], "test.DSR.source_not_null_dsr_input_input_date_day_date__prod.eebebe4184": [], "test.DSR.source_unique_combination_of_columns_dsr_input_input_calendar_business_organisation_number__origin_organisation_number__day_date__loaded_timestamp__prod.6d088d8c19": [], "test.DSR.source_not_null_dsr_input_input_calendar_business_organisation_number__prod.69a9cdf300": [], "test.DSR.source_not_null_dsr_input_input_calendar_day_date__prod.76f8ece26d": [], "test.DSR.source_not_null_dsr_input_input_calendar_origin_organisation_number__prod.c9137d503e": [], "test.DSR.source_unique_combination_of_columns_dsr_input_input_location_business_organisation_number__origin_organisation_number__organisation_location_id__location_function__loaded_timestamp__prod.e4f9b94a2c": [], "test.DSR.source_not_null_dsr_input_input_location_business_organisation_number__prod.184616bc7b": [], "test.DSR.source_not_null_dsr_input_input_location_location_function__prod.7461a14a62": [], "test.DSR.source_not_null_dsr_input_input_location_organisation_location_id__prod.3394793195": [], "test.DSR.source_not_null_dsr_input_input_location_origin_organisation_number__prod.a00dae3370": [], "test.DSR.source_unique_combination_of_columns_dsr_input_input_location_group_creator_origin_organisation_number__creator_business_organisation_number__organisation_location_id__subject_origin_organisation_number__subject_business_organisation_number__location_function__group_name__loaded_timestamp__prod.d7acf79c1a": [], "test.DSR.source_not_null_dsr_input_input_location_group_creator_business_organisation_number__prod.9c4f67566c": [], "test.DSR.source_not_null_dsr_input_input_location_group_creator_origin_organisation_number__prod.ae7bd904d7": [], "test.DSR.source_not_null_dsr_input_input_location_group_group_name__prod.52523df736": [], "test.DSR.source_not_null_dsr_input_input_location_group_location_function__prod.1fccbbd213": [], "test.DSR.source_not_null_dsr_input_input_location_group_organisation_location_id__prod.f5a291a0a4": [], "test.DSR.source_not_null_dsr_input_input_location_group_subject_business_organisation_number__prod.4fe4a63d73": [], "test.DSR.source_not_null_dsr_input_input_location_group_subject_origin_organisation_number__prod.df5f54f52b": [], "test.DSR.source_unique_combination_of_columns_dsr_input_input_location_parentage_subject_origin_organisation_number__subject_business_organisation_number__subject_organisation_location_id__subject_location_function__parent_origin_organisation_number__parent_business_organisation_number__parent_organisation_location_id__parent_location_function__creator_origin_organisation_number__creator_business_organisation_number__loaded_timestamp__prod.c32c9d1b28": [], "test.DSR.source_not_null_dsr_input_input_location_parentage_creator_business_organisation_number__prod.feeed9bdea": [], "test.DSR.source_not_null_dsr_input_input_location_parentage_creator_origin_organisation_number__prod.402412278a": [], "test.DSR.source_not_null_dsr_input_input_location_parentage_parent_business_organisation_number__prod.f5f14448b6": [], "test.DSR.source_not_null_dsr_input_input_location_parentage_parent_location_function__prod.e8a5793613": [], "test.DSR.source_not_null_dsr_input_input_location_parentage_parent_organisation_location_id__prod.4f5e8cefe7": [], "test.DSR.source_not_null_dsr_input_input_location_parentage_parent_origin_organisation_number__prod.2b70e2ebd6": [], "test.DSR.source_not_null_dsr_input_input_location_parentage_subject_business_organisation_number__prod.c075fdf360": [], "test.DSR.source_not_null_dsr_input_input_location_parentage_subject_location_function__prod.de6e44abf2": [], "test.DSR.source_not_null_dsr_input_input_location_parentage_subject_organisation_location_id__prod.b7bcbd7feb": [], "test.DSR.source_not_null_dsr_input_input_location_parentage_subject_origin_organisation_number__prod.1a097d2893": [], "test.DSR.source_unique_combination_of_columns_dsr_input_input_case_business_organisation_number__origin_organisation_number__organisation_case__organisation_sku__case_size__loaded_timestamp__prod.c16d710caa": [], "test.DSR.source_not_null_dsr_input_input_case_business_organisation_number__prod.30c50ece7b": [], "test.DSR.source_not_null_dsr_input_input_case_case_size__prod.a769f1420e": [], "test.DSR.source_not_null_dsr_input_input_case_organisation_case__prod.9af11ba595": [], "test.DSR.source_not_null_dsr_input_input_case_organisation_sku__prod.716e8b4fb4": [], "test.DSR.source_not_null_dsr_input_input_case_origin_organisation_number__prod.5f8386e20e": [], "test.DSR.source_unique_combination_of_columns_dsr_input_input_case_grouping_creator_business_organisation_number__creator_origin_organisation_number__organisation_case__subject_origin_organisation_number__subject_business_organisation_number__grouping_key__loaded_timestamp__prod.0a81ded6b2": [], "test.DSR.source_not_null_dsr_input_input_case_grouping_creator_business_organisation_number__prod.c5142b9338": [], "test.DSR.source_not_null_dsr_input_input_case_grouping_creator_origin_organisation_number__prod.c5e2731fa2": [], "test.DSR.source_not_null_dsr_input_input_case_grouping_grouping_key__prod.7972c84e2b": [], "test.DSR.source_not_null_dsr_input_input_case_grouping_organisation_case__prod.c3e6a140d5": [], "test.DSR.source_not_null_dsr_input_input_case_grouping_subject_business_organisation_number__prod.a06b0f1c05": [], "test.DSR.source_not_null_dsr_input_input_case_grouping_subject_origin_organisation_number__prod.a8e45c7d81": [], "test.DSR.source_unique_combination_of_columns_dsr_input_input_sku_business_organisation_number__origin_organisation_number__organisation_sku__loaded_timestamp__prod.79d675cb44": [], "test.DSR.source_not_null_dsr_input_input_sku_business_organisation_number__prod.cb81cc81cb": [], "test.DSR.source_not_null_dsr_input_input_sku_organisation_sku__prod.f8ce66955a": [], "test.DSR.source_not_null_dsr_input_input_sku_origin_organisation_number__prod.c6d66e2db2": [], "test.DSR.source_unique_combination_of_columns_dsr_input_input_sku_grouping_creator_business_organisation_number__creator_origin_organisation_number__organisation_sku__subject_origin_organisation_number__subject_business_organisation_number__group_name__group_value__loaded_timestamp__prod.736dae4089": [], "test.DSR.source_not_null_dsr_input_input_sku_grouping_creator_business_organisation_number__prod.cf516ad382": [], "test.DSR.source_not_null_dsr_input_input_sku_grouping_creator_origin_organisation_number__prod.4b1409afcf": [], "test.DSR.source_not_null_dsr_input_input_sku_grouping_group_name__prod.41b1a8f742": [], "test.DSR.source_not_null_dsr_input_input_sku_grouping_group_value__prod.6041822dc3": [], "test.DSR.source_not_null_dsr_input_input_sku_grouping_organisation_sku__prod.eeb336f8f9": [], "test.DSR.source_not_null_dsr_input_input_sku_grouping_subject_business_organisation_number__prod.bd48fbcb54": [], "test.DSR.source_not_null_dsr_input_input_sku_grouping_subject_origin_organisation_number__prod.67be80ab88": [], "test.DSR.source_unique_combination_of_columns_dsr_input_input_organisation_mapping_origin_organisation_number__business_organisation_number__loaded_timestamp__prod.ea7f9aa8a3": [], "test.DSR.source_not_null_dsr_input_input_organisation_mapping_business_organisation_number__prod.c9ec6d8080": [], "test.DSR.source_not_null_dsr_input_input_organisation_mapping_origin_organisation_number__prod.25d92dfd8e": [], "test.DSR.source_unique_combination_of_columns_dsr_input_input_organisation_business_organisation_number__origin_organisation_number__loaded_timestamp__prod.a7339c677b": [], "test.DSR.source_not_null_dsr_input_input_organisation_business_organisation_number__prod.8ab99da45a": [], "test.DSR.source_not_null_dsr_input_input_organisation_origin_organisation_number__prod.b673dbf060": [], "test.DSR.source_unique_combination_of_columns_dsr_input_input_organisation_parentage_business_organisation_number__origin_organisation_number__parent_origin_organisation_number__parent_business_organisation_number__creator_origin_organisation_number__creator_business_organisation_number__loaded_timestamp__prod.16f2a9c05c": [], "test.DSR.source_not_null_dsr_input_input_organisation_parentage_business_organisation_number__prod.d35f954c48": [], "test.DSR.source_not_null_dsr_input_input_organisation_parentage_creator_business_organisation_number__prod.e6445a8bc2": [], "test.DSR.source_not_null_dsr_input_input_organisation_parentage_origin_organisation_number__prod.a5d0bcbc7b": [], "test.DSR.source_not_null_dsr_input_input_organisation_parentage_parent_business_organisation_number__prod.258375f2fc": [], "test.DSR.source_unique_combination_of_columns_dsr_input_input_delegated_visibility_delegator_origin_organisation_number__delegator_organisation_number__delegatee_origin_organisation_number__delegatee_organisation_number__subject_origin_organisation_number__subject_organisation_number__organisation_product__loaded_timestamp__prod.26a17780a5": [], "test.DSR.source_not_null_dsr_input_input_delegated_visibility_delegated_status__prod.657967a0e2": [], "test.DSR.source_not_null_dsr_input_input_delegated_visibility_delegatee_organisation_number__prod.8a4ebd220a": [], "test.DSR.source_not_null_dsr_input_input_delegated_visibility_delegatee_origin_organisation_number__prod.da70a9cfad": [], "test.DSR.source_not_null_dsr_input_input_delegated_visibility_delegator_organisation_number__prod.fb62180c23": [], "test.DSR.source_not_null_dsr_input_input_delegated_visibility_delegator_origin_organisation_number__prod.175f6c7689": [], "test.DSR.source_not_null_dsr_input_input_delegated_visibility_organisation_product__prod.d706364610": [], "test.DSR.source_not_null_dsr_input_input_delegated_visibility_product_type__prod.2918c41747": [], "test.DSR.source_not_null_dsr_input_input_delegated_visibility_subject_organisation_number__prod.e4f0c9d2a7": [], "test.DSR.source_not_null_dsr_input_input_delegated_visibility_subject_origin_organisation_number__prod.eb08a707ff": [], "test.DSR.source_unique_combination_of_columns_dsr_input_input_pln_mvt_depotstoredaysku_base_forecast_date__forecast_date__source_db_id__organisation_sku__organisation_location_id_from__organisation_location_id_to__model_version__forecast_components__loaded_timestamp__prod.f8cfd5dfb9": [], "test.DSR.source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_base_forecast_date__prod.f025ab6040": [], "test.DSR.source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_forecast_components__prod.ce1c65d8cf": [], "test.DSR.source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_forecast_date__prod.cfbe7bfc82": [], "test.DSR.source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_model_version__prod.b948cb7a45": [], "test.DSR.source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_organisation_location_id_from__prod.66a3b8d82d": [], "test.DSR.source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_organisation_location_id_to__prod.9d2503001b": [], "test.DSR.source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_organisation_sku__prod.938a37659b": [], "test.DSR.source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_source_db_id__prod.efb01e6cfb": [], "test.DSR.source_unique_combination_of_columns_dsr_input_input_pln_mvt_daysku_base_forecast_date__forecast_date__source_db_id__subject_business_organisation_number__organisation_sku__model_version__forecast_components__loaded_timestamp__prod.5ea859b8aa": [], "test.DSR.source_not_null_dsr_input_input_pln_mvt_daysku_base_forecast_date__prod.2f098a2e73": [], "test.DSR.source_not_null_dsr_input_input_pln_mvt_daysku_forecast_components__prod.34961f0b94": [], "test.DSR.source_not_null_dsr_input_input_pln_mvt_daysku_forecast_date__prod.e4d3c096c0": [], "test.DSR.source_not_null_dsr_input_input_pln_mvt_daysku_model_version__prod.c95b052781": [], "test.DSR.source_not_null_dsr_input_input_pln_mvt_daysku_organisation_sku__prod.887284b623": [], "test.DSR.source_not_null_dsr_input_input_pln_mvt_daysku_source_db_id__prod.d99e8bd8b0": [], "test.DSR.source_not_null_dsr_input_input_pln_mvt_daysku_subject_business_organisation_number__prod.cf51ed692a": [], "test.DSR.source_unique_combination_of_columns_dsr_input_input_pln_mvt_storedaysku_base_forecast_date__forecast_date__source_db_id__subject_business_organisation_number__subject_organisation_location_id_to__organisation_sku__model_version__forecast_components__loaded_timestamp__prod.5fe9ceeb7a": [], "test.DSR.source_not_null_dsr_input_input_pln_mvt_storedaysku_base_forecast_date__prod.0af88c40af": [], "test.DSR.source_not_null_dsr_input_input_pln_mvt_storedaysku_forecast_date__prod.3cdc011adb": [], "test.DSR.source_not_null_dsr_input_input_pln_mvt_storedaysku_model_version__prod.8ef7db2229": [], "test.DSR.source_not_null_dsr_input_input_pln_mvt_storedaysku_organisation_sku__prod.383ec86c07": [], "test.DSR.source_not_null_dsr_input_input_pln_mvt_storedaysku_source_db_id__prod.351d508b7d": [], "test.DSR.source_not_null_dsr_input_input_pln_mvt_storedaysku_subject_business_organisation_number__prod.924db6cf7c": [], "test.DSR.source_not_null_dsr_input_input_pln_mvt_storedaysku_subject_organisation_location_id_to__prod.28c7c6d059": [], "test.DSR.source_unique_combination_of_columns_dsr_input_input_pln_mvt_orgdepotdaysku_base_forecast_date__forecast_date__source_db_id__subject_organisation_sku__subject_origin_organisation_number__subject_business_organisation_number_from__subject_business_organisation_number_to__subject_organisation_location_id_to__model_version__forecast_components__loaded_timestamp__prod.3e06f1370a": [], "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_base_forecast_date__prod.77a0c710d3": [], "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_forecast_date__prod.805d5a60db": [], "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_model_version__prod.0a6dffe4f9": [], "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_source_db_id__prod.a56e7107d8": [], "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_subject_business_organisation_number_from__prod.652d883ca0": [], "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_subject_business_organisation_number_to__prod.07c316e02a": [], "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_subject_organisation_location_id_to__prod.eb53f2153c": [], "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_subject_organisation_sku__prod.73a0c522f5": [], "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_subject_origin_organisation_number__prod.16e5d6ccca": [], "test.DSR.source_unique_combination_of_columns_dsr_input_input_pln_mvt_orgstoredaysku_base_forecast_date__forecast_date__source_db_id__organisation_sku__subject_origin_organisation_number__subject_organisation_location_id_to__model_version__forecast_components__loaded_timestamp__prod.a22153026e": [], "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgstoredaysku_base_forecast_date__prod.49a12ae94d": [], "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgstoredaysku_forecast_date__prod.b9de2cd052": [], "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgstoredaysku_organisation_sku__prod.e1f5d6dd09": [], "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgstoredaysku_source_db_id__prod.8d432762d6": [], "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgstoredaysku_subject_business_organisation_number__prod.95bf8c693a": [], "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgstoredaysku_subject_organisation_location_id_to__prod.13d8784112": [], "test.DSR.source_unique_combination_of_columns_dsr_input_input_act_mvt_storedaysku_day_date__source_db_id__organisation_sku__organisation_location_id__loaded_timestamp__prod.945821c065": [], "test.DSR.source_not_null_dsr_input_input_act_mvt_storedaysku_day_date__prod.064d970468": [], "test.DSR.source_not_null_dsr_input_input_act_mvt_storedaysku_organisation_location_id__prod.207cbbc934": [], "test.DSR.source_not_null_dsr_input_input_act_mvt_storedaysku_organisation_sku__prod.78ff89c539": [], "test.DSR.source_not_null_dsr_input_input_act_mvt_storedaysku_source_db_id__prod.c0eec0eb1b": [], "test.DSR.source_unique_combination_of_columns_dsr_input_input_act_mvt_orgdepotdaycase_day_date__source_db_id__organisation_case__organisation_location_id__business_organisation_number_from__loaded_timestamp__prod.e3d31d8d7b": [], "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdaycase_business_organisation_number_from__prod.689f866149": [], "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdaycase_day_date__prod.07ed6e117c": [], "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdaycase_organisation_case__prod.5386c84bbb": [], "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdaycase_organisation_location_id__prod.415bd39b94": [], "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdaycase_source_db_id__prod.73ae8a12ac": [], "test.DSR.source_unique_combination_of_columns_dsr_input_input_act_mvt_orgdepotdayordercase_day_date__source_db_id__organisation_case__organisation_location_id__order_code__business_organisation_number_from__loaded_timestamp__prod.cce3ee2674": [], "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdayordercase_business_organisation_number_from__prod.5480634156": [], "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdayordercase_day_date__prod.fd84cbd0e6": [], "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdayordercase_order_code__prod.0ec5bad996": [], "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdayordercase_organisation_case__prod.324fe411d9": [], "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdayordercase_organisation_location_id__prod.9e498a71fd": [], "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdayordercase_source_db_id__prod.cc2f587dc6": [], "test.DSR.source_unique_combination_of_columns_dsr_input_input_act_mvt_depotstoredaysku_day_date__source_db_id__organisation_sku__organisation_location_id_from__organisation_location_id_to__loaded_timestamp__prod.a3b7676652": [], "test.DSR.source_not_null_dsr_input_input_act_mvt_depotstoredaysku_day_date__prod.85e761b8bf": [], "test.DSR.source_not_null_dsr_input_input_act_mvt_depotstoredaysku_organisation_location_id_from__prod.37c0656e44": [], "test.DSR.source_not_null_dsr_input_input_act_mvt_depotstoredaysku_organisation_location_id_to__prod.a8adf607ef": [], "test.DSR.source_not_null_dsr_input_input_act_mvt_depotstoredaysku_organisation_sku__prod.4df8d8320b": [], "test.DSR.source_not_null_dsr_input_input_act_mvt_depotstoredaysku_source_db_id__prod.3b595ecc7b": [], "test.DSR.source_unique_combination_of_columns_dsr_input_input_pln_inv_storedaysku_day_date__source_db_id__organisation_sku__ranged__organisation_location_id__loaded_timestamp__prod.b581e49b08": [], "test.DSR.source_not_null_dsr_input_input_pln_inv_storedaysku_day_date__prod.58e4cb82c5": [], "test.DSR.source_not_null_dsr_input_input_pln_inv_storedaysku_organisation_location_id__prod.e1afdc8980": [], "test.DSR.source_not_null_dsr_input_input_pln_inv_storedaysku_organisation_sku__prod.1532465672": [], "test.DSR.source_not_null_dsr_input_input_pln_inv_storedaysku_ranged__prod.7d2c424a06": [], "test.DSR.source_not_null_dsr_input_input_pln_inv_storedaysku_source_db_id__prod.c8794953fe": [], "test.DSR.source_unique_combination_of_columns_dsr_input_input_act_inv_locationdaysku_day_date__source_db_id__organisation_sku__stock_units__location_function__organisation_location_id__loaded_timestamp__prod.5577c95d06": [], "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaysku_day_date__prod.8e602c2390": [], "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaysku_location_function__prod.32ab7100b7": [], "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaysku_organisation_location_id__prod.c8aadcdef7": [], "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaysku_organisation_sku__prod.4ee0cc2d6c": [], "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaysku_source_db_id__prod.b867ccf4fd": [], "test.DSR.source_unique_combination_of_columns_dsr_input_input_act_inv_locationdaycase_day_date__source_db_id__organisation_case__stock_units__location_function__organisation_location_id__loaded_timestamp__prod.1d7645aa0b": [], "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaycase_day_date__prod.9c300e2a03": [], "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaycase_location_function__prod.e88646e3f0": [], "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaycase_organisation_case__prod.2f60dfc49c": [], "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaycase_organisation_location_id__prod.1a84575dfd": [], "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaycase_source_db_id__prod.99da0db65a": [], "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaycase_stock_units__prod.93ff225059": [], "source.DSR.dsr_input.input_promotion": ["test.DSR.source_not_null_dsr_input_input_promotion_creator_business_organisation_number__prod.17b744b048", "test.DSR.source_not_null_dsr_input_input_promotion_creator_origin_organisation_number__prod.b4c67e1d16", "test.DSR.source_not_null_dsr_input_input_promotion_end_date__prod.9a85a7968a", "test.DSR.source_not_null_dsr_input_input_promotion_organisation_sku__prod.e437cc1767", "test.DSR.source_not_null_dsr_input_input_promotion_promotion_number__prod.861ae017eb", "test.DSR.source_not_null_dsr_input_input_promotion_start_date__prod.649551479f", "test.DSR.source_not_null_dsr_input_input_promotion_subject_business_organisation_number__prod.d759003f39", "test.DSR.source_not_null_dsr_input_input_promotion_subject_origin_organisation_number__prod.37dc33bc40", "test.DSR.source_unique_combination_of_columns_dsr_input_input_promotion_creator_business_organisation_number__creator_origin_organisation_number__subject_origin_organisation_number__subject_business_organisation_number__promotion_number__start_date__end_date__organisation_sku__loaded_timestamp__prod.ee33c18097"], "source.DSR.dsr_input.input_date": ["test.DSR.source_not_null_dsr_input_input_date_day_date__prod.eebebe4184", "test.DSR.source_unique_combination_of_columns_dsr_input_input_date_day_date__prod.daec8cb4ff"], "source.DSR.dsr_input.input_calendar": ["test.DSR.source_not_null_dsr_input_input_calendar_business_organisation_number__prod.69a9cdf300", "test.DSR.source_not_null_dsr_input_input_calendar_day_date__prod.76f8ece26d", "test.DSR.source_not_null_dsr_input_input_calendar_origin_organisation_number__prod.c9137d503e", "test.DSR.source_unique_combination_of_columns_dsr_input_input_calendar_business_organisation_number__origin_organisation_number__day_date__loaded_timestamp__prod.6d088d8c19"], "source.DSR.dsr_input.input_location": ["test.DSR.source_not_null_dsr_input_input_location_business_organisation_number__prod.184616bc7b", "test.DSR.source_not_null_dsr_input_input_location_location_function__prod.7461a14a62", "test.DSR.source_not_null_dsr_input_input_location_organisation_location_id__prod.3394793195", "test.DSR.source_not_null_dsr_input_input_location_origin_organisation_number__prod.a00dae3370", "test.DSR.source_unique_combination_of_columns_dsr_input_input_location_business_organisation_number__origin_organisation_number__organisation_location_id__location_function__loaded_timestamp__prod.e4f9b94a2c"], "source.DSR.dsr_input.input_location_group": ["test.DSR.source_not_null_dsr_input_input_location_group_creator_business_organisation_number__prod.9c4f67566c", "test.DSR.source_not_null_dsr_input_input_location_group_creator_origin_organisation_number__prod.ae7bd904d7", "test.DSR.source_not_null_dsr_input_input_location_group_group_name__prod.52523df736", "test.DSR.source_not_null_dsr_input_input_location_group_location_function__prod.1fccbbd213", "test.DSR.source_not_null_dsr_input_input_location_group_organisation_location_id__prod.f5a291a0a4", "test.DSR.source_not_null_dsr_input_input_location_group_subject_business_organisation_number__prod.4fe4a63d73", "test.DSR.source_not_null_dsr_input_input_location_group_subject_origin_organisation_number__prod.df5f54f52b", "test.DSR.source_unique_combination_of_columns_dsr_input_input_location_group_creator_origin_organisation_number__creator_business_organisation_number__organisation_location_id__subject_origin_organisation_number__subject_business_organisation_number__location_function__group_name__loaded_timestamp__prod.d7acf79c1a"], "source.DSR.dsr_input.input_location_parentage": ["test.DSR.source_not_null_dsr_input_input_location_parentage_creator_business_organisation_number__prod.feeed9bdea", "test.DSR.source_not_null_dsr_input_input_location_parentage_creator_origin_organisation_number__prod.402412278a", "test.DSR.source_not_null_dsr_input_input_location_parentage_parent_business_organisation_number__prod.f5f14448b6", "test.DSR.source_not_null_dsr_input_input_location_parentage_parent_location_function__prod.e8a5793613", "test.DSR.source_not_null_dsr_input_input_location_parentage_parent_organisation_location_id__prod.4f5e8cefe7", "test.DSR.source_not_null_dsr_input_input_location_parentage_parent_origin_organisation_number__prod.2b70e2ebd6", "test.DSR.source_not_null_dsr_input_input_location_parentage_subject_business_organisation_number__prod.c075fdf360", "test.DSR.source_not_null_dsr_input_input_location_parentage_subject_location_function__prod.de6e44abf2", "test.DSR.source_not_null_dsr_input_input_location_parentage_subject_organisation_location_id__prod.b7bcbd7feb", "test.DSR.source_not_null_dsr_input_input_location_parentage_subject_origin_organisation_number__prod.1a097d2893", "test.DSR.source_unique_combination_of_columns_dsr_input_input_location_parentage_subject_origin_organisation_number__subject_business_organisation_number__subject_organisation_location_id__subject_location_function__parent_origin_organisation_number__parent_business_organisation_number__parent_organisation_location_id__parent_location_function__creator_origin_organisation_number__creator_business_organisation_number__loaded_timestamp__prod.c32c9d1b28"], "source.DSR.dsr_input.input_case": ["test.DSR.source_not_null_dsr_input_input_case_business_organisation_number__prod.30c50ece7b", "test.DSR.source_not_null_dsr_input_input_case_case_size__prod.a769f1420e", "test.DSR.source_not_null_dsr_input_input_case_organisation_case__prod.9af11ba595", "test.DSR.source_not_null_dsr_input_input_case_organisation_sku__prod.716e8b4fb4", "test.DSR.source_not_null_dsr_input_input_case_origin_organisation_number__prod.5f8386e20e", "test.DSR.source_unique_combination_of_columns_dsr_input_input_case_business_organisation_number__origin_organisation_number__organisation_case__organisation_sku__case_size__loaded_timestamp__prod.c16d710caa"], "source.DSR.dsr_input.input_case_grouping": ["test.DSR.source_not_null_dsr_input_input_case_grouping_creator_business_organisation_number__prod.c5142b9338", "test.DSR.source_not_null_dsr_input_input_case_grouping_creator_origin_organisation_number__prod.c5e2731fa2", "test.DSR.source_not_null_dsr_input_input_case_grouping_grouping_key__prod.7972c84e2b", "test.DSR.source_not_null_dsr_input_input_case_grouping_organisation_case__prod.c3e6a140d5", "test.DSR.source_not_null_dsr_input_input_case_grouping_subject_business_organisation_number__prod.a06b0f1c05", "test.DSR.source_not_null_dsr_input_input_case_grouping_subject_origin_organisation_number__prod.a8e45c7d81", "test.DSR.source_unique_combination_of_columns_dsr_input_input_case_grouping_creator_business_organisation_number__creator_origin_organisation_number__organisation_case__subject_origin_organisation_number__subject_business_organisation_number__grouping_key__loaded_timestamp__prod.0a81ded6b2"], "source.DSR.dsr_input.input_sku": ["test.DSR.source_not_null_dsr_input_input_sku_business_organisation_number__prod.cb81cc81cb", "test.DSR.source_not_null_dsr_input_input_sku_organisation_sku__prod.f8ce66955a", "test.DSR.source_not_null_dsr_input_input_sku_origin_organisation_number__prod.c6d66e2db2", "test.DSR.source_unique_combination_of_columns_dsr_input_input_sku_business_organisation_number__origin_organisation_number__organisation_sku__loaded_timestamp__prod.79d675cb44"], "source.DSR.dsr_input.input_sku_grouping": ["test.DSR.source_not_null_dsr_input_input_sku_grouping_creator_business_organisation_number__prod.cf516ad382", "test.DSR.source_not_null_dsr_input_input_sku_grouping_creator_origin_organisation_number__prod.4b1409afcf", "test.DSR.source_not_null_dsr_input_input_sku_grouping_group_name__prod.41b1a8f742", "test.DSR.source_not_null_dsr_input_input_sku_grouping_group_value__prod.6041822dc3", "test.DSR.source_not_null_dsr_input_input_sku_grouping_organisation_sku__prod.eeb336f8f9", "test.DSR.source_not_null_dsr_input_input_sku_grouping_subject_business_organisation_number__prod.bd48fbcb54", "test.DSR.source_not_null_dsr_input_input_sku_grouping_subject_origin_organisation_number__prod.67be80ab88", "test.DSR.source_unique_combination_of_columns_dsr_input_input_sku_grouping_creator_business_organisation_number__creator_origin_organisation_number__organisation_sku__subject_origin_organisation_number__subject_business_organisation_number__group_name__group_value__loaded_timestamp__prod.736dae4089"], "source.DSR.dsr_input.input_organisation_mapping": ["test.DSR.source_not_null_dsr_input_input_organisation_mapping_business_organisation_number__prod.c9ec6d8080", "test.DSR.source_not_null_dsr_input_input_organisation_mapping_origin_organisation_number__prod.25d92dfd8e", "test.DSR.source_unique_combination_of_columns_dsr_input_input_organisation_mapping_origin_organisation_number__business_organisation_number__loaded_timestamp__prod.ea7f9aa8a3"], "source.DSR.dsr_input.input_organisation": ["test.DSR.source_not_null_dsr_input_input_organisation_business_organisation_number__prod.8ab99da45a", "test.DSR.source_not_null_dsr_input_input_organisation_origin_organisation_number__prod.b673dbf060", "test.DSR.source_unique_combination_of_columns_dsr_input_input_organisation_business_organisation_number__origin_organisation_number__loaded_timestamp__prod.a7339c677b"], "source.DSR.dsr_input.input_organisation_parentage": ["test.DSR.source_not_null_dsr_input_input_organisation_parentage_business_organisation_number__prod.d35f954c48", "test.DSR.source_not_null_dsr_input_input_organisation_parentage_creator_business_organisation_number__prod.e6445a8bc2", "test.DSR.source_not_null_dsr_input_input_organisation_parentage_origin_organisation_number__prod.a5d0bcbc7b", "test.DSR.source_not_null_dsr_input_input_organisation_parentage_parent_business_organisation_number__prod.258375f2fc", "test.DSR.source_unique_combination_of_columns_dsr_input_input_organisation_parentage_business_organisation_number__origin_organisation_number__parent_origin_organisation_number__parent_business_organisation_number__creator_origin_organisation_number__creator_business_organisation_number__loaded_timestamp__prod.16f2a9c05c"], "source.DSR.dsr_input.input_delegated_visibility": ["test.DSR.source_not_null_dsr_input_input_delegated_visibility_delegated_status__prod.657967a0e2", "test.DSR.source_not_null_dsr_input_input_delegated_visibility_delegatee_organisation_number__prod.8a4ebd220a", "test.DSR.source_not_null_dsr_input_input_delegated_visibility_delegatee_origin_organisation_number__prod.da70a9cfad", "test.DSR.source_not_null_dsr_input_input_delegated_visibility_delegator_organisation_number__prod.fb62180c23", "test.DSR.source_not_null_dsr_input_input_delegated_visibility_delegator_origin_organisation_number__prod.175f6c7689", "test.DSR.source_not_null_dsr_input_input_delegated_visibility_organisation_product__prod.d706364610", "test.DSR.source_not_null_dsr_input_input_delegated_visibility_product_type__prod.2918c41747", "test.DSR.source_not_null_dsr_input_input_delegated_visibility_subject_organisation_number__prod.e4f0c9d2a7", "test.DSR.source_not_null_dsr_input_input_delegated_visibility_subject_origin_organisation_number__prod.eb08a707ff", "test.DSR.source_unique_combination_of_columns_dsr_input_input_delegated_visibility_delegator_origin_organisation_number__delegator_organisation_number__delegatee_origin_organisation_number__delegatee_organisation_number__subject_origin_organisation_number__subject_organisation_number__organisation_product__loaded_timestamp__prod.26a17780a5"], "source.DSR.dsr_input.input_pln_mvt_depotstoredaysku": ["test.DSR.source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_base_forecast_date__prod.f025ab6040", "test.DSR.source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_forecast_components__prod.ce1c65d8cf", "test.DSR.source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_forecast_date__prod.cfbe7bfc82", "test.DSR.source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_model_version__prod.b948cb7a45", "test.DSR.source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_organisation_location_id_from__prod.66a3b8d82d", "test.DSR.source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_organisation_location_id_to__prod.9d2503001b", "test.DSR.source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_organisation_sku__prod.938a37659b", "test.DSR.source_not_null_dsr_input_input_pln_mvt_depotstoredaysku_source_db_id__prod.efb01e6cfb", "test.DSR.source_unique_combination_of_columns_dsr_input_input_pln_mvt_depotstoredaysku_base_forecast_date__forecast_date__source_db_id__organisation_sku__organisation_location_id_from__organisation_location_id_to__model_version__forecast_components__loaded_timestamp__prod.f8cfd5dfb9"], "source.DSR.dsr_input.input_pln_mvt_daysku": ["test.DSR.source_not_null_dsr_input_input_pln_mvt_daysku_base_forecast_date__prod.2f098a2e73", "test.DSR.source_not_null_dsr_input_input_pln_mvt_daysku_forecast_components__prod.34961f0b94", "test.DSR.source_not_null_dsr_input_input_pln_mvt_daysku_forecast_date__prod.e4d3c096c0", "test.DSR.source_not_null_dsr_input_input_pln_mvt_daysku_model_version__prod.c95b052781", "test.DSR.source_not_null_dsr_input_input_pln_mvt_daysku_organisation_sku__prod.887284b623", "test.DSR.source_not_null_dsr_input_input_pln_mvt_daysku_source_db_id__prod.d99e8bd8b0", "test.DSR.source_not_null_dsr_input_input_pln_mvt_daysku_subject_business_organisation_number__prod.cf51ed692a", "test.DSR.source_unique_combination_of_columns_dsr_input_input_pln_mvt_daysku_base_forecast_date__forecast_date__source_db_id__subject_business_organisation_number__organisation_sku__model_version__forecast_components__loaded_timestamp__prod.5ea859b8aa"], "source.DSR.dsr_input.input_pln_mvt_storedaysku": ["test.DSR.source_not_null_dsr_input_input_pln_mvt_storedaysku_base_forecast_date__prod.0af88c40af", "test.DSR.source_not_null_dsr_input_input_pln_mvt_storedaysku_forecast_date__prod.3cdc011adb", "test.DSR.source_not_null_dsr_input_input_pln_mvt_storedaysku_model_version__prod.8ef7db2229", "test.DSR.source_not_null_dsr_input_input_pln_mvt_storedaysku_organisation_sku__prod.383ec86c07", "test.DSR.source_not_null_dsr_input_input_pln_mvt_storedaysku_source_db_id__prod.351d508b7d", "test.DSR.source_not_null_dsr_input_input_pln_mvt_storedaysku_subject_business_organisation_number__prod.924db6cf7c", "test.DSR.source_not_null_dsr_input_input_pln_mvt_storedaysku_subject_organisation_location_id_to__prod.28c7c6d059", "test.DSR.source_unique_combination_of_columns_dsr_input_input_pln_mvt_storedaysku_base_forecast_date__forecast_date__source_db_id__subject_business_organisation_number__subject_organisation_location_id_to__organisation_sku__model_version__forecast_components__loaded_timestamp__prod.5fe9ceeb7a"], "source.DSR.dsr_input.input_pln_mvt_orgdepotdaysku": ["test.DSR.source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_base_forecast_date__prod.77a0c710d3", "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_forecast_date__prod.805d5a60db", "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_model_version__prod.0a6dffe4f9", "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_source_db_id__prod.a56e7107d8", "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_subject_business_organisation_number_from__prod.652d883ca0", "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_subject_business_organisation_number_to__prod.07c316e02a", "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_subject_organisation_location_id_to__prod.eb53f2153c", "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_subject_organisation_sku__prod.73a0c522f5", "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgdepotdaysku_subject_origin_organisation_number__prod.16e5d6ccca", "test.DSR.source_unique_combination_of_columns_dsr_input_input_pln_mvt_orgdepotdaysku_base_forecast_date__forecast_date__source_db_id__subject_organisation_sku__subject_origin_organisation_number__subject_business_organisation_number_from__subject_business_organisation_number_to__subject_organisation_location_id_to__model_version__forecast_components__loaded_timestamp__prod.3e06f1370a"], "source.DSR.dsr_input.input_pln_mvt_orgstoredaysku": ["test.DSR.source_not_null_dsr_input_input_pln_mvt_orgstoredaysku_base_forecast_date__prod.49a12ae94d", "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgstoredaysku_forecast_date__prod.b9de2cd052", "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgstoredaysku_organisation_sku__prod.e1f5d6dd09", "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgstoredaysku_source_db_id__prod.8d432762d6", "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgstoredaysku_subject_business_organisation_number__prod.95bf8c693a", "test.DSR.source_not_null_dsr_input_input_pln_mvt_orgstoredaysku_subject_organisation_location_id_to__prod.13d8784112", "test.DSR.source_unique_combination_of_columns_dsr_input_input_pln_mvt_orgstoredaysku_base_forecast_date__forecast_date__source_db_id__organisation_sku__subject_origin_organisation_number__subject_organisation_location_id_to__model_version__forecast_components__loaded_timestamp__prod.a22153026e"], "source.DSR.dsr_input.input_act_mvt_storedaysku": ["test.DSR.source_not_null_dsr_input_input_act_mvt_storedaysku_day_date__prod.064d970468", "test.DSR.source_not_null_dsr_input_input_act_mvt_storedaysku_organisation_location_id__prod.207cbbc934", "test.DSR.source_not_null_dsr_input_input_act_mvt_storedaysku_organisation_sku__prod.78ff89c539", "test.DSR.source_not_null_dsr_input_input_act_mvt_storedaysku_source_db_id__prod.c0eec0eb1b", "test.DSR.source_unique_combination_of_columns_dsr_input_input_act_mvt_storedaysku_day_date__source_db_id__organisation_sku__organisation_location_id__loaded_timestamp__prod.945821c065"], "source.DSR.dsr_input.input_act_mvt_orgdepotdaycase": ["test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdaycase_business_organisation_number_from__prod.689f866149", "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdaycase_day_date__prod.07ed6e117c", "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdaycase_organisation_case__prod.5386c84bbb", "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdaycase_organisation_location_id__prod.415bd39b94", "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdaycase_source_db_id__prod.73ae8a12ac", "test.DSR.source_unique_combination_of_columns_dsr_input_input_act_mvt_orgdepotdaycase_day_date__source_db_id__organisation_case__organisation_location_id__business_organisation_number_from__loaded_timestamp__prod.e3d31d8d7b"], "source.DSR.dsr_input.input_act_mvt_orgdepotdayordercase": ["test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdayordercase_business_organisation_number_from__prod.5480634156", "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdayordercase_day_date__prod.fd84cbd0e6", "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdayordercase_order_code__prod.0ec5bad996", "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdayordercase_organisation_case__prod.324fe411d9", "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdayordercase_organisation_location_id__prod.9e498a71fd", "test.DSR.source_not_null_dsr_input_input_act_mvt_orgdepotdayordercase_source_db_id__prod.cc2f587dc6", "test.DSR.source_unique_combination_of_columns_dsr_input_input_act_mvt_orgdepotdayordercase_day_date__source_db_id__organisation_case__organisation_location_id__order_code__business_organisation_number_from__loaded_timestamp__prod.cce3ee2674"], "source.DSR.dsr_input.input_act_mvt_depotstoredaysku": ["test.DSR.source_not_null_dsr_input_input_act_mvt_depotstoredaysku_day_date__prod.85e761b8bf", "test.DSR.source_not_null_dsr_input_input_act_mvt_depotstoredaysku_organisation_location_id_from__prod.37c0656e44", "test.DSR.source_not_null_dsr_input_input_act_mvt_depotstoredaysku_organisation_location_id_to__prod.a8adf607ef", "test.DSR.source_not_null_dsr_input_input_act_mvt_depotstoredaysku_organisation_sku__prod.4df8d8320b", "test.DSR.source_not_null_dsr_input_input_act_mvt_depotstoredaysku_source_db_id__prod.3b595ecc7b", "test.DSR.source_unique_combination_of_columns_dsr_input_input_act_mvt_depotstoredaysku_day_date__source_db_id__organisation_sku__organisation_location_id_from__organisation_location_id_to__loaded_timestamp__prod.a3b7676652"], "source.DSR.dsr_input.input_pln_inv_storedaysku": ["test.DSR.source_not_null_dsr_input_input_pln_inv_storedaysku_day_date__prod.58e4cb82c5", "test.DSR.source_not_null_dsr_input_input_pln_inv_storedaysku_organisation_location_id__prod.e1afdc8980", "test.DSR.source_not_null_dsr_input_input_pln_inv_storedaysku_organisation_sku__prod.1532465672", "test.DSR.source_not_null_dsr_input_input_pln_inv_storedaysku_ranged__prod.7d2c424a06", "test.DSR.source_not_null_dsr_input_input_pln_inv_storedaysku_source_db_id__prod.c8794953fe", "test.DSR.source_unique_combination_of_columns_dsr_input_input_pln_inv_storedaysku_day_date__source_db_id__organisation_sku__ranged__organisation_location_id__loaded_timestamp__prod.b581e49b08"], "source.DSR.dsr_input.input_act_inv_locationdaysku": ["test.DSR.source_not_null_dsr_input_input_act_inv_locationdaysku_day_date__prod.8e602c2390", "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaysku_location_function__prod.32ab7100b7", "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaysku_organisation_location_id__prod.c8aadcdef7", "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaysku_organisation_sku__prod.4ee0cc2d6c", "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaysku_source_db_id__prod.b867ccf4fd", "test.DSR.source_unique_combination_of_columns_dsr_input_input_act_inv_locationdaysku_day_date__source_db_id__organisation_sku__stock_units__location_function__organisation_location_id__loaded_timestamp__prod.5577c95d06"], "source.DSR.dsr_input.input_act_inv_locationdaycase": ["test.DSR.source_not_null_dsr_input_input_act_inv_locationdaycase_day_date__prod.9c300e2a03", "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaycase_location_function__prod.e88646e3f0", "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaycase_organisation_case__prod.2f60dfc49c", "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaycase_organisation_location_id__prod.1a84575dfd", "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaycase_source_db_id__prod.99da0db65a", "test.DSR.source_not_null_dsr_input_input_act_inv_locationdaycase_stock_units__prod.93ff225059", "test.DSR.source_unique_combination_of_columns_dsr_input_input_act_inv_locationdaycase_day_date__source_db_id__organisation_case__stock_units__location_function__organisation_location_id__loaded_timestamp__prod.1d7645aa0b"]}}